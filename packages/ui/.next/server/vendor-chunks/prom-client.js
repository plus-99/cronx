"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/prom-client";
exports.ids = ["vendor-chunks/prom-client"];
exports.modules = {

/***/ "(rsc)/../../node_modules/prom-client/index.js":
/*!***********************************************!*\
  !*** ../../node_modules/prom-client/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * Prometheus client\n * @module Prometheus client\n */\n\n\n\nexports.register = __webpack_require__(/*! ./lib/registry */ \"(rsc)/../../node_modules/prom-client/lib/registry.js\").globalRegistry;\nexports.Registry = __webpack_require__(/*! ./lib/registry */ \"(rsc)/../../node_modules/prom-client/lib/registry.js\");\nObject.defineProperty(exports, \"contentType\", ({\n\tconfigurable: false,\n\tenumerable: true,\n\tget() {\n\t\treturn exports.register.contentType;\n\t},\n\tset(value) {\n\t\texports.register.setContentType(value);\n\t},\n}));\nexports.prometheusContentType = exports.Registry.PROMETHEUS_CONTENT_TYPE;\nexports.openMetricsContentType = exports.Registry.OPENMETRICS_CONTENT_TYPE;\nexports.validateMetricName = __webpack_require__(/*! ./lib/validation */ \"(rsc)/../../node_modules/prom-client/lib/validation.js\").validateMetricName;\n\nexports.Counter = __webpack_require__(/*! ./lib/counter */ \"(rsc)/../../node_modules/prom-client/lib/counter.js\");\nexports.Gauge = __webpack_require__(/*! ./lib/gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nexports.Histogram = __webpack_require__(/*! ./lib/histogram */ \"(rsc)/../../node_modules/prom-client/lib/histogram.js\");\nexports.Summary = __webpack_require__(/*! ./lib/summary */ \"(rsc)/../../node_modules/prom-client/lib/summary.js\");\nexports.Pushgateway = __webpack_require__(/*! ./lib/pushgateway */ \"(rsc)/../../node_modules/prom-client/lib/pushgateway.js\");\n\nexports.linearBuckets = __webpack_require__(/*! ./lib/bucketGenerators */ \"(rsc)/../../node_modules/prom-client/lib/bucketGenerators.js\").linearBuckets;\nexports.exponentialBuckets = __webpack_require__(/*! ./lib/bucketGenerators */ \"(rsc)/../../node_modules/prom-client/lib/bucketGenerators.js\").exponentialBuckets;\n\nexports.collectDefaultMetrics = __webpack_require__(/*! ./lib/defaultMetrics */ \"(rsc)/../../node_modules/prom-client/lib/defaultMetrics.js\");\n\nexports.aggregators = __webpack_require__(/*! ./lib/metricAggregators */ \"(rsc)/../../node_modules/prom-client/lib/metricAggregators.js\").aggregators;\nexports.AggregatorRegistry = __webpack_require__(/*! ./lib/cluster */ \"(rsc)/../../node_modules/prom-client/lib/cluster.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLG1JQUEyRDtBQUMzRCxvSEFBNEM7QUFDNUMsK0NBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxFQUFFO0FBQ0YsQ0FBQyxFQUFDO0FBQ0YsNkJBQTZCO0FBQzdCLDhCQUE4QjtBQUM5QixxSkFBMkU7O0FBRTNFLGlIQUEwQztBQUMxQywyR0FBc0M7QUFDdEMsdUhBQThDO0FBQzlDLGlIQUEwQztBQUMxQyw2SEFBa0Q7O0FBRWxELHVKQUF1RTtBQUN2RSxpS0FDcUQ7O0FBRXJELDZJQUErRDs7QUFFL0QscUpBQW9FO0FBQ3BFLDRIQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2luZGV4LmpzP2Q5ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQcm9tZXRoZXVzIGNsaWVudFxuICogQG1vZHVsZSBQcm9tZXRoZXVzIGNsaWVudFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5yZWdpc3RlciA9IHJlcXVpcmUoJy4vbGliL3JlZ2lzdHJ5JykuZ2xvYmFsUmVnaXN0cnk7XG5leHBvcnRzLlJlZ2lzdHJ5ID0gcmVxdWlyZSgnLi9saWIvcmVnaXN0cnknKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnY29udGVudFR5cGUnLCB7XG5cdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG5cdGVudW1lcmFibGU6IHRydWUsXG5cdGdldCgpIHtcblx0XHRyZXR1cm4gZXhwb3J0cy5yZWdpc3Rlci5jb250ZW50VHlwZTtcblx0fSxcblx0c2V0KHZhbHVlKSB7XG5cdFx0ZXhwb3J0cy5yZWdpc3Rlci5zZXRDb250ZW50VHlwZSh2YWx1ZSk7XG5cdH0sXG59KTtcbmV4cG9ydHMucHJvbWV0aGV1c0NvbnRlbnRUeXBlID0gZXhwb3J0cy5SZWdpc3RyeS5QUk9NRVRIRVVTX0NPTlRFTlRfVFlQRTtcbmV4cG9ydHMub3Blbk1ldHJpY3NDb250ZW50VHlwZSA9IGV4cG9ydHMuUmVnaXN0cnkuT1BFTk1FVFJJQ1NfQ09OVEVOVF9UWVBFO1xuZXhwb3J0cy52YWxpZGF0ZU1ldHJpY05hbWUgPSByZXF1aXJlKCcuL2xpYi92YWxpZGF0aW9uJykudmFsaWRhdGVNZXRyaWNOYW1lO1xuXG5leHBvcnRzLkNvdW50ZXIgPSByZXF1aXJlKCcuL2xpYi9jb3VudGVyJyk7XG5leHBvcnRzLkdhdWdlID0gcmVxdWlyZSgnLi9saWIvZ2F1Z2UnKTtcbmV4cG9ydHMuSGlzdG9ncmFtID0gcmVxdWlyZSgnLi9saWIvaGlzdG9ncmFtJyk7XG5leHBvcnRzLlN1bW1hcnkgPSByZXF1aXJlKCcuL2xpYi9zdW1tYXJ5Jyk7XG5leHBvcnRzLlB1c2hnYXRld2F5ID0gcmVxdWlyZSgnLi9saWIvcHVzaGdhdGV3YXknKTtcblxuZXhwb3J0cy5saW5lYXJCdWNrZXRzID0gcmVxdWlyZSgnLi9saWIvYnVja2V0R2VuZXJhdG9ycycpLmxpbmVhckJ1Y2tldHM7XG5leHBvcnRzLmV4cG9uZW50aWFsQnVja2V0cyA9XG5cdHJlcXVpcmUoJy4vbGliL2J1Y2tldEdlbmVyYXRvcnMnKS5leHBvbmVudGlhbEJ1Y2tldHM7XG5cbmV4cG9ydHMuY29sbGVjdERlZmF1bHRNZXRyaWNzID0gcmVxdWlyZSgnLi9saWIvZGVmYXVsdE1ldHJpY3MnKTtcblxuZXhwb3J0cy5hZ2dyZWdhdG9ycyA9IHJlcXVpcmUoJy4vbGliL21ldHJpY0FnZ3JlZ2F0b3JzJykuYWdncmVnYXRvcnM7XG5leHBvcnRzLkFnZ3JlZ2F0b3JSZWdpc3RyeSA9IHJlcXVpcmUoJy4vbGliL2NsdXN0ZXInKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/bucketGenerators.js":
/*!**************************************************************!*\
  !*** ../../node_modules/prom-client/lib/bucketGenerators.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.linearBuckets = (start, width, count) => {\n\tif (count < 1) {\n\t\tthrow new Error('Linear buckets needs a positive count');\n\t}\n\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start + i * width;\n\t}\n\treturn buckets;\n};\n\nexports.exponentialBuckets = (start, factor, count) => {\n\tif (start <= 0) {\n\t\tthrow new Error('Exponential buckets needs a positive start');\n\t}\n\tif (count < 1) {\n\t\tthrow new Error('Exponential buckets needs a positive count');\n\t}\n\tif (factor <= 1) {\n\t\tthrow new Error('Exponential buckets needs a factor greater than 1');\n\t}\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start;\n\t\tstart *= factor;\n\t}\n\treturn buckets;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9idWNrZXRHZW5lcmF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL2J1Y2tldEdlbmVyYXRvcnMuanM/YWZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMubGluZWFyQnVja2V0cyA9IChzdGFydCwgd2lkdGgsIGNvdW50KSA9PiB7XG5cdGlmIChjb3VudCA8IDEpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ0xpbmVhciBidWNrZXRzIG5lZWRzIGEgcG9zaXRpdmUgY291bnQnKTtcblx0fVxuXG5cdGNvbnN0IGJ1Y2tldHMgPSBuZXcgQXJyYXkoY291bnQpO1xuXHRmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcblx0XHRidWNrZXRzW2ldID0gc3RhcnQgKyBpICogd2lkdGg7XG5cdH1cblx0cmV0dXJuIGJ1Y2tldHM7XG59O1xuXG5leHBvcnRzLmV4cG9uZW50aWFsQnVja2V0cyA9IChzdGFydCwgZmFjdG9yLCBjb3VudCkgPT4ge1xuXHRpZiAoc3RhcnQgPD0gMCkge1xuXHRcdHRocm93IG5ldyBFcnJvcignRXhwb25lbnRpYWwgYnVja2V0cyBuZWVkcyBhIHBvc2l0aXZlIHN0YXJ0Jyk7XG5cdH1cblx0aWYgKGNvdW50IDwgMSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignRXhwb25lbnRpYWwgYnVja2V0cyBuZWVkcyBhIHBvc2l0aXZlIGNvdW50Jyk7XG5cdH1cblx0aWYgKGZhY3RvciA8PSAxKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdFeHBvbmVudGlhbCBidWNrZXRzIG5lZWRzIGEgZmFjdG9yIGdyZWF0ZXIgdGhhbiAxJyk7XG5cdH1cblx0Y29uc3QgYnVja2V0cyA9IG5ldyBBcnJheShjb3VudCk7XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuXHRcdGJ1Y2tldHNbaV0gPSBzdGFydDtcblx0XHRzdGFydCAqPSBmYWN0b3I7XG5cdH1cblx0cmV0dXJuIGJ1Y2tldHM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/bucketGenerators.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/cluster.js":
/*!*****************************************************!*\
  !*** ../../node_modules/prom-client/lib/cluster.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * Extends the Registry class with a `clusterMetrics` method that returns\n * aggregated metrics for all workers.\n *\n * In cluster workers, listens for and responds to requests for metrics by the\n * cluster master.\n */\n\nconst Registry = __webpack_require__(/*! ./registry */ \"(rsc)/../../node_modules/prom-client/lib/registry.js\");\nconst { Grouper } = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\nconst { aggregators } = __webpack_require__(/*! ./metricAggregators */ \"(rsc)/../../node_modules/prom-client/lib/metricAggregators.js\");\n// We need to lazy-load the 'cluster' module as some application servers -\n// namely Passenger - crash when it is imported.\nlet cluster = () => {\n\tconst data = __webpack_require__(/*! cluster */ \"cluster\");\n\tcluster = () => data;\n\treturn data;\n};\n\nconst GET_METRICS_REQ = 'prom-client:getMetricsReq';\nconst GET_METRICS_RES = 'prom-client:getMetricsRes';\n\nlet registries = [Registry.globalRegistry];\nlet requestCtr = 0; // Concurrency control\nlet listenersAdded = false;\nconst requests = new Map(); // Pending requests for workers' local metrics.\n\nclass AggregatorRegistry extends Registry {\n\tconstructor(regContentType = Registry.PROMETHEUS_CONTENT_TYPE) {\n\t\tsuper(regContentType);\n\t\taddListeners();\n\t}\n\n\t/**\n\t * Gets aggregated metrics for all workers. The optional callback and\n\t * returned Promise resolve with the same value; either may be used.\n\t * @return {Promise<string>} Promise that resolves with the aggregated\n\t *   metrics.\n\t */\n\tclusterMetrics() {\n\t\tconst requestId = requestCtr++;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet settled = false;\n\t\t\tfunction done(err, result) {\n\t\t\t\tif (settled) return;\n\t\t\t\tsettled = true;\n\t\t\t\tif (err) reject(err);\n\t\t\t\telse resolve(result);\n\t\t\t}\n\n\t\t\tconst request = {\n\t\t\t\tresponses: [],\n\t\t\t\tpending: 0,\n\t\t\t\tdone,\n\t\t\t\terrorTimeout: setTimeout(() => {\n\t\t\t\t\tconst err = new Error('Operation timed out.');\n\t\t\t\t\trequest.done(err);\n\t\t\t\t}, 5000),\n\t\t\t};\n\t\t\trequests.set(requestId, request);\n\n\t\t\tconst message = {\n\t\t\t\ttype: GET_METRICS_REQ,\n\t\t\t\trequestId,\n\t\t\t};\n\n\t\t\tfor (const id in cluster().workers) {\n\t\t\t\t// If the worker exits abruptly, it may still be in the workers\n\t\t\t\t// list but not able to communicate.\n\t\t\t\tif (cluster().workers[id].isConnected()) {\n\t\t\t\t\tcluster().workers[id].send(message);\n\t\t\t\t\trequest.pending++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (request.pending === 0) {\n\t\t\t\t// No workers were up\n\t\t\t\tclearTimeout(request.errorTimeout);\n\t\t\t\tprocess.nextTick(() => done(null, ''));\n\t\t\t}\n\t\t});\n\t}\n\n\tget contentType() {\n\t\treturn super.contentType;\n\t}\n\n\t/**\n\t * Creates a new Registry instance from an array of metrics that were\n\t * created by `registry.getMetricsAsJSON()`. Metrics are aggregated using\n\t * the method specified by their `aggregator` property, or by summation if\n\t * `aggregator` is undefined.\n\t * @param {Array} metricsArr Array of metrics, each of which created by\n\t *   `registry.getMetricsAsJSON()`.\n\t * @param {string} registryType content type of the new registry. Defaults\n\t * to PROMETHEUS_CONTENT_TYPE.\n\t * @return {Registry} aggregated registry.\n\t */\n\tstatic aggregate(\n\t\tmetricsArr,\n\t\tregistryType = Registry.PROMETHEUS_CONTENT_TYPE,\n\t) {\n\t\tconst aggregatedRegistry = new Registry();\n\t\tconst metricsByName = new Grouper();\n\n\t\taggregatedRegistry.setContentType(registryType);\n\n\t\t// Gather by name\n\t\tmetricsArr.forEach(metrics => {\n\t\t\tmetrics.forEach(metric => {\n\t\t\t\tmetricsByName.add(metric.name, metric);\n\t\t\t});\n\t\t});\n\n\t\t// Aggregate gathered metrics.\n\t\tmetricsByName.forEach(metrics => {\n\t\t\tconst aggregatorName = metrics[0].aggregator;\n\t\t\tconst aggregatorFn = aggregators[aggregatorName];\n\t\t\tif (typeof aggregatorFn !== 'function') {\n\t\t\t\tthrow new Error(`'${aggregatorName}' is not a defined aggregator.`);\n\t\t\t}\n\t\t\tconst aggregatedMetric = aggregatorFn(metrics);\n\t\t\t// NB: The 'omit' aggregator returns undefined.\n\t\t\tif (aggregatedMetric) {\n\t\t\t\tconst aggregatedMetricWrapper = Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tget: () => aggregatedMetric,\n\t\t\t\t\t},\n\t\t\t\t\taggregatedMetric,\n\t\t\t\t);\n\t\t\t\taggregatedRegistry.registerMetric(aggregatedMetricWrapper);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregatedRegistry;\n\t}\n\n\t/**\n\t * Sets the registry or registries to be aggregated. Call from workers to\n\t * use a registry/registries other than the default global registry.\n\t * @param {Array<Registry>|Registry} regs Registry or registries to be\n\t *   aggregated.\n\t * @return {void}\n\t */\n\tstatic setRegistries(regs) {\n\t\tif (!Array.isArray(regs)) regs = [regs];\n\t\tregs.forEach(reg => {\n\t\t\tif (!(reg instanceof Registry)) {\n\t\t\t\tthrow new TypeError(`Expected Registry, got ${typeof reg}`);\n\t\t\t}\n\t\t});\n\t\tregistries = regs;\n\t}\n}\n\n/**\n * Adds event listeners for cluster aggregation. Idempotent (safe to call more\n * than once).\n * @return {void}\n */\nfunction addListeners() {\n\tif (listenersAdded) return;\n\tlistenersAdded = true;\n\n\tif (cluster().isMaster) {\n\t\t// Listen for worker responses to requests for local metrics\n\t\tcluster().on('message', (worker, message) => {\n\t\t\tif (message.type === GET_METRICS_RES) {\n\t\t\t\tconst request = requests.get(message.requestId);\n\n\t\t\t\tif (message.error) {\n\t\t\t\t\trequest.done(new Error(message.error));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage.metrics.forEach(registry => request.responses.push(registry));\n\t\t\t\trequest.pending--;\n\n\t\t\t\tif (request.pending === 0) {\n\t\t\t\t\t// finalize\n\t\t\t\t\trequests.delete(message.requestId);\n\t\t\t\t\tclearTimeout(request.errorTimeout);\n\n\t\t\t\t\tconst registry = AggregatorRegistry.aggregate(request.responses);\n\t\t\t\t\tconst promString = registry.metrics();\n\t\t\t\t\trequest.done(null, promString);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tif (cluster().isWorker) {\n\t\t// Respond to master's requests for worker's local metrics.\n\t\tprocess.on('message', message => {\n\t\t\tif (message.type === GET_METRICS_REQ) {\n\t\t\t\tPromise.all(registries.map(r => r.getMetricsAsJSON()))\n\t\t\t\t\t.then(metrics => {\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\t\t\t\trequestId: message.requestId,\n\t\t\t\t\t\t\tmetrics,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\t\t\t\trequestId: message.requestId,\n\t\t\t\t\t\t\terror: error.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = AggregatorRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/cluster.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/counter.js":
/*!*****************************************************!*\
  !*** ../../node_modules/prom-client/lib/counter.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Counter metric\n */\n\n\nconst util = __webpack_require__(/*! util */ \"util\");\nconst {\n\thashObject,\n\tisObject,\n\tgetLabels,\n\tremoveLabels,\n\tnowTimestamp,\n} = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\nconst { validateLabel } = __webpack_require__(/*! ./validation */ \"(rsc)/../../node_modules/prom-client/lib/validation.js\");\nconst { Metric } = __webpack_require__(/*! ./metric */ \"(rsc)/../../node_modules/prom-client/lib/metric.js\");\nconst Exemplar = __webpack_require__(/*! ./exemplar */ \"(rsc)/../../node_modules/prom-client/lib/exemplar.js\");\n\nclass Counter extends Metric {\n\tconstructor(config) {\n\t\tsuper(config);\n\t\tthis.type = 'counter';\n\t\tthis.defaultLabels = {};\n\t\tthis.defaultValue = 1;\n\t\tthis.defaultExemplarLabelSet = {};\n\t\tif (config.enableExemplars) {\n\t\t\tthis.enableExemplars = true;\n\t\t\tthis.inc = this.incWithExemplar;\n\t\t} else {\n\t\t\tthis.inc = this.incWithoutExemplar;\n\t\t}\n\t}\n\n\t/**\n\t * Increment counter\n\t * @param {object} labels - What label you want to be incremented\n\t * @param {Number} value - Value to increment, if omitted increment with 1\n\t * @returns {object} results - object with information about the inc operation\n\t * @returns {string} results.labelHash - hash representation of the labels\n\t */\n\tincWithoutExemplar(labels, value) {\n\t\tlet hash = '';\n\t\tif (isObject(labels)) {\n\t\t\thash = hashObject(labels, this.sortedLabelNames);\n\t\t\tvalidateLabel(this.labelNames, labels);\n\t\t} else {\n\t\t\tvalue = labels;\n\t\t\tlabels = {};\n\t\t}\n\n\t\tif (value && !Number.isFinite(value)) {\n\t\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t\t}\n\t\tif (value < 0) {\n\t\t\tthrow new Error('It is not possible to decrease a counter');\n\t\t}\n\n\t\tif (value === null || value === undefined) value = 1;\n\n\t\tsetValue(this.hashMap, value, labels, hash);\n\n\t\treturn { labelHash: hash };\n\t}\n\n\t/**\n\t * Increment counter with exemplar, same as inc but accepts labels for an\n\t * exemplar.\n\t * If no label is provided the current exemplar labels are kept unchanged\n\t * (defaults to empty set).\n\t *\n\t * @param {object} incOpts - Object with options about what metric to increase\n\t * @param {object} incOpts.labels - What label you want to be incremented,\n\t *                                  defaults to null (metric with no labels)\n\t * @param {Number} incOpts.value - Value to increment, defaults to 1\n\t * @param {object} incOpts.exemplarLabels - Key-value  labels for the\n\t *                                          exemplar, defaults to empty set {}\n\t * @returns {void}\n\t */\n\tincWithExemplar({\n\t\tlabels = this.defaultLabels,\n\t\tvalue = this.defaultValue,\n\t\texemplarLabels = this.defaultExemplarLabelSet,\n\t} = {}) {\n\t\tconst res = this.incWithoutExemplar(labels, value);\n\t\tthis.updateExemplar(exemplarLabels, value, res.labelHash);\n\t}\n\n\tupdateExemplar(exemplarLabels, value, hash) {\n\t\tif (exemplarLabels === this.defaultExemplarLabelSet) return;\n\t\tif (!isObject(this.hashMap[hash].exemplar)) {\n\t\t\tthis.hashMap[hash].exemplar = new Exemplar();\n\t\t}\n\t\tthis.hashMap[hash].exemplar.validateExemplarLabelSet(exemplarLabels);\n\t\tthis.hashMap[hash].exemplar.labelSet = exemplarLabels;\n\t\tthis.hashMap[hash].exemplar.value = value ? value : 1;\n\t\tthis.hashMap[hash].exemplar.timestamp = nowTimestamp();\n\t}\n\n\t/**\n\t * Reset counter\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0);\n\t\t}\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype: this.type,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args) || {};\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args) || {};\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn removeLabels.call(this, this.hashMap, labels, this.sortedLabelNames);\n\t}\n}\n\nfunction setValue(hashMap, value, labels = {}, hash = '') {\n\tif (hashMap[hash]) {\n\t\thashMap[hash].value += value;\n\t} else {\n\t\thashMap[hash] = { value, labels };\n\t}\n\treturn hashMap;\n}\n\nmodule.exports = Counter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9jb3VudGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLEVBQUUsbUJBQU8sQ0FBQyxnRUFBUTtBQUNwQixRQUFRLGdCQUFnQixFQUFFLG1CQUFPLENBQUMsNEVBQWM7QUFDaEQsUUFBUSxTQUFTLEVBQUUsbUJBQU8sQ0FBQyxvRUFBVTtBQUNyQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBWTs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVEQUF1RCxtQkFBbUI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEI7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBLEdBQUc7QUFDSCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL2NvdW50ZXIuanM/NDA3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvdW50ZXIgbWV0cmljXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbmNvbnN0IHtcblx0aGFzaE9iamVjdCxcblx0aXNPYmplY3QsXG5cdGdldExhYmVscyxcblx0cmVtb3ZlTGFiZWxzLFxuXHRub3dUaW1lc3RhbXAsXG59ID0gcmVxdWlyZSgnLi91dGlsJyk7XG5jb25zdCB7IHZhbGlkYXRlTGFiZWwgfSA9IHJlcXVpcmUoJy4vdmFsaWRhdGlvbicpO1xuY29uc3QgeyBNZXRyaWMgfSA9IHJlcXVpcmUoJy4vbWV0cmljJyk7XG5jb25zdCBFeGVtcGxhciA9IHJlcXVpcmUoJy4vZXhlbXBsYXInKTtcblxuY2xhc3MgQ291bnRlciBleHRlbmRzIE1ldHJpYyB7XG5cdGNvbnN0cnVjdG9yKGNvbmZpZykge1xuXHRcdHN1cGVyKGNvbmZpZyk7XG5cdFx0dGhpcy50eXBlID0gJ2NvdW50ZXInO1xuXHRcdHRoaXMuZGVmYXVsdExhYmVscyA9IHt9O1xuXHRcdHRoaXMuZGVmYXVsdFZhbHVlID0gMTtcblx0XHR0aGlzLmRlZmF1bHRFeGVtcGxhckxhYmVsU2V0ID0ge307XG5cdFx0aWYgKGNvbmZpZy5lbmFibGVFeGVtcGxhcnMpIHtcblx0XHRcdHRoaXMuZW5hYmxlRXhlbXBsYXJzID0gdHJ1ZTtcblx0XHRcdHRoaXMuaW5jID0gdGhpcy5pbmNXaXRoRXhlbXBsYXI7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuaW5jID0gdGhpcy5pbmNXaXRob3V0RXhlbXBsYXI7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIEluY3JlbWVudCBjb3VudGVyXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBsYWJlbHMgLSBXaGF0IGxhYmVsIHlvdSB3YW50IHRvIGJlIGluY3JlbWVudGVkXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSB2YWx1ZSAtIFZhbHVlIHRvIGluY3JlbWVudCwgaWYgb21pdHRlZCBpbmNyZW1lbnQgd2l0aCAxXG5cdCAqIEByZXR1cm5zIHtvYmplY3R9IHJlc3VsdHMgLSBvYmplY3Qgd2l0aCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgaW5jIG9wZXJhdGlvblxuXHQgKiBAcmV0dXJucyB7c3RyaW5nfSByZXN1bHRzLmxhYmVsSGFzaCAtIGhhc2ggcmVwcmVzZW50YXRpb24gb2YgdGhlIGxhYmVsc1xuXHQgKi9cblx0aW5jV2l0aG91dEV4ZW1wbGFyKGxhYmVscywgdmFsdWUpIHtcblx0XHRsZXQgaGFzaCA9ICcnO1xuXHRcdGlmIChpc09iamVjdChsYWJlbHMpKSB7XG5cdFx0XHRoYXNoID0gaGFzaE9iamVjdChsYWJlbHMsIHRoaXMuc29ydGVkTGFiZWxOYW1lcyk7XG5cdFx0XHR2YWxpZGF0ZUxhYmVsKHRoaXMubGFiZWxOYW1lcywgbGFiZWxzKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFsdWUgPSBsYWJlbHM7XG5cdFx0XHRsYWJlbHMgPSB7fTtcblx0XHR9XG5cblx0XHRpZiAodmFsdWUgJiYgIU51bWJlci5pc0Zpbml0ZSh2YWx1ZSkpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoYFZhbHVlIGlzIG5vdCBhIHZhbGlkIG51bWJlcjogJHt1dGlsLmZvcm1hdCh2YWx1ZSl9YCk7XG5cdFx0fVxuXHRcdGlmICh2YWx1ZSA8IDApIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignSXQgaXMgbm90IHBvc3NpYmxlIHRvIGRlY3JlYXNlIGEgY291bnRlcicpO1xuXHRcdH1cblxuXHRcdGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB2YWx1ZSA9IDE7XG5cblx0XHRzZXRWYWx1ZSh0aGlzLmhhc2hNYXAsIHZhbHVlLCBsYWJlbHMsIGhhc2gpO1xuXG5cdFx0cmV0dXJuIHsgbGFiZWxIYXNoOiBoYXNoIH07XG5cdH1cblxuXHQvKipcblx0ICogSW5jcmVtZW50IGNvdW50ZXIgd2l0aCBleGVtcGxhciwgc2FtZSBhcyBpbmMgYnV0IGFjY2VwdHMgbGFiZWxzIGZvciBhblxuXHQgKiBleGVtcGxhci5cblx0ICogSWYgbm8gbGFiZWwgaXMgcHJvdmlkZWQgdGhlIGN1cnJlbnQgZXhlbXBsYXIgbGFiZWxzIGFyZSBrZXB0IHVuY2hhbmdlZFxuXHQgKiAoZGVmYXVsdHMgdG8gZW1wdHkgc2V0KS5cblx0ICpcblx0ICogQHBhcmFtIHtvYmplY3R9IGluY09wdHMgLSBPYmplY3Qgd2l0aCBvcHRpb25zIGFib3V0IHdoYXQgbWV0cmljIHRvIGluY3JlYXNlXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBpbmNPcHRzLmxhYmVscyAtIFdoYXQgbGFiZWwgeW91IHdhbnQgdG8gYmUgaW5jcmVtZW50ZWQsXG5cdCAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzIHRvIG51bGwgKG1ldHJpYyB3aXRoIG5vIGxhYmVscylcblx0ICogQHBhcmFtIHtOdW1iZXJ9IGluY09wdHMudmFsdWUgLSBWYWx1ZSB0byBpbmNyZW1lbnQsIGRlZmF1bHRzIHRvIDFcblx0ICogQHBhcmFtIHtvYmplY3R9IGluY09wdHMuZXhlbXBsYXJMYWJlbHMgLSBLZXktdmFsdWUgIGxhYmVscyBmb3IgdGhlXG5cdCAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlbXBsYXIsIGRlZmF1bHRzIHRvIGVtcHR5IHNldCB7fVxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdGluY1dpdGhFeGVtcGxhcih7XG5cdFx0bGFiZWxzID0gdGhpcy5kZWZhdWx0TGFiZWxzLFxuXHRcdHZhbHVlID0gdGhpcy5kZWZhdWx0VmFsdWUsXG5cdFx0ZXhlbXBsYXJMYWJlbHMgPSB0aGlzLmRlZmF1bHRFeGVtcGxhckxhYmVsU2V0LFxuXHR9ID0ge30pIHtcblx0XHRjb25zdCByZXMgPSB0aGlzLmluY1dpdGhvdXRFeGVtcGxhcihsYWJlbHMsIHZhbHVlKTtcblx0XHR0aGlzLnVwZGF0ZUV4ZW1wbGFyKGV4ZW1wbGFyTGFiZWxzLCB2YWx1ZSwgcmVzLmxhYmVsSGFzaCk7XG5cdH1cblxuXHR1cGRhdGVFeGVtcGxhcihleGVtcGxhckxhYmVscywgdmFsdWUsIGhhc2gpIHtcblx0XHRpZiAoZXhlbXBsYXJMYWJlbHMgPT09IHRoaXMuZGVmYXVsdEV4ZW1wbGFyTGFiZWxTZXQpIHJldHVybjtcblx0XHRpZiAoIWlzT2JqZWN0KHRoaXMuaGFzaE1hcFtoYXNoXS5leGVtcGxhcikpIHtcblx0XHRcdHRoaXMuaGFzaE1hcFtoYXNoXS5leGVtcGxhciA9IG5ldyBFeGVtcGxhcigpO1xuXHRcdH1cblx0XHR0aGlzLmhhc2hNYXBbaGFzaF0uZXhlbXBsYXIudmFsaWRhdGVFeGVtcGxhckxhYmVsU2V0KGV4ZW1wbGFyTGFiZWxzKTtcblx0XHR0aGlzLmhhc2hNYXBbaGFzaF0uZXhlbXBsYXIubGFiZWxTZXQgPSBleGVtcGxhckxhYmVscztcblx0XHR0aGlzLmhhc2hNYXBbaGFzaF0uZXhlbXBsYXIudmFsdWUgPSB2YWx1ZSA/IHZhbHVlIDogMTtcblx0XHR0aGlzLmhhc2hNYXBbaGFzaF0uZXhlbXBsYXIudGltZXN0YW1wID0gbm93VGltZXN0YW1wKCk7XG5cdH1cblxuXHQvKipcblx0ICogUmVzZXQgY291bnRlclxuXHQgKiBAcmV0dXJucyB7dm9pZH1cblx0ICovXG5cdHJlc2V0KCkge1xuXHRcdHRoaXMuaGFzaE1hcCA9IHt9O1xuXHRcdGlmICh0aGlzLmxhYmVsTmFtZXMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRzZXRWYWx1ZSh0aGlzLmhhc2hNYXAsIDApO1xuXHRcdH1cblx0fVxuXG5cdGFzeW5jIGdldCgpIHtcblx0XHRpZiAodGhpcy5jb2xsZWN0KSB7XG5cdFx0XHRjb25zdCB2ID0gdGhpcy5jb2xsZWN0KCk7XG5cdFx0XHRpZiAodiBpbnN0YW5jZW9mIFByb21pc2UpIGF3YWl0IHY7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdGhlbHA6IHRoaXMuaGVscCxcblx0XHRcdG5hbWU6IHRoaXMubmFtZSxcblx0XHRcdHR5cGU6IHRoaXMudHlwZSxcblx0XHRcdHZhbHVlczogT2JqZWN0LnZhbHVlcyh0aGlzLmhhc2hNYXApLFxuXHRcdFx0YWdncmVnYXRvcjogdGhpcy5hZ2dyZWdhdG9yLFxuXHRcdH07XG5cdH1cblxuXHRsYWJlbHMoLi4uYXJncykge1xuXHRcdGNvbnN0IGxhYmVscyA9IGdldExhYmVscyh0aGlzLmxhYmVsTmFtZXMsIGFyZ3MpIHx8IHt9O1xuXHRcdHJldHVybiB7XG5cdFx0XHRpbmM6IHRoaXMuaW5jLmJpbmQodGhpcywgbGFiZWxzKSxcblx0XHR9O1xuXHR9XG5cblx0cmVtb3ZlKC4uLmFyZ3MpIHtcblx0XHRjb25zdCBsYWJlbHMgPSBnZXRMYWJlbHModGhpcy5sYWJlbE5hbWVzLCBhcmdzKSB8fCB7fTtcblx0XHR2YWxpZGF0ZUxhYmVsKHRoaXMubGFiZWxOYW1lcywgbGFiZWxzKTtcblx0XHRyZXR1cm4gcmVtb3ZlTGFiZWxzLmNhbGwodGhpcywgdGhpcy5oYXNoTWFwLCBsYWJlbHMsIHRoaXMuc29ydGVkTGFiZWxOYW1lcyk7XG5cdH1cbn1cblxuZnVuY3Rpb24gc2V0VmFsdWUoaGFzaE1hcCwgdmFsdWUsIGxhYmVscyA9IHt9LCBoYXNoID0gJycpIHtcblx0aWYgKGhhc2hNYXBbaGFzaF0pIHtcblx0XHRoYXNoTWFwW2hhc2hdLnZhbHVlICs9IHZhbHVlO1xuXHR9IGVsc2Uge1xuXHRcdGhhc2hNYXBbaGFzaF0gPSB7IHZhbHVlLCBsYWJlbHMgfTtcblx0fVxuXHRyZXR1cm4gaGFzaE1hcDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb3VudGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/counter.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/defaultMetrics.js":
/*!************************************************************!*\
  !*** ../../node_modules/prom-client/lib/defaultMetrics.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst { isObject } = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\n\n// Default metrics.\nconst processCpuTotal = __webpack_require__(/*! ./metrics/processCpuTotal */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processCpuTotal.js\");\nconst processStartTime = __webpack_require__(/*! ./metrics/processStartTime */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processStartTime.js\");\nconst osMemoryHeap = __webpack_require__(/*! ./metrics/osMemoryHeap */ \"(rsc)/../../node_modules/prom-client/lib/metrics/osMemoryHeap.js\");\nconst processOpenFileDescriptors = __webpack_require__(/*! ./metrics/processOpenFileDescriptors */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processOpenFileDescriptors.js\");\nconst processMaxFileDescriptors = __webpack_require__(/*! ./metrics/processMaxFileDescriptors */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processMaxFileDescriptors.js\");\nconst eventLoopLag = __webpack_require__(/*! ./metrics/eventLoopLag */ \"(rsc)/../../node_modules/prom-client/lib/metrics/eventLoopLag.js\");\nconst processHandles = __webpack_require__(/*! ./metrics/processHandles */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processHandles.js\");\nconst processRequests = __webpack_require__(/*! ./metrics/processRequests */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processRequests.js\");\nconst processResources = __webpack_require__(/*! ./metrics/processResources */ \"(rsc)/../../node_modules/prom-client/lib/metrics/processResources.js\");\nconst heapSizeAndUsed = __webpack_require__(/*! ./metrics/heapSizeAndUsed */ \"(rsc)/../../node_modules/prom-client/lib/metrics/heapSizeAndUsed.js\");\nconst heapSpacesSizeAndUsed = __webpack_require__(/*! ./metrics/heapSpacesSizeAndUsed */ \"(rsc)/../../node_modules/prom-client/lib/metrics/heapSpacesSizeAndUsed.js\");\nconst version = __webpack_require__(/*! ./metrics/version */ \"(rsc)/../../node_modules/prom-client/lib/metrics/version.js\");\nconst gc = __webpack_require__(/*! ./metrics/gc */ \"(rsc)/../../node_modules/prom-client/lib/metrics/gc.js\");\n\nconst metrics = {\n\tprocessCpuTotal,\n\tprocessStartTime,\n\tosMemoryHeap,\n\tprocessOpenFileDescriptors,\n\tprocessMaxFileDescriptors,\n\teventLoopLag,\n\t...(typeof process.getActiveResourcesInfo === 'function'\n\t\t? { processResources }\n\t\t: {}),\n\tprocessHandles,\n\tprocessRequests,\n\theapSizeAndUsed,\n\theapSpacesSizeAndUsed,\n\tversion,\n\tgc,\n};\nconst metricsList = Object.keys(metrics);\n\nmodule.exports = function collectDefaultMetrics(config) {\n\tif (config !== null && config !== undefined && !isObject(config)) {\n\t\tthrow new TypeError('config must be null, undefined, or an object');\n\t}\n\n\tconfig = { eventLoopMonitoringPrecision: 10, ...config };\n\n\tfor (const metric of Object.values(metrics)) {\n\t\tmetric(config.register, config);\n\t}\n};\n\nmodule.exports.metricsList = metricsList;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9kZWZhdWx0TWV0cmljcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixRQUFRLFdBQVcsRUFBRSxtQkFBTyxDQUFDLGdFQUFROztBQUVyQztBQUNBLHdCQUF3QixtQkFBTyxDQUFDLHNHQUEyQjtBQUMzRCx5QkFBeUIsbUJBQU8sQ0FBQyx3R0FBNEI7QUFDN0QscUJBQXFCLG1CQUFPLENBQUMsZ0dBQXdCO0FBQ3JELG1DQUFtQyxtQkFBTyxDQUFDLDRIQUFzQztBQUNqRixrQ0FBa0MsbUJBQU8sQ0FBQywwSEFBcUM7QUFDL0UscUJBQXFCLG1CQUFPLENBQUMsZ0dBQXdCO0FBQ3JELHVCQUF1QixtQkFBTyxDQUFDLG9HQUEwQjtBQUN6RCx3QkFBd0IsbUJBQU8sQ0FBQyxzR0FBMkI7QUFDM0QseUJBQXlCLG1CQUFPLENBQUMsd0dBQTRCO0FBQzdELHdCQUF3QixtQkFBTyxDQUFDLHNHQUEyQjtBQUMzRCw4QkFBOEIsbUJBQU8sQ0FBQyxrSEFBaUM7QUFDdkUsZ0JBQWdCLG1CQUFPLENBQUMsc0ZBQW1CO0FBQzNDLFdBQVcsbUJBQU8sQ0FBQyw0RUFBYzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9kZWZhdWx0TWV0cmljcy5qcz84MzJiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBpc09iamVjdCB9ID0gcmVxdWlyZSgnLi91dGlsJyk7XG5cbi8vIERlZmF1bHQgbWV0cmljcy5cbmNvbnN0IHByb2Nlc3NDcHVUb3RhbCA9IHJlcXVpcmUoJy4vbWV0cmljcy9wcm9jZXNzQ3B1VG90YWwnKTtcbmNvbnN0IHByb2Nlc3NTdGFydFRpbWUgPSByZXF1aXJlKCcuL21ldHJpY3MvcHJvY2Vzc1N0YXJ0VGltZScpO1xuY29uc3Qgb3NNZW1vcnlIZWFwID0gcmVxdWlyZSgnLi9tZXRyaWNzL29zTWVtb3J5SGVhcCcpO1xuY29uc3QgcHJvY2Vzc09wZW5GaWxlRGVzY3JpcHRvcnMgPSByZXF1aXJlKCcuL21ldHJpY3MvcHJvY2Vzc09wZW5GaWxlRGVzY3JpcHRvcnMnKTtcbmNvbnN0IHByb2Nlc3NNYXhGaWxlRGVzY3JpcHRvcnMgPSByZXF1aXJlKCcuL21ldHJpY3MvcHJvY2Vzc01heEZpbGVEZXNjcmlwdG9ycycpO1xuY29uc3QgZXZlbnRMb29wTGFnID0gcmVxdWlyZSgnLi9tZXRyaWNzL2V2ZW50TG9vcExhZycpO1xuY29uc3QgcHJvY2Vzc0hhbmRsZXMgPSByZXF1aXJlKCcuL21ldHJpY3MvcHJvY2Vzc0hhbmRsZXMnKTtcbmNvbnN0IHByb2Nlc3NSZXF1ZXN0cyA9IHJlcXVpcmUoJy4vbWV0cmljcy9wcm9jZXNzUmVxdWVzdHMnKTtcbmNvbnN0IHByb2Nlc3NSZXNvdXJjZXMgPSByZXF1aXJlKCcuL21ldHJpY3MvcHJvY2Vzc1Jlc291cmNlcycpO1xuY29uc3QgaGVhcFNpemVBbmRVc2VkID0gcmVxdWlyZSgnLi9tZXRyaWNzL2hlYXBTaXplQW5kVXNlZCcpO1xuY29uc3QgaGVhcFNwYWNlc1NpemVBbmRVc2VkID0gcmVxdWlyZSgnLi9tZXRyaWNzL2hlYXBTcGFjZXNTaXplQW5kVXNlZCcpO1xuY29uc3QgdmVyc2lvbiA9IHJlcXVpcmUoJy4vbWV0cmljcy92ZXJzaW9uJyk7XG5jb25zdCBnYyA9IHJlcXVpcmUoJy4vbWV0cmljcy9nYycpO1xuXG5jb25zdCBtZXRyaWNzID0ge1xuXHRwcm9jZXNzQ3B1VG90YWwsXG5cdHByb2Nlc3NTdGFydFRpbWUsXG5cdG9zTWVtb3J5SGVhcCxcblx0cHJvY2Vzc09wZW5GaWxlRGVzY3JpcHRvcnMsXG5cdHByb2Nlc3NNYXhGaWxlRGVzY3JpcHRvcnMsXG5cdGV2ZW50TG9vcExhZyxcblx0Li4uKHR5cGVvZiBwcm9jZXNzLmdldEFjdGl2ZVJlc291cmNlc0luZm8gPT09ICdmdW5jdGlvbidcblx0XHQ/IHsgcHJvY2Vzc1Jlc291cmNlcyB9XG5cdFx0OiB7fSksXG5cdHByb2Nlc3NIYW5kbGVzLFxuXHRwcm9jZXNzUmVxdWVzdHMsXG5cdGhlYXBTaXplQW5kVXNlZCxcblx0aGVhcFNwYWNlc1NpemVBbmRVc2VkLFxuXHR2ZXJzaW9uLFxuXHRnYyxcbn07XG5jb25zdCBtZXRyaWNzTGlzdCA9IE9iamVjdC5rZXlzKG1ldHJpY3MpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbGxlY3REZWZhdWx0TWV0cmljcyhjb25maWcpIHtcblx0aWYgKGNvbmZpZyAhPT0gbnVsbCAmJiBjb25maWcgIT09IHVuZGVmaW5lZCAmJiAhaXNPYmplY3QoY29uZmlnKSkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ2NvbmZpZyBtdXN0IGJlIG51bGwsIHVuZGVmaW5lZCwgb3IgYW4gb2JqZWN0Jyk7XG5cdH1cblxuXHRjb25maWcgPSB7IGV2ZW50TG9vcE1vbml0b3JpbmdQcmVjaXNpb246IDEwLCAuLi5jb25maWcgfTtcblxuXHRmb3IgKGNvbnN0IG1ldHJpYyBvZiBPYmplY3QudmFsdWVzKG1ldHJpY3MpKSB7XG5cdFx0bWV0cmljKGNvbmZpZy5yZWdpc3RlciwgY29uZmlnKTtcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMubWV0cmljc0xpc3QgPSBtZXRyaWNzTGlzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/defaultMetrics.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/exemplar.js":
/*!******************************************************!*\
  !*** ../../node_modules/prom-client/lib/exemplar.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Class representing an OpenMetrics exemplar.\n *\n * @property {object} labelSet\n * @property {number} value\n * @property {number} [timestamp]\n * */\nclass Exemplar {\n\tconstructor(labelSet = {}, value = null) {\n\t\tthis.labelSet = labelSet;\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Validation for the label set format.\n\t * https://github.com/OpenObservability/OpenMetrics/blob/d99b705f611b75fec8f450b05e344e02eea6921d/specification/OpenMetrics.md#exemplars\n\t *\n\t * @param {object} labelSet - Exemplar labels.\n\t * @throws {RangeError}\n\t * @return {void}\n\t */\n\tvalidateExemplarLabelSet(labelSet) {\n\t\tlet res = '';\n\t\tfor (const [labelName, labelValue] of Object.entries(labelSet)) {\n\t\t\tres += `${labelName}${labelValue}`;\n\t\t}\n\t\tif (res.length > 128) {\n\t\t\tthrow new RangeError(\n\t\t\t\t'Label set size must be smaller than 128 UTF-8 chars',\n\t\t\t);\n\t\t}\n\t}\n}\n\nmodule.exports = Exemplar;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9leGVtcGxhci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixhQUFhO0FBQ2IsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxVQUFVLEVBQUUsV0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL2V4ZW1wbGFyLmpzPzU2ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENsYXNzIHJlcHJlc2VudGluZyBhbiBPcGVuTWV0cmljcyBleGVtcGxhci5cbiAqXG4gKiBAcHJvcGVydHkge29iamVjdH0gbGFiZWxTZXRcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB2YWx1ZVxuICogQHByb3BlcnR5IHtudW1iZXJ9IFt0aW1lc3RhbXBdXG4gKiAqL1xuY2xhc3MgRXhlbXBsYXIge1xuXHRjb25zdHJ1Y3RvcihsYWJlbFNldCA9IHt9LCB2YWx1ZSA9IG51bGwpIHtcblx0XHR0aGlzLmxhYmVsU2V0ID0gbGFiZWxTZXQ7XG5cdFx0dGhpcy52YWx1ZSA9IHZhbHVlO1xuXHR9XG5cblx0LyoqXG5cdCAqIFZhbGlkYXRpb24gZm9yIHRoZSBsYWJlbCBzZXQgZm9ybWF0LlxuXHQgKiBodHRwczovL2dpdGh1Yi5jb20vT3Blbk9ic2VydmFiaWxpdHkvT3Blbk1ldHJpY3MvYmxvYi9kOTliNzA1ZjYxMWI3NWZlYzhmNDUwYjA1ZTM0NGUwMmVlYTY5MjFkL3NwZWNpZmljYXRpb24vT3Blbk1ldHJpY3MubWQjZXhlbXBsYXJzXG5cdCAqXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBsYWJlbFNldCAtIEV4ZW1wbGFyIGxhYmVscy5cblx0ICogQHRocm93cyB7UmFuZ2VFcnJvcn1cblx0ICogQHJldHVybiB7dm9pZH1cblx0ICovXG5cdHZhbGlkYXRlRXhlbXBsYXJMYWJlbFNldChsYWJlbFNldCkge1xuXHRcdGxldCByZXMgPSAnJztcblx0XHRmb3IgKGNvbnN0IFtsYWJlbE5hbWUsIGxhYmVsVmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGxhYmVsU2V0KSkge1xuXHRcdFx0cmVzICs9IGAke2xhYmVsTmFtZX0ke2xhYmVsVmFsdWV9YDtcblx0XHR9XG5cdFx0aWYgKHJlcy5sZW5ndGggPiAxMjgpIHtcblx0XHRcdHRocm93IG5ldyBSYW5nZUVycm9yKFxuXHRcdFx0XHQnTGFiZWwgc2V0IHNpemUgbXVzdCBiZSBzbWFsbGVyIHRoYW4gMTI4IFVURi04IGNoYXJzJyxcblx0XHRcdCk7XG5cdFx0fVxuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlbXBsYXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/exemplar.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/gauge.js":
/*!***************************************************!*\
  !*** ../../node_modules/prom-client/lib/gauge.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Gauge metric\n */\n\n\nconst util = __webpack_require__(/*! util */ \"util\");\n\nconst {\n\tsetValue,\n\tsetValueDelta,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tremoveLabels,\n} = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\nconst { validateLabel } = __webpack_require__(/*! ./validation */ \"(rsc)/../../node_modules/prom-client/lib/validation.js\");\nconst { Metric } = __webpack_require__(/*! ./metric */ \"(rsc)/../../node_modules/prom-client/lib/metric.js\");\n\nclass Gauge extends Metric {\n\tconstructor(config) {\n\t\tsuper(config);\n\t\tthis.type = 'gauge';\n\t}\n\n\t/**\n\t * Set a gauge to a value\n\t * @param {object} labels - Object with labels and their values\n\t * @param {Number} value - Value to set the gauge to, must be positive\n\t * @returns {void}\n\t */\n\tset(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tset(this, labels, value);\n\t}\n\n\t/**\n\t * Reset gauge\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0, {});\n\t\t}\n\t}\n\n\t/**\n\t * Increment a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to increment - if omitted, increment with 1\n\t * @returns {void}\n\t */\n\tinc(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tsetDelta(this, labels, value);\n\t}\n\n\t/**\n\t * Decrement a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to decrement - if omitted, decrement with 1\n\t * @returns {void}\n\t */\n\tdec(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tsetDelta(this, labels, -value);\n\t}\n\n\t/**\n\t * Set the gauge to current unix epoch\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tsetToCurrentTime(labels) {\n\t\tconst now = Date.now() / 1000;\n\t\tif (labels === undefined) {\n\t\t\tthis.set(now);\n\t\t} else {\n\t\t\tthis.set(labels, now);\n\t\t}\n\t}\n\n\t/**\n\t * Start a timer\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Invoke this function to set the duration in seconds since you started the timer.\n\t * @example\n\t * var done = gauge.startTimer();\n\t * makeXHRRequest(function(err, response) {\n\t *\tdone(); //Duration of the request will be saved\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.set(Object.assign({}, labels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype: this.type,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\t_getValue(labels) {\n\t\tconst hash = hashObject(labels || {}, this.sortedLabelNames);\n\t\treturn this.hashMap[hash] ? this.hashMap[hash].value : 0;\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t\tdec: this.dec.bind(this, labels),\n\t\t\tset: this.set.bind(this, labels),\n\t\t\tsetToCurrentTime: this.setToCurrentTime.bind(this, labels),\n\t\t\tstartTimer: this.startTimer.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels, this.sortedLabelNames);\n\t}\n}\n\nfunction set(gauge, labels, value) {\n\tif (typeof value !== 'number') {\n\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tsetValue(gauge.hashMap, value, labels);\n}\n\nfunction setDelta(gauge, labels, delta) {\n\tif (typeof delta !== 'number') {\n\t\tthrow new TypeError(`Delta is not a valid number: ${util.format(delta)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tconst hash = hashObject(labels, gauge.sortedLabelNames);\n\tsetValueDelta(gauge.hashMap, delta, labels, hash);\n}\n\nfunction getLabelArg(labels) {\n\treturn isObject(labels) ? labels : {};\n}\n\nfunction getValueArg(labels, value) {\n\treturn isObject(labels) ? value : labels;\n}\n\nmodule.exports = Gauge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/gauge.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/histogram.js":
/*!*******************************************************!*\
  !*** ../../node_modules/prom-client/lib/histogram.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Histogram\n */\n\n\nconst util = __webpack_require__(/*! util */ \"util\");\nconst {\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tremoveLabels,\n\tnowTimestamp,\n} = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\nconst { validateLabel } = __webpack_require__(/*! ./validation */ \"(rsc)/../../node_modules/prom-client/lib/validation.js\");\nconst { Metric } = __webpack_require__(/*! ./metric */ \"(rsc)/../../node_modules/prom-client/lib/metric.js\");\nconst Exemplar = __webpack_require__(/*! ./exemplar */ \"(rsc)/../../node_modules/prom-client/lib/exemplar.js\");\n\nclass Histogram extends Metric {\n\tconstructor(config) {\n\t\tsuper(config, {\n\t\t\tbuckets: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10],\n\t\t});\n\n\t\tthis.type = 'histogram';\n\t\tthis.defaultLabels = {};\n\t\tthis.defaultExemplarLabelSet = {};\n\t\tthis.enableExemplars = false;\n\n\t\tfor (const label of this.labelNames) {\n\t\t\tif (label === 'le') {\n\t\t\t\tthrow new Error('le is a reserved label keyword');\n\t\t\t}\n\t\t}\n\n\t\tthis.upperBounds = this.buckets;\n\t\tthis.bucketValues = this.upperBounds.reduce((acc, upperBound) => {\n\t\t\tacc[upperBound] = 0;\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\tif (config.enableExemplars) {\n\t\t\tthis.enableExemplars = true;\n\t\t\tthis.bucketExemplars = this.upperBounds.reduce((acc, upperBound) => {\n\t\t\t\tacc[upperBound] = null;\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\t\t\tObject.freeze(this.bucketExemplars);\n\t\t\tthis.observe = this.observeWithExemplar;\n\t\t} else {\n\t\t\tthis.observe = this.observeWithoutExemplar;\n\t\t}\n\n\t\tObject.freeze(this.bucketValues);\n\t\tObject.freeze(this.upperBounds);\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: createBaseValues(\n\t\t\t\t\t{},\n\t\t\t\t\tthis.bucketValues,\n\t\t\t\t\tthis.bucketExemplars,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Observe a value in histogram\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe in the histogram\n\t * @returns {void}\n\t */\n\tobserveWithoutExemplar(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tobserveWithExemplar({\n\t\tlabels = this.defaultLabels,\n\t\tvalue,\n\t\texemplarLabels = this.defaultExemplarLabelSet,\n\t} = {}) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t\tthis.updateExemplar(labels, value, exemplarLabels);\n\t}\n\n\tupdateExemplar(labels, value, exemplarLabels) {\n\t\tif (Object.keys(exemplarLabels).length === 0) return;\n\t\tconst hash = hashObject(labels, this.sortedLabelNames);\n\t\tconst bound = findBound(this.upperBounds, value);\n\t\tconst { bucketExemplars } = this.hashMap[hash];\n\t\tlet exemplar = bucketExemplars[bound];\n\t\tif (!isObject(exemplar)) {\n\t\t\texemplar = new Exemplar();\n\t\t\tbucketExemplars[bound] = exemplar;\n\t\t}\n\t\texemplar.validateExemplarLabelSet(exemplarLabels);\n\t\texemplar.labelSet = exemplarLabels;\n\t\texemplar.value = value;\n\t\texemplar.timestamp = nowTimestamp();\n\t}\n\n\tasync get() {\n\t\tconst data = await this.getForPromString();\n\t\tdata.values = data.values.map(splayLabels);\n\t\treturn data;\n\t}\n\n\tasync getForPromString() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\tconst data = Object.values(this.hashMap);\n\t\tconst values = data\n\t\t\t.map(extractBucketValuesForExport(this))\n\t\t\t.reduce(addSumAndCountForExport(this), []);\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype: this.type,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\treset() {\n\t\tthis.hashMap = {};\n\t}\n\n\t/**\n\t * Initialize the metrics for the given combination of labels to zero\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tzero(labels) {\n\t\tconst hash = hashObject(labels, this.sortedLabelNames);\n\t\tthis.hashMap[hash] = createBaseValues(\n\t\t\tlabels,\n\t\t\tthis.bucketValues,\n\t\t\tthis.bucketExemplars,\n\t\t);\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {object} exemplarLabels - Object with labels for exemplar where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = histogram.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t * \tconst duration = end(); //Observe the duration of expensiveXHRRequest and returns duration in seconds\n\t * \tconsole.log('Duration', duration);\n\t * });\n\t */\n\tstartTimer(labels, exemplarLabels) {\n\t\treturn this.enableExemplars\n\t\t\t? startTimerWithExemplar.call(this, labels, exemplarLabels)()\n\t\t\t: startTimer.call(this, labels)();\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels, this.sortedLabelNames);\n\t}\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.observe(Object.assign({}, startLabels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t};\n}\n\nfunction startTimerWithExemplar(startLabels, startExemplarLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn (endLabels, endExemplarLabels) => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.observe({\n\t\t\t\tlabels: Object.assign({}, startLabels, endLabels),\n\t\t\t\tvalue,\n\t\t\t\texemplarLabels: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\tstartExemplarLabels,\n\t\t\t\t\tendExemplarLabels,\n\t\t\t\t),\n\t\t\t});\n\t\t\treturn value;\n\t\t};\n\t};\n}\n\nfunction setValuePair(labels, value, metricName, exemplar, sharedLabels = {}) {\n\treturn {\n\t\tlabels,\n\t\tsharedLabels,\n\t\tvalue,\n\t\tmetricName,\n\t\texemplar,\n\t};\n}\n\nfunction findBound(upperBounds, value) {\n\tfor (let i = 0; i < upperBounds.length; i++) {\n\t\tconst bound = upperBounds[i];\n\t\tif (value <= bound) {\n\t\t\treturn bound;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labelValuePair.labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`,\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels, this.sortedLabelNames);\n\t\tlet valueFromMap = this.hashMap[hash];\n\t\tif (!valueFromMap) {\n\t\t\tvalueFromMap = createBaseValues(\n\t\t\t\tlabelValuePair.labels,\n\t\t\t\tthis.bucketValues,\n\t\t\t\tthis.bucketExemplars,\n\t\t\t);\n\t\t}\n\n\t\tconst b = findBound(this.upperBounds, labelValuePair.value);\n\n\t\tvalueFromMap.sum += labelValuePair.value;\n\t\tvalueFromMap.count += 1;\n\n\t\tif (Object.prototype.hasOwnProperty.call(valueFromMap.bucketValues, b)) {\n\t\t\tvalueFromMap.bucketValues[b] += 1;\n\t\t}\n\n\t\tthis.hashMap[hash] = valueFromMap;\n\t};\n}\n\nfunction createBaseValues(labels, bucketValues, bucketExemplars) {\n\tconst result = {\n\t\tlabels,\n\t\tbucketValues: { ...bucketValues },\n\t\tsum: 0,\n\t\tcount: 0,\n\t};\n\tif (bucketExemplars) {\n\t\tresult.bucketExemplars = { ...bucketExemplars };\n\t}\n\treturn result;\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\treturn isObject(labels)\n\t\t? {\n\t\t\t\tlabels,\n\t\t\t\tvalue,\n\t\t\t}\n\t\t: {\n\t\t\t\tvalue: labels,\n\t\t\t\tlabels: {},\n\t\t\t};\n}\n\nfunction extractBucketValuesForExport(histogram) {\n\tconst name = `${histogram.name}_bucket`;\n\treturn bucketData => {\n\t\tlet acc = 0;\n\t\tconst buckets = histogram.upperBounds.map(upperBound => {\n\t\t\tacc += bucketData.bucketValues[upperBound];\n\t\t\treturn setValuePair(\n\t\t\t\t{ le: upperBound },\n\t\t\t\tacc,\n\t\t\t\tname,\n\t\t\t\tbucketData.bucketExemplars\n\t\t\t\t\t? bucketData.bucketExemplars[upperBound]\n\t\t\t\t\t: null,\n\t\t\t\tbucketData.labels,\n\t\t\t);\n\t\t});\n\t\treturn { buckets, data: bucketData };\n\t};\n}\n\nfunction addSumAndCountForExport(histogram) {\n\treturn (acc, d) => {\n\t\tacc.push(...d.buckets);\n\n\t\tconst infLabel = { le: '+Inf' };\n\t\tacc.push(\n\t\t\tsetValuePair(\n\t\t\t\tinfLabel,\n\t\t\t\td.data.count,\n\t\t\t\t`${histogram.name}_bucket`,\n\t\t\t\td.data.bucketExemplars ? d.data.bucketExemplars['-1'] : null,\n\t\t\t\td.data.labels,\n\t\t\t),\n\t\t\tsetValuePair(\n\t\t\t\t{},\n\t\t\t\td.data.sum,\n\t\t\t\t`${histogram.name}_sum`,\n\t\t\t\tundefined,\n\t\t\t\td.data.labels,\n\t\t\t),\n\t\t\tsetValuePair(\n\t\t\t\t{},\n\t\t\t\td.data.count,\n\t\t\t\t`${histogram.name}_count`,\n\t\t\t\tundefined,\n\t\t\t\td.data.labels,\n\t\t\t),\n\t\t);\n\t\treturn acc;\n\t};\n}\n\nfunction splayLabels(bucket) {\n\tconst { sharedLabels, labels, ...newBucket } = bucket;\n\tfor (const label of Object.keys(sharedLabels)) {\n\t\tlabels[label] = sharedLabels[label];\n\t}\n\tnewBucket.labels = labels;\n\treturn newBucket;\n}\n\nmodule.exports = Histogram;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/histogram.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metric.js":
/*!****************************************************!*\
  !*** ../../node_modules/prom-client/lib/metric.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Registry = __webpack_require__(/*! ./registry */ \"(rsc)/../../node_modules/prom-client/lib/registry.js\");\nconst { isObject } = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\nconst { validateMetricName, validateLabelName } = __webpack_require__(/*! ./validation */ \"(rsc)/../../node_modules/prom-client/lib/validation.js\");\n\n/**\n * @abstract\n */\nclass Metric {\n\tconstructor(config, defaults = {}) {\n\t\tif (!isObject(config)) {\n\t\t\tthrow new TypeError('constructor expected a config object');\n\t\t}\n\t\tObject.assign(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tlabelNames: [],\n\t\t\t\tregisters: [Registry.globalRegistry],\n\t\t\t\taggregator: 'sum',\n\t\t\t\tenableExemplars: false,\n\t\t\t},\n\t\t\tdefaults,\n\t\t\tconfig,\n\t\t);\n\t\tif (!this.registers) {\n\t\t\t// in case config.registers is `undefined`\n\t\t\tthis.registers = [Registry.globalRegistry];\n\t\t}\n\t\tif (!this.help) {\n\t\t\tthrow new Error('Missing mandatory help parameter');\n\t\t}\n\t\tif (!this.name) {\n\t\t\tthrow new Error('Missing mandatory name parameter');\n\t\t}\n\t\tif (!validateMetricName(this.name)) {\n\t\t\tthrow new Error('Invalid metric name');\n\t\t}\n\t\tif (!validateLabelName(this.labelNames)) {\n\t\t\tthrow new Error('Invalid label name');\n\t\t}\n\n\t\tif (this.collect && typeof this.collect !== 'function') {\n\t\t\tthrow new Error('Optional \"collect\" parameter must be a function');\n\t\t}\n\n\t\tif (this.labelNames) {\n\t\t\tthis.sortedLabelNames = [...this.labelNames].sort();\n\t\t} else {\n\t\t\tthis.sortedLabelNames = [];\n\t\t}\n\n\t\tthis.reset();\n\n\t\tfor (const register of this.registers) {\n\t\t\tif (\n\t\t\t\tthis.enableExemplars &&\n\t\t\t\tregister.contentType === Registry.PROMETHEUS_CONTENT_TYPE\n\t\t\t) {\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'Exemplars are supported only on OpenMetrics registries',\n\t\t\t\t);\n\t\t\t}\n\t\t\tregister.registerMetric(this);\n\t\t}\n\t}\n\n\treset() {\n\t\t/* abstract */\n\t}\n}\n\nmodule.exports = { Metric };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUJBQWlCLG1CQUFPLENBQUMsd0VBQVk7QUFDckMsUUFBUSxXQUFXLEVBQUUsbUJBQU8sQ0FBQyxnRUFBUTtBQUNyQyxRQUFRLHdDQUF3QyxFQUFFLG1CQUFPLENBQUMsNEVBQWM7O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWMuanM/NWE1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlZ2lzdHJ5ID0gcmVxdWlyZSgnLi9yZWdpc3RyeScpO1xuY29uc3QgeyBpc09iamVjdCB9ID0gcmVxdWlyZSgnLi91dGlsJyk7XG5jb25zdCB7IHZhbGlkYXRlTWV0cmljTmFtZSwgdmFsaWRhdGVMYWJlbE5hbWUgfSA9IHJlcXVpcmUoJy4vdmFsaWRhdGlvbicpO1xuXG4vKipcbiAqIEBhYnN0cmFjdFxuICovXG5jbGFzcyBNZXRyaWMge1xuXHRjb25zdHJ1Y3Rvcihjb25maWcsIGRlZmF1bHRzID0ge30pIHtcblx0XHRpZiAoIWlzT2JqZWN0KGNvbmZpZykpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ2NvbnN0cnVjdG9yIGV4cGVjdGVkIGEgY29uZmlnIG9iamVjdCcpO1xuXHRcdH1cblx0XHRPYmplY3QuYXNzaWduKFxuXHRcdFx0dGhpcyxcblx0XHRcdHtcblx0XHRcdFx0bGFiZWxOYW1lczogW10sXG5cdFx0XHRcdHJlZ2lzdGVyczogW1JlZ2lzdHJ5Lmdsb2JhbFJlZ2lzdHJ5XSxcblx0XHRcdFx0YWdncmVnYXRvcjogJ3N1bScsXG5cdFx0XHRcdGVuYWJsZUV4ZW1wbGFyczogZmFsc2UsXG5cdFx0XHR9LFxuXHRcdFx0ZGVmYXVsdHMsXG5cdFx0XHRjb25maWcsXG5cdFx0KTtcblx0XHRpZiAoIXRoaXMucmVnaXN0ZXJzKSB7XG5cdFx0XHQvLyBpbiBjYXNlIGNvbmZpZy5yZWdpc3RlcnMgaXMgYHVuZGVmaW5lZGBcblx0XHRcdHRoaXMucmVnaXN0ZXJzID0gW1JlZ2lzdHJ5Lmdsb2JhbFJlZ2lzdHJ5XTtcblx0XHR9XG5cdFx0aWYgKCF0aGlzLmhlbHApIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignTWlzc2luZyBtYW5kYXRvcnkgaGVscCBwYXJhbWV0ZXInKTtcblx0XHR9XG5cdFx0aWYgKCF0aGlzLm5hbWUpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignTWlzc2luZyBtYW5kYXRvcnkgbmFtZSBwYXJhbWV0ZXInKTtcblx0XHR9XG5cdFx0aWYgKCF2YWxpZGF0ZU1ldHJpY05hbWUodGhpcy5uYW1lKSkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG1ldHJpYyBuYW1lJyk7XG5cdFx0fVxuXHRcdGlmICghdmFsaWRhdGVMYWJlbE5hbWUodGhpcy5sYWJlbE5hbWVzKSkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGxhYmVsIG5hbWUnKTtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5jb2xsZWN0ICYmIHR5cGVvZiB0aGlzLmNvbGxlY3QgIT09ICdmdW5jdGlvbicpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignT3B0aW9uYWwgXCJjb2xsZWN0XCIgcGFyYW1ldGVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXHRcdH1cblxuXHRcdGlmICh0aGlzLmxhYmVsTmFtZXMpIHtcblx0XHRcdHRoaXMuc29ydGVkTGFiZWxOYW1lcyA9IFsuLi50aGlzLmxhYmVsTmFtZXNdLnNvcnQoKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5zb3J0ZWRMYWJlbE5hbWVzID0gW107XG5cdFx0fVxuXG5cdFx0dGhpcy5yZXNldCgpO1xuXG5cdFx0Zm9yIChjb25zdCByZWdpc3RlciBvZiB0aGlzLnJlZ2lzdGVycykge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHR0aGlzLmVuYWJsZUV4ZW1wbGFycyAmJlxuXHRcdFx0XHRyZWdpc3Rlci5jb250ZW50VHlwZSA9PT0gUmVnaXN0cnkuUFJPTUVUSEVVU19DT05URU5UX1RZUEVcblx0XHRcdCkge1xuXHRcdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKFxuXHRcdFx0XHRcdCdFeGVtcGxhcnMgYXJlIHN1cHBvcnRlZCBvbmx5IG9uIE9wZW5NZXRyaWNzIHJlZ2lzdHJpZXMnLFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdFx0cmVnaXN0ZXIucmVnaXN0ZXJNZXRyaWModGhpcyk7XG5cdFx0fVxuXHR9XG5cblx0cmVzZXQoKSB7XG5cdFx0LyogYWJzdHJhY3QgKi9cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgTWV0cmljIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metric.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metricAggregators.js":
/*!***************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metricAggregators.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst { Grouper, hashObject } = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\n\n/**\n * Returns a new function that applies the `aggregatorFn` to the values.\n * @param {Function} aggregatorFn function to apply to values.\n * @return {Function} aggregator function\n */\nfunction AggregatorFactory(aggregatorFn) {\n\treturn metrics => {\n\t\tif (metrics.length === 0) return;\n\t\tconst result = {\n\t\t\thelp: metrics[0].help,\n\t\t\tname: metrics[0].name,\n\t\t\ttype: metrics[0].type,\n\t\t\tvalues: [],\n\t\t\taggregator: metrics[0].aggregator,\n\t\t};\n\t\t// Gather metrics by metricName and labels.\n\t\tconst byLabels = new Grouper();\n\t\tmetrics.forEach(metric => {\n\t\t\tmetric.values.forEach(value => {\n\t\t\t\tconst key = hashObject(value.labels);\n\t\t\t\tbyLabels.add(`${value.metricName}_${key}`, value);\n\t\t\t});\n\t\t});\n\t\t// Apply aggregator function to gathered metrics.\n\t\tbyLabels.forEach(values => {\n\t\t\tif (values.length === 0) return;\n\t\t\tconst valObj = {\n\t\t\t\tvalue: aggregatorFn(values),\n\t\t\t\tlabels: values[0].labels,\n\t\t\t};\n\t\t\tif (values[0].metricName) {\n\t\t\t\tvalObj.metricName = values[0].metricName;\n\t\t\t}\n\t\t\t// NB: Timestamps are omitted.\n\t\t\tresult.values.push(valObj);\n\t\t});\n\t\treturn result;\n\t};\n}\n// Export for users to define their own aggregation methods.\nexports.AggregatorFactory = AggregatorFactory;\n\n/**\n * Functions that can be used to aggregate metrics from multiple registries.\n */\nexports.aggregators = {\n\t/**\n\t * @return The sum of values.\n\t */\n\tsum: AggregatorFactory(v => v.reduce((p, c) => p + c.value, 0)),\n\t/**\n\t * @return The first value.\n\t */\n\tfirst: AggregatorFactory(v => v[0].value),\n\t/**\n\t * @return {undefined} Undefined; omits the metric.\n\t */\n\tomit: () => {},\n\t/**\n\t * @return The arithmetic mean of the values.\n\t */\n\taverage: AggregatorFactory(\n\t\tv => v.reduce((p, c) => p + c.value, 0) / v.length,\n\t),\n\t/**\n\t * @return The minimum of the values.\n\t */\n\tmin: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.min(p, c.value), Infinity),\n\t),\n\t/**\n\t * @return The maximum of the values.\n\t */\n\tmax: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.max(p, c.value), -Infinity),\n\t),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNBZ2dyZWdhdG9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixRQUFRLHNCQUFzQixFQUFFLG1CQUFPLENBQUMsZ0VBQVE7O0FBRWhEO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQixHQUFHLElBQUk7QUFDNUMsSUFBSTtBQUNKLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7O0FBRXpCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFdBQVcsV0FBVztBQUNuQztBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNBZ2dyZWdhdG9ycy5qcz9lMjU3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBHcm91cGVyLCBoYXNoT2JqZWN0IH0gPSByZXF1aXJlKCcuL3V0aWwnKTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgbmV3IGZ1bmN0aW9uIHRoYXQgYXBwbGllcyB0aGUgYGFnZ3JlZ2F0b3JGbmAgdG8gdGhlIHZhbHVlcy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGFnZ3JlZ2F0b3JGbiBmdW5jdGlvbiB0byBhcHBseSB0byB2YWx1ZXMuXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gYWdncmVnYXRvciBmdW5jdGlvblxuICovXG5mdW5jdGlvbiBBZ2dyZWdhdG9yRmFjdG9yeShhZ2dyZWdhdG9yRm4pIHtcblx0cmV0dXJuIG1ldHJpY3MgPT4ge1xuXHRcdGlmIChtZXRyaWNzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXHRcdGNvbnN0IHJlc3VsdCA9IHtcblx0XHRcdGhlbHA6IG1ldHJpY3NbMF0uaGVscCxcblx0XHRcdG5hbWU6IG1ldHJpY3NbMF0ubmFtZSxcblx0XHRcdHR5cGU6IG1ldHJpY3NbMF0udHlwZSxcblx0XHRcdHZhbHVlczogW10sXG5cdFx0XHRhZ2dyZWdhdG9yOiBtZXRyaWNzWzBdLmFnZ3JlZ2F0b3IsXG5cdFx0fTtcblx0XHQvLyBHYXRoZXIgbWV0cmljcyBieSBtZXRyaWNOYW1lIGFuZCBsYWJlbHMuXG5cdFx0Y29uc3QgYnlMYWJlbHMgPSBuZXcgR3JvdXBlcigpO1xuXHRcdG1ldHJpY3MuZm9yRWFjaChtZXRyaWMgPT4ge1xuXHRcdFx0bWV0cmljLnZhbHVlcy5mb3JFYWNoKHZhbHVlID0+IHtcblx0XHRcdFx0Y29uc3Qga2V5ID0gaGFzaE9iamVjdCh2YWx1ZS5sYWJlbHMpO1xuXHRcdFx0XHRieUxhYmVscy5hZGQoYCR7dmFsdWUubWV0cmljTmFtZX1fJHtrZXl9YCwgdmFsdWUpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFx0Ly8gQXBwbHkgYWdncmVnYXRvciBmdW5jdGlvbiB0byBnYXRoZXJlZCBtZXRyaWNzLlxuXHRcdGJ5TGFiZWxzLmZvckVhY2godmFsdWVzID0+IHtcblx0XHRcdGlmICh2YWx1ZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cdFx0XHRjb25zdCB2YWxPYmogPSB7XG5cdFx0XHRcdHZhbHVlOiBhZ2dyZWdhdG9yRm4odmFsdWVzKSxcblx0XHRcdFx0bGFiZWxzOiB2YWx1ZXNbMF0ubGFiZWxzLFxuXHRcdFx0fTtcblx0XHRcdGlmICh2YWx1ZXNbMF0ubWV0cmljTmFtZSkge1xuXHRcdFx0XHR2YWxPYmoubWV0cmljTmFtZSA9IHZhbHVlc1swXS5tZXRyaWNOYW1lO1xuXHRcdFx0fVxuXHRcdFx0Ly8gTkI6IFRpbWVzdGFtcHMgYXJlIG9taXR0ZWQuXG5cdFx0XHRyZXN1bHQudmFsdWVzLnB1c2godmFsT2JqKTtcblx0XHR9KTtcblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9O1xufVxuLy8gRXhwb3J0IGZvciB1c2VycyB0byBkZWZpbmUgdGhlaXIgb3duIGFnZ3JlZ2F0aW9uIG1ldGhvZHMuXG5leHBvcnRzLkFnZ3JlZ2F0b3JGYWN0b3J5ID0gQWdncmVnYXRvckZhY3Rvcnk7XG5cbi8qKlxuICogRnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gYWdncmVnYXRlIG1ldHJpY3MgZnJvbSBtdWx0aXBsZSByZWdpc3RyaWVzLlxuICovXG5leHBvcnRzLmFnZ3JlZ2F0b3JzID0ge1xuXHQvKipcblx0ICogQHJldHVybiBUaGUgc3VtIG9mIHZhbHVlcy5cblx0ICovXG5cdHN1bTogQWdncmVnYXRvckZhY3RvcnkodiA9PiB2LnJlZHVjZSgocCwgYykgPT4gcCArIGMudmFsdWUsIDApKSxcblx0LyoqXG5cdCAqIEByZXR1cm4gVGhlIGZpcnN0IHZhbHVlLlxuXHQgKi9cblx0Zmlyc3Q6IEFnZ3JlZ2F0b3JGYWN0b3J5KHYgPT4gdlswXS52YWx1ZSksXG5cdC8qKlxuXHQgKiBAcmV0dXJuIHt1bmRlZmluZWR9IFVuZGVmaW5lZDsgb21pdHMgdGhlIG1ldHJpYy5cblx0ICovXG5cdG9taXQ6ICgpID0+IHt9LFxuXHQvKipcblx0ICogQHJldHVybiBUaGUgYXJpdGhtZXRpYyBtZWFuIG9mIHRoZSB2YWx1ZXMuXG5cdCAqL1xuXHRhdmVyYWdlOiBBZ2dyZWdhdG9yRmFjdG9yeShcblx0XHR2ID0+IHYucmVkdWNlKChwLCBjKSA9PiBwICsgYy52YWx1ZSwgMCkgLyB2Lmxlbmd0aCxcblx0KSxcblx0LyoqXG5cdCAqIEByZXR1cm4gVGhlIG1pbmltdW0gb2YgdGhlIHZhbHVlcy5cblx0ICovXG5cdG1pbjogQWdncmVnYXRvckZhY3RvcnkodiA9PlxuXHRcdHYucmVkdWNlKChwLCBjKSA9PiBNYXRoLm1pbihwLCBjLnZhbHVlKSwgSW5maW5pdHkpLFxuXHQpLFxuXHQvKipcblx0ICogQHJldHVybiBUaGUgbWF4aW11bSBvZiB0aGUgdmFsdWVzLlxuXHQgKi9cblx0bWF4OiBBZ2dyZWdhdG9yRmFjdG9yeSh2ID0+XG5cdFx0di5yZWR1Y2UoKHAsIGMpID0+IE1hdGgubWF4KHAsIGMudmFsdWUpLCAtSW5maW5pdHkpLFxuXHQpLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metricAggregators.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/eventLoopLag.js":
/*!******************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/eventLoopLag.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\n\n// Check if perf_hooks module is available\nlet perf_hooks;\ntry {\n\tperf_hooks = __webpack_require__(/*! perf_hooks */ \"perf_hooks\");\n} catch {\n\t// node version is too old\n}\n\n// Reported always.\nconst NODEJS_EVENTLOOP_LAG = 'nodejs_eventloop_lag_seconds';\n\n// Reported only when perf_hooks is available.\nconst NODEJS_EVENTLOOP_LAG_MIN = 'nodejs_eventloop_lag_min_seconds';\nconst NODEJS_EVENTLOOP_LAG_MAX = 'nodejs_eventloop_lag_max_seconds';\nconst NODEJS_EVENTLOOP_LAG_MEAN = 'nodejs_eventloop_lag_mean_seconds';\nconst NODEJS_EVENTLOOP_LAG_STDDEV = 'nodejs_eventloop_lag_stddev_seconds';\nconst NODEJS_EVENTLOOP_LAG_P50 = 'nodejs_eventloop_lag_p50_seconds';\nconst NODEJS_EVENTLOOP_LAG_P90 = 'nodejs_eventloop_lag_p90_seconds';\nconst NODEJS_EVENTLOOP_LAG_P99 = 'nodejs_eventloop_lag_p99_seconds';\n\nfunction reportEventloopLag(start, gauge, labels) {\n\tconst delta = process.hrtime(start);\n\tconst nanosec = delta[0] * 1e9 + delta[1];\n\tconst seconds = nanosec / 1e9;\n\n\tgauge.set(labels, seconds);\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\tconst registers = registry ? [registry] : undefined;\n\n\tlet collect = () => {\n\t\tconst start = process.hrtime();\n\t\tsetImmediate(reportEventloopLag, start, lag, labels);\n\t};\n\n\tif (perf_hooks && perf_hooks.monitorEventLoopDelay) {\n\t\ttry {\n\t\t\tconst histogram = perf_hooks.monitorEventLoopDelay({\n\t\t\t\tresolution: config.eventLoopMonitoringPrecision,\n\t\t\t});\n\t\t\thistogram.enable();\n\n\t\t\tcollect = () => {\n\t\t\t\tconst start = process.hrtime();\n\t\t\t\tsetImmediate(reportEventloopLag, start, lag, labels);\n\n\t\t\t\tlagMin.set(labels, histogram.min / 1e9);\n\t\t\t\tlagMax.set(labels, histogram.max / 1e9);\n\t\t\t\tlagMean.set(labels, histogram.mean / 1e9);\n\t\t\t\tlagStddev.set(labels, histogram.stddev / 1e9);\n\t\t\t\tlagP50.set(labels, histogram.percentile(50) / 1e9);\n\t\t\t\tlagP90.set(labels, histogram.percentile(90) / 1e9);\n\t\t\t\tlagP99.set(labels, histogram.percentile(99) / 1e9);\n\n\t\t\t\thistogram.reset();\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tif (e.code === 'ERR_NOT_IMPLEMENTED') {\n\t\t\t\treturn; // Bun\n\t\t\t}\n\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tconst lag = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG,\n\t\thelp: 'Lag of event loop in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect,\n\t});\n\tconst lagMin = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MIN,\n\t\thelp: 'The minimum recorded event loop delay.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'min',\n\t});\n\tconst lagMax = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MAX,\n\t\thelp: 'The maximum recorded event loop delay.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'max',\n\t});\n\tconst lagMean = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MEAN,\n\t\thelp: 'The mean of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagStddev = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_STDDEV,\n\t\thelp: 'The standard deviation of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP50 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P50,\n\t\thelp: 'The 50th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP90 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P90,\n\t\thelp: 'The 90th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP99 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P99,\n\t\thelp: 'The 99th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_EVENTLOOP_LAG,\n\tNODEJS_EVENTLOOP_LAG_MIN,\n\tNODEJS_EVENTLOOP_LAG_MAX,\n\tNODEJS_EVENTLOOP_LAG_MEAN,\n\tNODEJS_EVENTLOOP_LAG_STDDEV,\n\tNODEJS_EVENTLOOP_LAG_P50,\n\tNODEJS_EVENTLOOP_LAG_P90,\n\tNODEJS_EVENTLOOP_LAG_P99,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2V2ZW50TG9vcExhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsbUVBQVU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyw4QkFBWTtBQUNsQyxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvbWV0cmljcy9ldmVudExvb3BMYWcuanM/OTUwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcblxuLy8gQ2hlY2sgaWYgcGVyZl9ob29rcyBtb2R1bGUgaXMgYXZhaWxhYmxlXG5sZXQgcGVyZl9ob29rcztcbnRyeSB7XG5cdHBlcmZfaG9va3MgPSByZXF1aXJlKCdwZXJmX2hvb2tzJyk7XG59IGNhdGNoIHtcblx0Ly8gbm9kZSB2ZXJzaW9uIGlzIHRvbyBvbGRcbn1cblxuLy8gUmVwb3J0ZWQgYWx3YXlzLlxuY29uc3QgTk9ERUpTX0VWRU5UTE9PUF9MQUcgPSAnbm9kZWpzX2V2ZW50bG9vcF9sYWdfc2Vjb25kcyc7XG5cbi8vIFJlcG9ydGVkIG9ubHkgd2hlbiBwZXJmX2hvb2tzIGlzIGF2YWlsYWJsZS5cbmNvbnN0IE5PREVKU19FVkVOVExPT1BfTEFHX01JTiA9ICdub2RlanNfZXZlbnRsb29wX2xhZ19taW5fc2Vjb25kcyc7XG5jb25zdCBOT0RFSlNfRVZFTlRMT09QX0xBR19NQVggPSAnbm9kZWpzX2V2ZW50bG9vcF9sYWdfbWF4X3NlY29uZHMnO1xuY29uc3QgTk9ERUpTX0VWRU5UTE9PUF9MQUdfTUVBTiA9ICdub2RlanNfZXZlbnRsb29wX2xhZ19tZWFuX3NlY29uZHMnO1xuY29uc3QgTk9ERUpTX0VWRU5UTE9PUF9MQUdfU1REREVWID0gJ25vZGVqc19ldmVudGxvb3BfbGFnX3N0ZGRldl9zZWNvbmRzJztcbmNvbnN0IE5PREVKU19FVkVOVExPT1BfTEFHX1A1MCA9ICdub2RlanNfZXZlbnRsb29wX2xhZ19wNTBfc2Vjb25kcyc7XG5jb25zdCBOT0RFSlNfRVZFTlRMT09QX0xBR19QOTAgPSAnbm9kZWpzX2V2ZW50bG9vcF9sYWdfcDkwX3NlY29uZHMnO1xuY29uc3QgTk9ERUpTX0VWRU5UTE9PUF9MQUdfUDk5ID0gJ25vZGVqc19ldmVudGxvb3BfbGFnX3A5OV9zZWNvbmRzJztcblxuZnVuY3Rpb24gcmVwb3J0RXZlbnRsb29wTGFnKHN0YXJ0LCBnYXVnZSwgbGFiZWxzKSB7XG5cdGNvbnN0IGRlbHRhID0gcHJvY2Vzcy5ocnRpbWUoc3RhcnQpO1xuXHRjb25zdCBuYW5vc2VjID0gZGVsdGFbMF0gKiAxZTkgKyBkZWx0YVsxXTtcblx0Y29uc3Qgc2Vjb25kcyA9IG5hbm9zZWMgLyAxZTk7XG5cblx0Z2F1Z2Uuc2V0KGxhYmVscywgc2Vjb25kcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlZ2lzdHJ5LCBjb25maWcgPSB7fSkgPT4ge1xuXHRjb25zdCBuYW1lUHJlZml4ID0gY29uZmlnLnByZWZpeCA/IGNvbmZpZy5wcmVmaXggOiAnJztcblx0Y29uc3QgbGFiZWxzID0gY29uZmlnLmxhYmVscyA/IGNvbmZpZy5sYWJlbHMgOiB7fTtcblx0Y29uc3QgbGFiZWxOYW1lcyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG5cdGNvbnN0IHJlZ2lzdGVycyA9IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZDtcblxuXHRsZXQgY29sbGVjdCA9ICgpID0+IHtcblx0XHRjb25zdCBzdGFydCA9IHByb2Nlc3MuaHJ0aW1lKCk7XG5cdFx0c2V0SW1tZWRpYXRlKHJlcG9ydEV2ZW50bG9vcExhZywgc3RhcnQsIGxhZywgbGFiZWxzKTtcblx0fTtcblxuXHRpZiAocGVyZl9ob29rcyAmJiBwZXJmX2hvb2tzLm1vbml0b3JFdmVudExvb3BEZWxheSkge1xuXHRcdHRyeSB7XG5cdFx0XHRjb25zdCBoaXN0b2dyYW0gPSBwZXJmX2hvb2tzLm1vbml0b3JFdmVudExvb3BEZWxheSh7XG5cdFx0XHRcdHJlc29sdXRpb246IGNvbmZpZy5ldmVudExvb3BNb25pdG9yaW5nUHJlY2lzaW9uLFxuXHRcdFx0fSk7XG5cdFx0XHRoaXN0b2dyYW0uZW5hYmxlKCk7XG5cblx0XHRcdGNvbGxlY3QgPSAoKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHN0YXJ0ID0gcHJvY2Vzcy5ocnRpbWUoKTtcblx0XHRcdFx0c2V0SW1tZWRpYXRlKHJlcG9ydEV2ZW50bG9vcExhZywgc3RhcnQsIGxhZywgbGFiZWxzKTtcblxuXHRcdFx0XHRsYWdNaW4uc2V0KGxhYmVscywgaGlzdG9ncmFtLm1pbiAvIDFlOSk7XG5cdFx0XHRcdGxhZ01heC5zZXQobGFiZWxzLCBoaXN0b2dyYW0ubWF4IC8gMWU5KTtcblx0XHRcdFx0bGFnTWVhbi5zZXQobGFiZWxzLCBoaXN0b2dyYW0ubWVhbiAvIDFlOSk7XG5cdFx0XHRcdGxhZ1N0ZGRldi5zZXQobGFiZWxzLCBoaXN0b2dyYW0uc3RkZGV2IC8gMWU5KTtcblx0XHRcdFx0bGFnUDUwLnNldChsYWJlbHMsIGhpc3RvZ3JhbS5wZXJjZW50aWxlKDUwKSAvIDFlOSk7XG5cdFx0XHRcdGxhZ1A5MC5zZXQobGFiZWxzLCBoaXN0b2dyYW0ucGVyY2VudGlsZSg5MCkgLyAxZTkpO1xuXHRcdFx0XHRsYWdQOTkuc2V0KGxhYmVscywgaGlzdG9ncmFtLnBlcmNlbnRpbGUoOTkpIC8gMWU5KTtcblxuXHRcdFx0XHRoaXN0b2dyYW0ucmVzZXQoKTtcblx0XHRcdH07XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0aWYgKGUuY29kZSA9PT0gJ0VSUl9OT1RfSU1QTEVNRU5URUQnKSB7XG5cdFx0XHRcdHJldHVybjsgLy8gQnVuXG5cdFx0XHR9XG5cblx0XHRcdHRocm93IGU7XG5cdFx0fVxuXHR9XG5cblx0Y29uc3QgbGFnID0gbmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgTk9ERUpTX0VWRU5UTE9PUF9MQUcsXG5cdFx0aGVscDogJ0xhZyBvZiBldmVudCBsb29wIGluIHNlY29uZHMuJyxcblx0XHRyZWdpc3RlcnMsXG5cdFx0bGFiZWxOYW1lcyxcblx0XHRhZ2dyZWdhdG9yOiAnYXZlcmFnZScsXG5cdFx0Ly8gVXNlIHRoaXMgb25lIG1ldHJpYydzIGBjb2xsZWN0YCB0byBzZXQgYWxsIG1ldHJpY3MnIHZhbHVlcy5cblx0XHRjb2xsZWN0LFxuXHR9KTtcblx0Y29uc3QgbGFnTWluID0gbmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgTk9ERUpTX0VWRU5UTE9PUF9MQUdfTUlOLFxuXHRcdGhlbHA6ICdUaGUgbWluaW11bSByZWNvcmRlZCBldmVudCBsb29wIGRlbGF5LicsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0YWdncmVnYXRvcjogJ21pbicsXG5cdH0pO1xuXHRjb25zdCBsYWdNYXggPSBuZXcgR2F1Z2Uoe1xuXHRcdG5hbWU6IG5hbWVQcmVmaXggKyBOT0RFSlNfRVZFTlRMT09QX0xBR19NQVgsXG5cdFx0aGVscDogJ1RoZSBtYXhpbXVtIHJlY29yZGVkIGV2ZW50IGxvb3AgZGVsYXkuJyxcblx0XHRyZWdpc3RlcnMsXG5cdFx0bGFiZWxOYW1lcyxcblx0XHRhZ2dyZWdhdG9yOiAnbWF4Jyxcblx0fSk7XG5cdGNvbnN0IGxhZ01lYW4gPSBuZXcgR2F1Z2Uoe1xuXHRcdG5hbWU6IG5hbWVQcmVmaXggKyBOT0RFSlNfRVZFTlRMT09QX0xBR19NRUFOLFxuXHRcdGhlbHA6ICdUaGUgbWVhbiBvZiB0aGUgcmVjb3JkZWQgZXZlbnQgbG9vcCBkZWxheXMuJyxcblx0XHRyZWdpc3RlcnMsXG5cdFx0bGFiZWxOYW1lcyxcblx0XHRhZ2dyZWdhdG9yOiAnYXZlcmFnZScsXG5cdH0pO1xuXHRjb25zdCBsYWdTdGRkZXYgPSBuZXcgR2F1Z2Uoe1xuXHRcdG5hbWU6IG5hbWVQcmVmaXggKyBOT0RFSlNfRVZFTlRMT09QX0xBR19TVERERVYsXG5cdFx0aGVscDogJ1RoZSBzdGFuZGFyZCBkZXZpYXRpb24gb2YgdGhlIHJlY29yZGVkIGV2ZW50IGxvb3AgZGVsYXlzLicsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0YWdncmVnYXRvcjogJ2F2ZXJhZ2UnLFxuXHR9KTtcblx0Y29uc3QgbGFnUDUwID0gbmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgTk9ERUpTX0VWRU5UTE9PUF9MQUdfUDUwLFxuXHRcdGhlbHA6ICdUaGUgNTB0aCBwZXJjZW50aWxlIG9mIHRoZSByZWNvcmRlZCBldmVudCBsb29wIGRlbGF5cy4nLFxuXHRcdHJlZ2lzdGVycyxcblx0XHRsYWJlbE5hbWVzLFxuXHRcdGFnZ3JlZ2F0b3I6ICdhdmVyYWdlJyxcblx0fSk7XG5cdGNvbnN0IGxhZ1A5MCA9IG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19FVkVOVExPT1BfTEFHX1A5MCxcblx0XHRoZWxwOiAnVGhlIDkwdGggcGVyY2VudGlsZSBvZiB0aGUgcmVjb3JkZWQgZXZlbnQgbG9vcCBkZWxheXMuJyxcblx0XHRyZWdpc3RlcnMsXG5cdFx0bGFiZWxOYW1lcyxcblx0XHRhZ2dyZWdhdG9yOiAnYXZlcmFnZScsXG5cdH0pO1xuXHRjb25zdCBsYWdQOTkgPSBuZXcgR2F1Z2Uoe1xuXHRcdG5hbWU6IG5hbWVQcmVmaXggKyBOT0RFSlNfRVZFTlRMT09QX0xBR19QOTksXG5cdFx0aGVscDogJ1RoZSA5OXRoIHBlcmNlbnRpbGUgb2YgdGhlIHJlY29yZGVkIGV2ZW50IGxvb3AgZGVsYXlzLicsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0YWdncmVnYXRvcjogJ2F2ZXJhZ2UnLFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1xuXHROT0RFSlNfRVZFTlRMT09QX0xBRyxcblx0Tk9ERUpTX0VWRU5UTE9PUF9MQUdfTUlOLFxuXHROT0RFSlNfRVZFTlRMT09QX0xBR19NQVgsXG5cdE5PREVKU19FVkVOVExPT1BfTEFHX01FQU4sXG5cdE5PREVKU19FVkVOVExPT1BfTEFHX1NURERFVixcblx0Tk9ERUpTX0VWRU5UTE9PUF9MQUdfUDUwLFxuXHROT0RFSlNfRVZFTlRMT09QX0xBR19QOTAsXG5cdE5PREVKU19FVkVOVExPT1BfTEFHX1A5OSxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/eventLoopLag.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/gc.js":
/*!********************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/gc.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Histogram = __webpack_require__(/*! ../histogram */ \"(rsc)/../../node_modules/prom-client/lib/histogram.js\");\n\nlet perf_hooks;\n\ntry {\n\t// eslint-disable-next-line\n\tperf_hooks = __webpack_require__(/*! perf_hooks */ \"perf_hooks\");\n} catch {\n\t// node version is too old\n}\n\nconst NODEJS_GC_DURATION_SECONDS = 'nodejs_gc_duration_seconds';\nconst DEFAULT_GC_DURATION_BUCKETS = [0.001, 0.01, 0.1, 1, 2, 5];\n\nconst kinds = [];\n\nif (perf_hooks && perf_hooks.constants) {\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_MAJOR] = 'major';\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_MINOR] = 'minor';\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_INCREMENTAL] = 'incremental';\n\tkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_WEAKCB] = 'weakcb';\n}\n\nmodule.exports = (registry, config = {}) => {\n\tif (!perf_hooks) {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\tconst buckets = config.gcDurationBuckets\n\t\t? config.gcDurationBuckets\n\t\t: DEFAULT_GC_DURATION_BUCKETS;\n\tconst gcHistogram = new Histogram({\n\t\tname: namePrefix + NODEJS_GC_DURATION_SECONDS,\n\t\thelp: 'Garbage collection duration by kind, one of major, minor, incremental or weakcb.',\n\t\tlabelNames: ['kind', ...labelNames],\n\t\tenableExemplars: false,\n\t\tbuckets,\n\t\tregisters: registry ? [registry] : undefined,\n\t});\n\n\tconst obs = new perf_hooks.PerformanceObserver(list => {\n\t\tconst entry = list.getEntries()[0];\n\t\t// Node < 16 uses entry.kind\n\t\t// Node >= 16 uses entry.detail.kind\n\t\t// See: https://nodejs.org/docs/latest-v16.x/api/deprecations.html#deprecations_dep0152_extension_performanceentry_properties\n\t\tconst kind = entry.detail ? kinds[entry.detail.kind] : kinds[entry.kind];\n\t\t// Convert duration from milliseconds to seconds\n\t\tgcHistogram.observe(Object.assign({ kind }, labels), entry.duration / 1000);\n\t});\n\n\tobs.observe({ entryTypes: ['gc'] });\n};\n\nmodule.exports.metricNames = [NODEJS_GC_DURATION_SECONDS];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2djLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLG1CQUFPLENBQUMsMkVBQWM7O0FBRXhDOztBQUVBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsOEJBQVk7QUFDbEMsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsTUFBTTtBQUM1QyxFQUFFOztBQUVGLGVBQWUsb0JBQW9CO0FBQ25DOztBQUVBLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2djLmpzPzAyNGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgSGlzdG9ncmFtID0gcmVxdWlyZSgnLi4vaGlzdG9ncmFtJyk7XG5cbmxldCBwZXJmX2hvb2tzO1xuXG50cnkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblx0cGVyZl9ob29rcyA9IHJlcXVpcmUoJ3BlcmZfaG9va3MnKTtcbn0gY2F0Y2gge1xuXHQvLyBub2RlIHZlcnNpb24gaXMgdG9vIG9sZFxufVxuXG5jb25zdCBOT0RFSlNfR0NfRFVSQVRJT05fU0VDT05EUyA9ICdub2RlanNfZ2NfZHVyYXRpb25fc2Vjb25kcyc7XG5jb25zdCBERUZBVUxUX0dDX0RVUkFUSU9OX0JVQ0tFVFMgPSBbMC4wMDEsIDAuMDEsIDAuMSwgMSwgMiwgNV07XG5cbmNvbnN0IGtpbmRzID0gW107XG5cbmlmIChwZXJmX2hvb2tzICYmIHBlcmZfaG9va3MuY29uc3RhbnRzKSB7XG5cdGtpbmRzW3BlcmZfaG9va3MuY29uc3RhbnRzLk5PREVfUEVSRk9STUFOQ0VfR0NfTUFKT1JdID0gJ21ham9yJztcblx0a2luZHNbcGVyZl9ob29rcy5jb25zdGFudHMuTk9ERV9QRVJGT1JNQU5DRV9HQ19NSU5PUl0gPSAnbWlub3InO1xuXHRraW5kc1twZXJmX2hvb2tzLmNvbnN0YW50cy5OT0RFX1BFUkZPUk1BTkNFX0dDX0lOQ1JFTUVOVEFMXSA9ICdpbmNyZW1lbnRhbCc7XG5cdGtpbmRzW3BlcmZfaG9va3MuY29uc3RhbnRzLk5PREVfUEVSRk9STUFOQ0VfR0NfV0VBS0NCXSA9ICd3ZWFrY2InO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IChyZWdpc3RyeSwgY29uZmlnID0ge30pID0+IHtcblx0aWYgKCFwZXJmX2hvb2tzKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3QgbmFtZVByZWZpeCA9IGNvbmZpZy5wcmVmaXggPyBjb25maWcucHJlZml4IDogJyc7XG5cdGNvbnN0IGxhYmVscyA9IGNvbmZpZy5sYWJlbHMgPyBjb25maWcubGFiZWxzIDoge307XG5cdGNvbnN0IGxhYmVsTmFtZXMgPSBPYmplY3Qua2V5cyhsYWJlbHMpO1xuXHRjb25zdCBidWNrZXRzID0gY29uZmlnLmdjRHVyYXRpb25CdWNrZXRzXG5cdFx0PyBjb25maWcuZ2NEdXJhdGlvbkJ1Y2tldHNcblx0XHQ6IERFRkFVTFRfR0NfRFVSQVRJT05fQlVDS0VUUztcblx0Y29uc3QgZ2NIaXN0b2dyYW0gPSBuZXcgSGlzdG9ncmFtKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgTk9ERUpTX0dDX0RVUkFUSU9OX1NFQ09ORFMsXG5cdFx0aGVscDogJ0dhcmJhZ2UgY29sbGVjdGlvbiBkdXJhdGlvbiBieSBraW5kLCBvbmUgb2YgbWFqb3IsIG1pbm9yLCBpbmNyZW1lbnRhbCBvciB3ZWFrY2IuJyxcblx0XHRsYWJlbE5hbWVzOiBbJ2tpbmQnLCAuLi5sYWJlbE5hbWVzXSxcblx0XHRlbmFibGVFeGVtcGxhcnM6IGZhbHNlLFxuXHRcdGJ1Y2tldHMsXG5cdFx0cmVnaXN0ZXJzOiByZWdpc3RyeSA/IFtyZWdpc3RyeV0gOiB1bmRlZmluZWQsXG5cdH0pO1xuXG5cdGNvbnN0IG9icyA9IG5ldyBwZXJmX2hvb2tzLlBlcmZvcm1hbmNlT2JzZXJ2ZXIobGlzdCA9PiB7XG5cdFx0Y29uc3QgZW50cnkgPSBsaXN0LmdldEVudHJpZXMoKVswXTtcblx0XHQvLyBOb2RlIDwgMTYgdXNlcyBlbnRyeS5raW5kXG5cdFx0Ly8gTm9kZSA+PSAxNiB1c2VzIGVudHJ5LmRldGFpbC5raW5kXG5cdFx0Ly8gU2VlOiBodHRwczovL25vZGVqcy5vcmcvZG9jcy9sYXRlc3QtdjE2LngvYXBpL2RlcHJlY2F0aW9ucy5odG1sI2RlcHJlY2F0aW9uc19kZXAwMTUyX2V4dGVuc2lvbl9wZXJmb3JtYW5jZWVudHJ5X3Byb3BlcnRpZXNcblx0XHRjb25zdCBraW5kID0gZW50cnkuZGV0YWlsID8ga2luZHNbZW50cnkuZGV0YWlsLmtpbmRdIDoga2luZHNbZW50cnkua2luZF07XG5cdFx0Ly8gQ29udmVydCBkdXJhdGlvbiBmcm9tIG1pbGxpc2Vjb25kcyB0byBzZWNvbmRzXG5cdFx0Z2NIaXN0b2dyYW0ub2JzZXJ2ZShPYmplY3QuYXNzaWduKHsga2luZCB9LCBsYWJlbHMpLCBlbnRyeS5kdXJhdGlvbiAvIDEwMDApO1xuXHR9KTtcblxuXHRvYnMub2JzZXJ2ZSh7IGVudHJ5VHlwZXM6IFsnZ2MnXSB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW05PREVKU19HQ19EVVJBVElPTl9TRUNPTkRTXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/gc.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/heapSizeAndUsed.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/heapSizeAndUsed.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst safeMemoryUsage = __webpack_require__(/*! ./helpers/safeMemoryUsage */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js\");\n\nconst NODEJS_HEAP_SIZE_TOTAL = 'nodejs_heap_size_total_bytes';\nconst NODEJS_HEAP_SIZE_USED = 'nodejs_heap_size_used_bytes';\nconst NODEJS_EXTERNAL_MEMORY = 'nodejs_external_memory_bytes';\n\nmodule.exports = (registry, config = {}) => {\n\tif (typeof process.memoryUsage !== 'function') {\n\t\treturn;\n\t}\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst collect = () => {\n\t\tconst memUsage = safeMemoryUsage();\n\t\tif (memUsage) {\n\t\t\theapSizeTotal.set(labels, memUsage.heapTotal);\n\t\t\theapSizeUsed.set(labels, memUsage.heapUsed);\n\t\t\tif (memUsage.external !== undefined) {\n\t\t\t\texternalMemUsed.set(labels, memUsage.external);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst heapSizeTotal = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_TOTAL,\n\t\thelp: 'Process heap size from Node.js in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect,\n\t});\n\tconst heapSizeUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_USED,\n\t\thelp: 'Process heap size used from Node.js in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst externalMemUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_EXTERNAL_MEMORY,\n\t\thelp: 'Node.js external memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_HEAP_SIZE_TOTAL,\n\tNODEJS_HEAP_SIZE_USED,\n\tNODEJS_EXTERNAL_MEMORY,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2hlYXBTaXplQW5kVXNlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsbUVBQVU7QUFDaEMsd0JBQXdCLG1CQUFPLENBQUMsOEdBQTJCOztBQUUzRDtBQUNBO0FBQ0E7O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjs7QUFFQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvbWV0cmljcy9oZWFwU2l6ZUFuZFVzZWQuanM/NjE4NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IHNhZmVNZW1vcnlVc2FnZSA9IHJlcXVpcmUoJy4vaGVscGVycy9zYWZlTWVtb3J5VXNhZ2UnKTtcblxuY29uc3QgTk9ERUpTX0hFQVBfU0laRV9UT1RBTCA9ICdub2RlanNfaGVhcF9zaXplX3RvdGFsX2J5dGVzJztcbmNvbnN0IE5PREVKU19IRUFQX1NJWkVfVVNFRCA9ICdub2RlanNfaGVhcF9zaXplX3VzZWRfYnl0ZXMnO1xuY29uc3QgTk9ERUpTX0VYVEVSTkFMX01FTU9SWSA9ICdub2RlanNfZXh0ZXJuYWxfbWVtb3J5X2J5dGVzJztcblxubW9kdWxlLmV4cG9ydHMgPSAocmVnaXN0cnksIGNvbmZpZyA9IHt9KSA9PiB7XG5cdGlmICh0eXBlb2YgcHJvY2Vzcy5tZW1vcnlVc2FnZSAhPT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJldHVybjtcblx0fVxuXHRjb25zdCBsYWJlbHMgPSBjb25maWcubGFiZWxzID8gY29uZmlnLmxhYmVscyA6IHt9O1xuXHRjb25zdCBsYWJlbE5hbWVzID0gT2JqZWN0LmtleXMobGFiZWxzKTtcblxuXHRjb25zdCByZWdpc3RlcnMgPSByZWdpc3RyeSA/IFtyZWdpc3RyeV0gOiB1bmRlZmluZWQ7XG5cdGNvbnN0IG5hbWVQcmVmaXggPSBjb25maWcucHJlZml4ID8gY29uZmlnLnByZWZpeCA6ICcnO1xuXHRjb25zdCBjb2xsZWN0ID0gKCkgPT4ge1xuXHRcdGNvbnN0IG1lbVVzYWdlID0gc2FmZU1lbW9yeVVzYWdlKCk7XG5cdFx0aWYgKG1lbVVzYWdlKSB7XG5cdFx0XHRoZWFwU2l6ZVRvdGFsLnNldChsYWJlbHMsIG1lbVVzYWdlLmhlYXBUb3RhbCk7XG5cdFx0XHRoZWFwU2l6ZVVzZWQuc2V0KGxhYmVscywgbWVtVXNhZ2UuaGVhcFVzZWQpO1xuXHRcdFx0aWYgKG1lbVVzYWdlLmV4dGVybmFsICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0ZXh0ZXJuYWxNZW1Vc2VkLnNldChsYWJlbHMsIG1lbVVzYWdlLmV4dGVybmFsKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cblx0Y29uc3QgaGVhcFNpemVUb3RhbCA9IG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19IRUFQX1NJWkVfVE9UQUwsXG5cdFx0aGVscDogJ1Byb2Nlc3MgaGVhcCBzaXplIGZyb20gTm9kZS5qcyBpbiBieXRlcy4nLFxuXHRcdHJlZ2lzdGVycyxcblx0XHRsYWJlbE5hbWVzLFxuXHRcdC8vIFVzZSB0aGlzIG9uZSBtZXRyaWMncyBgY29sbGVjdGAgdG8gc2V0IGFsbCBtZXRyaWNzJyB2YWx1ZXMuXG5cdFx0Y29sbGVjdCxcblx0fSk7XG5cdGNvbnN0IGhlYXBTaXplVXNlZCA9IG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19IRUFQX1NJWkVfVVNFRCxcblx0XHRoZWxwOiAnUHJvY2VzcyBoZWFwIHNpemUgdXNlZCBmcm9tIE5vZGUuanMgaW4gYnl0ZXMuJyxcblx0XHRyZWdpc3RlcnMsXG5cdFx0bGFiZWxOYW1lcyxcblx0fSk7XG5cdGNvbnN0IGV4dGVybmFsTWVtVXNlZCA9IG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19FWFRFUk5BTF9NRU1PUlksXG5cdFx0aGVscDogJ05vZGUuanMgZXh0ZXJuYWwgbWVtb3J5IHNpemUgaW4gYnl0ZXMuJyxcblx0XHRyZWdpc3RlcnMsXG5cdFx0bGFiZWxOYW1lcyxcblx0fSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5tZXRyaWNOYW1lcyA9IFtcblx0Tk9ERUpTX0hFQVBfU0laRV9UT1RBTCxcblx0Tk9ERUpTX0hFQVBfU0laRV9VU0VELFxuXHROT0RFSlNfRVhURVJOQUxfTUVNT1JZLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/heapSizeAndUsed.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/heapSpacesSizeAndUsed.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/heapSpacesSizeAndUsed.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst v8 = __webpack_require__(/*! v8 */ \"v8\");\n\nconst METRICS = ['total', 'used', 'available'];\nconst NODEJS_HEAP_SIZE = {};\n\nMETRICS.forEach(metricType => {\n\tNODEJS_HEAP_SIZE[metricType] = `nodejs_heap_space_size_${metricType}_bytes`;\n});\n\nmodule.exports = (registry, config = {}) => {\n\ttry {\n\t\tv8.getHeapSpaceStatistics();\n\t} catch (e) {\n\t\tif (e.code === 'ERR_NOT_IMPLEMENTED') {\n\t\t\treturn; // Bun\n\t\t}\n\t\tthrow e;\n\t}\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = ['space', ...Object.keys(labels)];\n\n\tconst gauges = {};\n\n\tMETRICS.forEach(metricType => {\n\t\tgauges[metricType] = new Gauge({\n\t\t\tname: namePrefix + NODEJS_HEAP_SIZE[metricType],\n\t\t\thelp: `Process heap space size ${metricType} from Node.js in bytes.`,\n\t\t\tlabelNames,\n\t\t\tregisters,\n\t\t});\n\t});\n\n\t// Use this one metric's `collect` to set all metrics' values.\n\tgauges.total.collect = () => {\n\t\tfor (const space of v8.getHeapSpaceStatistics()) {\n\t\t\tconst spaceName = space.space_name.substr(\n\t\t\t\t0,\n\t\t\t\tspace.space_name.indexOf('_space'),\n\t\t\t);\n\n\t\t\tgauges.total.set({ space: spaceName, ...labels }, space.space_size);\n\t\t\tgauges.used.set({ space: spaceName, ...labels }, space.space_used_size);\n\t\t\tgauges.available.set(\n\t\t\t\t{ space: spaceName, ...labels },\n\t\t\t\tspace.space_available_size,\n\t\t\t);\n\t\t}\n\t};\n};\n\nmodule.exports.metricNames = Object.values(NODEJS_HEAP_SIZE);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2hlYXBTcGFjZXNTaXplQW5kVXNlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsbUVBQVU7QUFDaEMsV0FBVyxtQkFBTyxDQUFDLGNBQUk7O0FBRXZCO0FBQ0E7O0FBRUE7QUFDQSwwREFBMEQsV0FBVztBQUNyRSxDQUFDOztBQUVELHVDQUF1QztBQUN2QztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsWUFBWTtBQUNoRDtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLDZCQUE2QjtBQUNuRCxxQkFBcUIsNkJBQTZCO0FBQ2xEO0FBQ0EsTUFBTSw2QkFBNkI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvbWV0cmljcy9oZWFwU3BhY2VzU2l6ZUFuZFVzZWQuanM/MzQ3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IHY4ID0gcmVxdWlyZSgndjgnKTtcblxuY29uc3QgTUVUUklDUyA9IFsndG90YWwnLCAndXNlZCcsICdhdmFpbGFibGUnXTtcbmNvbnN0IE5PREVKU19IRUFQX1NJWkUgPSB7fTtcblxuTUVUUklDUy5mb3JFYWNoKG1ldHJpY1R5cGUgPT4ge1xuXHROT0RFSlNfSEVBUF9TSVpFW21ldHJpY1R5cGVdID0gYG5vZGVqc19oZWFwX3NwYWNlX3NpemVfJHttZXRyaWNUeXBlfV9ieXRlc2A7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSAocmVnaXN0cnksIGNvbmZpZyA9IHt9KSA9PiB7XG5cdHRyeSB7XG5cdFx0djguZ2V0SGVhcFNwYWNlU3RhdGlzdGljcygpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKGUuY29kZSA9PT0gJ0VSUl9OT1RfSU1QTEVNRU5URUQnKSB7XG5cdFx0XHRyZXR1cm47IC8vIEJ1blxuXHRcdH1cblx0XHR0aHJvdyBlO1xuXHR9XG5cdGNvbnN0IHJlZ2lzdGVycyA9IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZDtcblx0Y29uc3QgbmFtZVByZWZpeCA9IGNvbmZpZy5wcmVmaXggPyBjb25maWcucHJlZml4IDogJyc7XG5cblx0Y29uc3QgbGFiZWxzID0gY29uZmlnLmxhYmVscyA/IGNvbmZpZy5sYWJlbHMgOiB7fTtcblx0Y29uc3QgbGFiZWxOYW1lcyA9IFsnc3BhY2UnLCAuLi5PYmplY3Qua2V5cyhsYWJlbHMpXTtcblxuXHRjb25zdCBnYXVnZXMgPSB7fTtcblxuXHRNRVRSSUNTLmZvckVhY2gobWV0cmljVHlwZSA9PiB7XG5cdFx0Z2F1Z2VzW21ldHJpY1R5cGVdID0gbmV3IEdhdWdlKHtcblx0XHRcdG5hbWU6IG5hbWVQcmVmaXggKyBOT0RFSlNfSEVBUF9TSVpFW21ldHJpY1R5cGVdLFxuXHRcdFx0aGVscDogYFByb2Nlc3MgaGVhcCBzcGFjZSBzaXplICR7bWV0cmljVHlwZX0gZnJvbSBOb2RlLmpzIGluIGJ5dGVzLmAsXG5cdFx0XHRsYWJlbE5hbWVzLFxuXHRcdFx0cmVnaXN0ZXJzLFxuXHRcdH0pO1xuXHR9KTtcblxuXHQvLyBVc2UgdGhpcyBvbmUgbWV0cmljJ3MgYGNvbGxlY3RgIHRvIHNldCBhbGwgbWV0cmljcycgdmFsdWVzLlxuXHRnYXVnZXMudG90YWwuY29sbGVjdCA9ICgpID0+IHtcblx0XHRmb3IgKGNvbnN0IHNwYWNlIG9mIHY4LmdldEhlYXBTcGFjZVN0YXRpc3RpY3MoKSkge1xuXHRcdFx0Y29uc3Qgc3BhY2VOYW1lID0gc3BhY2Uuc3BhY2VfbmFtZS5zdWJzdHIoXG5cdFx0XHRcdDAsXG5cdFx0XHRcdHNwYWNlLnNwYWNlX25hbWUuaW5kZXhPZignX3NwYWNlJyksXG5cdFx0XHQpO1xuXG5cdFx0XHRnYXVnZXMudG90YWwuc2V0KHsgc3BhY2U6IHNwYWNlTmFtZSwgLi4ubGFiZWxzIH0sIHNwYWNlLnNwYWNlX3NpemUpO1xuXHRcdFx0Z2F1Z2VzLnVzZWQuc2V0KHsgc3BhY2U6IHNwYWNlTmFtZSwgLi4ubGFiZWxzIH0sIHNwYWNlLnNwYWNlX3VzZWRfc2l6ZSk7XG5cdFx0XHRnYXVnZXMuYXZhaWxhYmxlLnNldChcblx0XHRcdFx0eyBzcGFjZTogc3BhY2VOYW1lLCAuLi5sYWJlbHMgfSxcblx0XHRcdFx0c3BhY2Uuc3BhY2VfYXZhaWxhYmxlX3NpemUsXG5cdFx0XHQpO1xuXHRcdH1cblx0fTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gT2JqZWN0LnZhbHVlcyhOT0RFSlNfSEVBUF9TSVpFKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/heapSpacesSizeAndUsed.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js ***!
  \***********************************************************************************/
/***/ ((module) => {

eval("\n\nfunction aggregateByObjectName(list) {\n\tconst data = {};\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst listElement = list[i];\n\n\t\tif (!listElement || typeof listElement.constructor === 'undefined') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (Object.hasOwnProperty.call(data, listElement.constructor.name)) {\n\t\t\tdata[listElement.constructor.name] += 1;\n\t\t} else {\n\t\t\tdata[listElement.constructor.name] = 1;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction updateMetrics(gauge, data, labels) {\n\tgauge.reset();\n\tfor (const key in data) {\n\t\tgauge.set(Object.assign({ type: key }, labels || {}), data[key]);\n\t}\n}\n\nmodule.exports = {\n\taggregateByObjectName,\n\tupdateMetrics,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2hlbHBlcnMvcHJvY2Vzc01ldHJpY3NIZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUEsaUJBQWlCLGlCQUFpQjtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixXQUFXLGNBQWM7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2hlbHBlcnMvcHJvY2Vzc01ldHJpY3NIZWxwZXJzLmpzPzUwODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBhZ2dyZWdhdGVCeU9iamVjdE5hbWUobGlzdCkge1xuXHRjb25zdCBkYXRhID0ge307XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0Y29uc3QgbGlzdEVsZW1lbnQgPSBsaXN0W2ldO1xuXG5cdFx0aWYgKCFsaXN0RWxlbWVudCB8fCB0eXBlb2YgbGlzdEVsZW1lbnQuY29uc3RydWN0b3IgPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwoZGF0YSwgbGlzdEVsZW1lbnQuY29uc3RydWN0b3IubmFtZSkpIHtcblx0XHRcdGRhdGFbbGlzdEVsZW1lbnQuY29uc3RydWN0b3IubmFtZV0gKz0gMTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YVtsaXN0RWxlbWVudC5jb25zdHJ1Y3Rvci5uYW1lXSA9IDE7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVNZXRyaWNzKGdhdWdlLCBkYXRhLCBsYWJlbHMpIHtcblx0Z2F1Z2UucmVzZXQoKTtcblx0Zm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuXHRcdGdhdWdlLnNldChPYmplY3QuYXNzaWduKHsgdHlwZToga2V5IH0sIGxhYmVscyB8fCB7fSksIGRhdGFba2V5XSk7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdGFnZ3JlZ2F0ZUJ5T2JqZWN0TmFtZSxcblx0dXBkYXRlTWV0cmljcyxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("\n\n// process.memoryUsage() can throw on some platforms, see #67\nfunction safeMemoryUsage() {\n\ttry {\n\t\treturn process.memoryUsage();\n\t} catch {\n\t\treturn;\n\t}\n}\n\nmodule.exports = safeMemoryUsage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2hlbHBlcnMvc2FmZU1lbW9yeVVzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL2hlbHBlcnMvc2FmZU1lbW9yeVVzYWdlLmpzPzFiYjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBwcm9jZXNzLm1lbW9yeVVzYWdlKCkgY2FuIHRocm93IG9uIHNvbWUgcGxhdGZvcm1zLCBzZWUgIzY3XG5mdW5jdGlvbiBzYWZlTWVtb3J5VXNhZ2UoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHByb2Nlc3MubWVtb3J5VXNhZ2UoKTtcblx0fSBjYXRjaCB7XG5cdFx0cmV0dXJuO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2FmZU1lbW9yeVVzYWdlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/osMemoryHeap.js":
/*!******************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/osMemoryHeap.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst linuxVariant = __webpack_require__(/*! ./osMemoryHeapLinux */ \"(rsc)/../../node_modules/prom-client/lib/metrics/osMemoryHeapLinux.js\");\nconst safeMemoryUsage = __webpack_require__(/*! ./helpers/safeMemoryUsage */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js\");\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\n\nfunction notLinuxVariant(registry, config = {}) {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst memUsage = safeMemoryUsage();\n\n\t\t\t// I don't think the other things returned from `process.memoryUsage()` is relevant to a standard export\n\t\t\tif (memUsage) {\n\t\t\t\tthis.set(labels, memUsage.rss);\n\t\t\t}\n\t\t},\n\t});\n}\n\nmodule.exports = (registry, config) =>\n\tprocess.platform === 'linux'\n\t\t? linuxVariant(registry, config)\n\t\t: notLinuxVariant(registry, config);\n\nmodule.exports.metricNames =\n\tprocess.platform === 'linux'\n\t\t? linuxVariant.metricNames\n\t\t: [PROCESS_RESIDENT_MEMORY];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL29zTWVtb3J5SGVhcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsbUVBQVU7QUFDaEMscUJBQXFCLG1CQUFPLENBQUMsa0dBQXFCO0FBQ2xELHdCQUF3QixtQkFBTyxDQUFDLDhHQUEyQjs7QUFFM0Q7O0FBRUEsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL29zTWVtb3J5SGVhcC5qcz81NzY3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgR2F1Z2UgPSByZXF1aXJlKCcuLi9nYXVnZScpO1xuY29uc3QgbGludXhWYXJpYW50ID0gcmVxdWlyZSgnLi9vc01lbW9yeUhlYXBMaW51eCcpO1xuY29uc3Qgc2FmZU1lbW9yeVVzYWdlID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NhZmVNZW1vcnlVc2FnZScpO1xuXG5jb25zdCBQUk9DRVNTX1JFU0lERU5UX01FTU9SWSA9ICdwcm9jZXNzX3Jlc2lkZW50X21lbW9yeV9ieXRlcyc7XG5cbmZ1bmN0aW9uIG5vdExpbnV4VmFyaWFudChyZWdpc3RyeSwgY29uZmlnID0ge30pIHtcblx0Y29uc3QgbmFtZVByZWZpeCA9IGNvbmZpZy5wcmVmaXggPyBjb25maWcucHJlZml4IDogJyc7XG5cdGNvbnN0IGxhYmVscyA9IGNvbmZpZy5sYWJlbHMgPyBjb25maWcubGFiZWxzIDoge307XG5cdGNvbnN0IGxhYmVsTmFtZXMgPSBPYmplY3Qua2V5cyhsYWJlbHMpO1xuXG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIFBST0NFU1NfUkVTSURFTlRfTUVNT1JZLFxuXHRcdGhlbHA6ICdSZXNpZGVudCBtZW1vcnkgc2l6ZSBpbiBieXRlcy4nLFxuXHRcdHJlZ2lzdGVyczogcmVnaXN0cnkgPyBbcmVnaXN0cnldIDogdW5kZWZpbmVkLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0Y29sbGVjdCgpIHtcblx0XHRcdGNvbnN0IG1lbVVzYWdlID0gc2FmZU1lbW9yeVVzYWdlKCk7XG5cblx0XHRcdC8vIEkgZG9uJ3QgdGhpbmsgdGhlIG90aGVyIHRoaW5ncyByZXR1cm5lZCBmcm9tIGBwcm9jZXNzLm1lbW9yeVVzYWdlKClgIGlzIHJlbGV2YW50IHRvIGEgc3RhbmRhcmQgZXhwb3J0XG5cdFx0XHRpZiAobWVtVXNhZ2UpIHtcblx0XHRcdFx0dGhpcy5zZXQobGFiZWxzLCBtZW1Vc2FnZS5yc3MpO1xuXHRcdFx0fVxuXHRcdH0sXG5cdH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IChyZWdpc3RyeSwgY29uZmlnKSA9PlxuXHRwcm9jZXNzLnBsYXRmb3JtID09PSAnbGludXgnXG5cdFx0PyBsaW51eFZhcmlhbnQocmVnaXN0cnksIGNvbmZpZylcblx0XHQ6IG5vdExpbnV4VmFyaWFudChyZWdpc3RyeSwgY29uZmlnKTtcblxubW9kdWxlLmV4cG9ydHMubWV0cmljTmFtZXMgPVxuXHRwcm9jZXNzLnBsYXRmb3JtID09PSAnbGludXgnXG5cdFx0PyBsaW51eFZhcmlhbnQubWV0cmljTmFtZXNcblx0XHQ6IFtQUk9DRVNTX1JFU0lERU5UX01FTU9SWV07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/osMemoryHeap.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/osMemoryHeapLinux.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/osMemoryHeapLinux.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nconst values = ['VmSize', 'VmRSS', 'VmData'];\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\nconst PROCESS_VIRTUAL_MEMORY = 'process_virtual_memory_bytes';\nconst PROCESS_HEAP = 'process_heap_bytes';\n\nfunction structureOutput(input) {\n\treturn input.split('\\n').reduce((acc, string) => {\n\t\tif (!values.some(value => string.startsWith(value))) {\n\t\t\treturn acc;\n\t\t}\n\n\t\tconst split = string.split(':');\n\n\t\t// Get the value\n\t\tlet value = split[1].trim();\n\t\t// Remove trailing ` kb`\n\t\tvalue = value.substr(0, value.length - 3);\n\t\t// Make it into a number in bytes bytes\n\t\tvalue = Number(value) * 1024;\n\n\t\tacc[split[0]] = value;\n\n\t\treturn acc;\n\t}, {});\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tconst residentMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect() {\n\t\t\ttry {\n\t\t\t\t// Sync I/O is often problematic, but /proc isn't really I/O, it\n\t\t\t\t// a virtual filesystem that maps directly to in-kernel data\n\t\t\t\t// structures and never blocks.\n\t\t\t\t//\n\t\t\t\t// Node.js/libuv do this already for process.memoryUsage(), see:\n\t\t\t\t// - https://github.com/libuv/libuv/blob/a629688008694ed8022269e66826d4d6ec688b83/src/unix/linux-core.c#L506-L523\n\t\t\t\tconst stat = fs.readFileSync('/proc/self/status', 'utf8');\n\t\t\t\tconst structuredOutput = structureOutput(stat);\n\n\t\t\t\tresidentMemGauge.set(labels, structuredOutput.VmRSS);\n\t\t\t\tvirtualMemGauge.set(labels, structuredOutput.VmSize);\n\t\t\t\theapSizeMemGauge.set(labels, structuredOutput.VmData);\n\t\t\t} catch {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t});\n\tconst virtualMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_VIRTUAL_MEMORY,\n\t\thelp: 'Virtual memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst heapSizeMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_HEAP,\n\t\thelp: 'Process heap size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_RESIDENT_MEMORY,\n\tPROCESS_VIRTUAL_MEMORY,\n\tPROCESS_HEAP,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL29zTWVtb3J5SGVhcExpbnV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsbUJBQU8sQ0FBQyxtRUFBVTtBQUNoQyxXQUFXLG1CQUFPLENBQUMsY0FBSTs7QUFFdkI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsRUFBRSxJQUFJO0FBQ047O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUEsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL21ldHJpY3Mvb3NNZW1vcnlIZWFwTGludXguanM/NzIyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuY29uc3QgdmFsdWVzID0gWydWbVNpemUnLCAnVm1SU1MnLCAnVm1EYXRhJ107XG5cbmNvbnN0IFBST0NFU1NfUkVTSURFTlRfTUVNT1JZID0gJ3Byb2Nlc3NfcmVzaWRlbnRfbWVtb3J5X2J5dGVzJztcbmNvbnN0IFBST0NFU1NfVklSVFVBTF9NRU1PUlkgPSAncHJvY2Vzc192aXJ0dWFsX21lbW9yeV9ieXRlcyc7XG5jb25zdCBQUk9DRVNTX0hFQVAgPSAncHJvY2Vzc19oZWFwX2J5dGVzJztcblxuZnVuY3Rpb24gc3RydWN0dXJlT3V0cHV0KGlucHV0KSB7XG5cdHJldHVybiBpbnB1dC5zcGxpdCgnXFxuJykucmVkdWNlKChhY2MsIHN0cmluZykgPT4ge1xuXHRcdGlmICghdmFsdWVzLnNvbWUodmFsdWUgPT4gc3RyaW5nLnN0YXJ0c1dpdGgodmFsdWUpKSkge1xuXHRcdFx0cmV0dXJuIGFjYztcblx0XHR9XG5cblx0XHRjb25zdCBzcGxpdCA9IHN0cmluZy5zcGxpdCgnOicpO1xuXG5cdFx0Ly8gR2V0IHRoZSB2YWx1ZVxuXHRcdGxldCB2YWx1ZSA9IHNwbGl0WzFdLnRyaW0oKTtcblx0XHQvLyBSZW1vdmUgdHJhaWxpbmcgYCBrYmBcblx0XHR2YWx1ZSA9IHZhbHVlLnN1YnN0cigwLCB2YWx1ZS5sZW5ndGggLSAzKTtcblx0XHQvLyBNYWtlIGl0IGludG8gYSBudW1iZXIgaW4gYnl0ZXMgYnl0ZXNcblx0XHR2YWx1ZSA9IE51bWJlcih2YWx1ZSkgKiAxMDI0O1xuXG5cdFx0YWNjW3NwbGl0WzBdXSA9IHZhbHVlO1xuXG5cdFx0cmV0dXJuIGFjYztcblx0fSwge30pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IChyZWdpc3RyeSwgY29uZmlnID0ge30pID0+IHtcblx0Y29uc3QgcmVnaXN0ZXJzID0gcmVnaXN0cnkgPyBbcmVnaXN0cnldIDogdW5kZWZpbmVkO1xuXHRjb25zdCBuYW1lUHJlZml4ID0gY29uZmlnLnByZWZpeCA/IGNvbmZpZy5wcmVmaXggOiAnJztcblx0Y29uc3QgbGFiZWxzID0gY29uZmlnLmxhYmVscyA/IGNvbmZpZy5sYWJlbHMgOiB7fTtcblx0Y29uc3QgbGFiZWxOYW1lcyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG5cblx0Y29uc3QgcmVzaWRlbnRNZW1HYXVnZSA9IG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIFBST0NFU1NfUkVTSURFTlRfTUVNT1JZLFxuXHRcdGhlbHA6ICdSZXNpZGVudCBtZW1vcnkgc2l6ZSBpbiBieXRlcy4nLFxuXHRcdHJlZ2lzdGVycyxcblx0XHRsYWJlbE5hbWVzLFxuXHRcdC8vIFVzZSB0aGlzIG9uZSBtZXRyaWMncyBgY29sbGVjdGAgdG8gc2V0IGFsbCBtZXRyaWNzJyB2YWx1ZXMuXG5cdFx0Y29sbGVjdCgpIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdC8vIFN5bmMgSS9PIGlzIG9mdGVuIHByb2JsZW1hdGljLCBidXQgL3Byb2MgaXNuJ3QgcmVhbGx5IEkvTywgaXRcblx0XHRcdFx0Ly8gYSB2aXJ0dWFsIGZpbGVzeXN0ZW0gdGhhdCBtYXBzIGRpcmVjdGx5IHRvIGluLWtlcm5lbCBkYXRhXG5cdFx0XHRcdC8vIHN0cnVjdHVyZXMgYW5kIG5ldmVyIGJsb2Nrcy5cblx0XHRcdFx0Ly9cblx0XHRcdFx0Ly8gTm9kZS5qcy9saWJ1diBkbyB0aGlzIGFscmVhZHkgZm9yIHByb2Nlc3MubWVtb3J5VXNhZ2UoKSwgc2VlOlxuXHRcdFx0XHQvLyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9saWJ1di9saWJ1di9ibG9iL2E2Mjk2ODgwMDg2OTRlZDgwMjIyNjllNjY4MjZkNGQ2ZWM2ODhiODMvc3JjL3VuaXgvbGludXgtY29yZS5jI0w1MDYtTDUyM1xuXHRcdFx0XHRjb25zdCBzdGF0ID0gZnMucmVhZEZpbGVTeW5jKCcvcHJvYy9zZWxmL3N0YXR1cycsICd1dGY4Jyk7XG5cdFx0XHRcdGNvbnN0IHN0cnVjdHVyZWRPdXRwdXQgPSBzdHJ1Y3R1cmVPdXRwdXQoc3RhdCk7XG5cblx0XHRcdFx0cmVzaWRlbnRNZW1HYXVnZS5zZXQobGFiZWxzLCBzdHJ1Y3R1cmVkT3V0cHV0LlZtUlNTKTtcblx0XHRcdFx0dmlydHVhbE1lbUdhdWdlLnNldChsYWJlbHMsIHN0cnVjdHVyZWRPdXRwdXQuVm1TaXplKTtcblx0XHRcdFx0aGVhcFNpemVNZW1HYXVnZS5zZXQobGFiZWxzLCBzdHJ1Y3R1cmVkT3V0cHV0LlZtRGF0YSk7XG5cdFx0XHR9IGNhdGNoIHtcblx0XHRcdFx0Ly8gbm9vcFxuXHRcdFx0fVxuXHRcdH0sXG5cdH0pO1xuXHRjb25zdCB2aXJ0dWFsTWVtR2F1Z2UgPSBuZXcgR2F1Z2Uoe1xuXHRcdG5hbWU6IG5hbWVQcmVmaXggKyBQUk9DRVNTX1ZJUlRVQUxfTUVNT1JZLFxuXHRcdGhlbHA6ICdWaXJ0dWFsIG1lbW9yeSBzaXplIGluIGJ5dGVzLicsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdH0pO1xuXHRjb25zdCBoZWFwU2l6ZU1lbUdhdWdlID0gbmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgUFJPQ0VTU19IRUFQLFxuXHRcdGhlbHA6ICdQcm9jZXNzIGhlYXAgc2l6ZSBpbiBieXRlcy4nLFxuXHRcdHJlZ2lzdGVycyxcblx0XHRsYWJlbE5hbWVzLFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1xuXHRQUk9DRVNTX1JFU0lERU5UX01FTU9SWSxcblx0UFJPQ0VTU19WSVJUVUFMX01FTU9SWSxcblx0UFJPQ0VTU19IRUFQLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/osMemoryHeapLinux.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processCpuTotal.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processCpuTotal.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst OtelApi = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/../../node_modules/@opentelemetry/api/build/esm/index.js\");\nconst Counter = __webpack_require__(/*! ../counter */ \"(rsc)/../../node_modules/prom-client/lib/counter.js\");\n\nconst PROCESS_CPU_USER_SECONDS = 'process_cpu_user_seconds_total';\nconst PROCESS_CPU_SYSTEM_SECONDS = 'process_cpu_system_seconds_total';\nconst PROCESS_CPU_SECONDS = 'process_cpu_seconds_total';\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst exemplars = config.enableExemplars ? config.enableExemplars : false;\n\tconst labelNames = Object.keys(labels);\n\n\tlet lastCpuUsage = process.cpuUsage();\n\n\tconst cpuUserUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_USER_SECONDS,\n\t\thelp: 'Total user CPU time spent in seconds.',\n\t\tenableExemplars: exemplars,\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect() {\n\t\t\tconst cpuUsage = process.cpuUsage();\n\n\t\t\tconst userUsageMicros = cpuUsage.user - lastCpuUsage.user;\n\t\t\tconst systemUsageMicros = cpuUsage.system - lastCpuUsage.system;\n\n\t\t\tlastCpuUsage = cpuUsage;\n\n\t\t\tif (this.enableExemplars) {\n\t\t\t\tlet exemplarLabels = {};\n\t\t\t\tconst currentSpan = OtelApi.trace.getSpan(OtelApi.context.active());\n\t\t\t\tif (currentSpan) {\n\t\t\t\t\texemplarLabels = {\n\t\t\t\t\t\ttraceId: currentSpan.spanContext().traceId,\n\t\t\t\t\t\tspanId: currentSpan.spanContext().spanId,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tcpuUserUsageCounter.inc({\n\t\t\t\t\tlabels,\n\t\t\t\t\tvalue: userUsageMicros / 1e6,\n\t\t\t\t\texemplarLabels,\n\t\t\t\t});\n\t\t\t\tcpuSystemUsageCounter.inc({\n\t\t\t\t\tlabels,\n\t\t\t\t\tvalue: systemUsageMicros / 1e6,\n\t\t\t\t\texemplarLabels,\n\t\t\t\t});\n\t\t\t\tcpuUsageCounter.inc({\n\t\t\t\t\tlabels,\n\t\t\t\t\tvalue: (userUsageMicros + systemUsageMicros) / 1e6,\n\t\t\t\t\texemplarLabels,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcpuUserUsageCounter.inc(labels, userUsageMicros / 1e6);\n\t\t\t\tcpuSystemUsageCounter.inc(labels, systemUsageMicros / 1e6);\n\t\t\t\tcpuUsageCounter.inc(\n\t\t\t\t\tlabels,\n\t\t\t\t\t(userUsageMicros + systemUsageMicros) / 1e6,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n\tconst cpuSystemUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SYSTEM_SECONDS,\n\t\thelp: 'Total system CPU time spent in seconds.',\n\t\tenableExemplars: exemplars,\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst cpuUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SECONDS,\n\t\thelp: 'Total user and system CPU time spent in seconds.',\n\t\tenableExemplars: exemplars,\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_CPU_USER_SECONDS,\n\tPROCESS_CPU_SYSTEM_SECONDS,\n\tPROCESS_CPU_SECONDS,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NDcHVUb3RhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixnQkFBZ0IsbUJBQU8sQ0FBQywwRkFBb0I7QUFDNUMsZ0JBQWdCLG1CQUFPLENBQUMsdUVBQVk7O0FBRXBDO0FBQ0E7QUFDQTs7QUFFQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUEsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL21ldHJpY3MvcHJvY2Vzc0NwdVRvdGFsLmpzPzFhOTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBPdGVsQXBpID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvYXBpJyk7XG5jb25zdCBDb3VudGVyID0gcmVxdWlyZSgnLi4vY291bnRlcicpO1xuXG5jb25zdCBQUk9DRVNTX0NQVV9VU0VSX1NFQ09ORFMgPSAncHJvY2Vzc19jcHVfdXNlcl9zZWNvbmRzX3RvdGFsJztcbmNvbnN0IFBST0NFU1NfQ1BVX1NZU1RFTV9TRUNPTkRTID0gJ3Byb2Nlc3NfY3B1X3N5c3RlbV9zZWNvbmRzX3RvdGFsJztcbmNvbnN0IFBST0NFU1NfQ1BVX1NFQ09ORFMgPSAncHJvY2Vzc19jcHVfc2Vjb25kc190b3RhbCc7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlZ2lzdHJ5LCBjb25maWcgPSB7fSkgPT4ge1xuXHRjb25zdCByZWdpc3RlcnMgPSByZWdpc3RyeSA/IFtyZWdpc3RyeV0gOiB1bmRlZmluZWQ7XG5cdGNvbnN0IG5hbWVQcmVmaXggPSBjb25maWcucHJlZml4ID8gY29uZmlnLnByZWZpeCA6ICcnO1xuXHRjb25zdCBsYWJlbHMgPSBjb25maWcubGFiZWxzID8gY29uZmlnLmxhYmVscyA6IHt9O1xuXHRjb25zdCBleGVtcGxhcnMgPSBjb25maWcuZW5hYmxlRXhlbXBsYXJzID8gY29uZmlnLmVuYWJsZUV4ZW1wbGFycyA6IGZhbHNlO1xuXHRjb25zdCBsYWJlbE5hbWVzID0gT2JqZWN0LmtleXMobGFiZWxzKTtcblxuXHRsZXQgbGFzdENwdVVzYWdlID0gcHJvY2Vzcy5jcHVVc2FnZSgpO1xuXG5cdGNvbnN0IGNwdVVzZXJVc2FnZUNvdW50ZXIgPSBuZXcgQ291bnRlcih7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIFBST0NFU1NfQ1BVX1VTRVJfU0VDT05EUyxcblx0XHRoZWxwOiAnVG90YWwgdXNlciBDUFUgdGltZSBzcGVudCBpbiBzZWNvbmRzLicsXG5cdFx0ZW5hYmxlRXhlbXBsYXJzOiBleGVtcGxhcnMsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0Ly8gVXNlIHRoaXMgb25lIG1ldHJpYydzIGBjb2xsZWN0YCB0byBzZXQgYWxsIG1ldHJpY3MnIHZhbHVlcy5cblx0XHRjb2xsZWN0KCkge1xuXHRcdFx0Y29uc3QgY3B1VXNhZ2UgPSBwcm9jZXNzLmNwdVVzYWdlKCk7XG5cblx0XHRcdGNvbnN0IHVzZXJVc2FnZU1pY3JvcyA9IGNwdVVzYWdlLnVzZXIgLSBsYXN0Q3B1VXNhZ2UudXNlcjtcblx0XHRcdGNvbnN0IHN5c3RlbVVzYWdlTWljcm9zID0gY3B1VXNhZ2Uuc3lzdGVtIC0gbGFzdENwdVVzYWdlLnN5c3RlbTtcblxuXHRcdFx0bGFzdENwdVVzYWdlID0gY3B1VXNhZ2U7XG5cblx0XHRcdGlmICh0aGlzLmVuYWJsZUV4ZW1wbGFycykge1xuXHRcdFx0XHRsZXQgZXhlbXBsYXJMYWJlbHMgPSB7fTtcblx0XHRcdFx0Y29uc3QgY3VycmVudFNwYW4gPSBPdGVsQXBpLnRyYWNlLmdldFNwYW4oT3RlbEFwaS5jb250ZXh0LmFjdGl2ZSgpKTtcblx0XHRcdFx0aWYgKGN1cnJlbnRTcGFuKSB7XG5cdFx0XHRcdFx0ZXhlbXBsYXJMYWJlbHMgPSB7XG5cdFx0XHRcdFx0XHR0cmFjZUlkOiBjdXJyZW50U3Bhbi5zcGFuQ29udGV4dCgpLnRyYWNlSWQsXG5cdFx0XHRcdFx0XHRzcGFuSWQ6IGN1cnJlbnRTcGFuLnNwYW5Db250ZXh0KCkuc3BhbklkLFxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdFx0Y3B1VXNlclVzYWdlQ291bnRlci5pbmMoe1xuXHRcdFx0XHRcdGxhYmVscyxcblx0XHRcdFx0XHR2YWx1ZTogdXNlclVzYWdlTWljcm9zIC8gMWU2LFxuXHRcdFx0XHRcdGV4ZW1wbGFyTGFiZWxzLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Y3B1U3lzdGVtVXNhZ2VDb3VudGVyLmluYyh7XG5cdFx0XHRcdFx0bGFiZWxzLFxuXHRcdFx0XHRcdHZhbHVlOiBzeXN0ZW1Vc2FnZU1pY3JvcyAvIDFlNixcblx0XHRcdFx0XHRleGVtcGxhckxhYmVscyxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGNwdVVzYWdlQ291bnRlci5pbmMoe1xuXHRcdFx0XHRcdGxhYmVscyxcblx0XHRcdFx0XHR2YWx1ZTogKHVzZXJVc2FnZU1pY3JvcyArIHN5c3RlbVVzYWdlTWljcm9zKSAvIDFlNixcblx0XHRcdFx0XHRleGVtcGxhckxhYmVscyxcblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjcHVVc2VyVXNhZ2VDb3VudGVyLmluYyhsYWJlbHMsIHVzZXJVc2FnZU1pY3JvcyAvIDFlNik7XG5cdFx0XHRcdGNwdVN5c3RlbVVzYWdlQ291bnRlci5pbmMobGFiZWxzLCBzeXN0ZW1Vc2FnZU1pY3JvcyAvIDFlNik7XG5cdFx0XHRcdGNwdVVzYWdlQ291bnRlci5pbmMoXG5cdFx0XHRcdFx0bGFiZWxzLFxuXHRcdFx0XHRcdCh1c2VyVXNhZ2VNaWNyb3MgKyBzeXN0ZW1Vc2FnZU1pY3JvcykgLyAxZTYsXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0fSk7XG5cdGNvbnN0IGNwdVN5c3RlbVVzYWdlQ291bnRlciA9IG5ldyBDb3VudGVyKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgUFJPQ0VTU19DUFVfU1lTVEVNX1NFQ09ORFMsXG5cdFx0aGVscDogJ1RvdGFsIHN5c3RlbSBDUFUgdGltZSBzcGVudCBpbiBzZWNvbmRzLicsXG5cdFx0ZW5hYmxlRXhlbXBsYXJzOiBleGVtcGxhcnMsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdH0pO1xuXHRjb25zdCBjcHVVc2FnZUNvdW50ZXIgPSBuZXcgQ291bnRlcih7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIFBST0NFU1NfQ1BVX1NFQ09ORFMsXG5cdFx0aGVscDogJ1RvdGFsIHVzZXIgYW5kIHN5c3RlbSBDUFUgdGltZSBzcGVudCBpbiBzZWNvbmRzLicsXG5cdFx0ZW5hYmxlRXhlbXBsYXJzOiBleGVtcGxhcnMsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMubWV0cmljTmFtZXMgPSBbXG5cdFBST0NFU1NfQ1BVX1VTRVJfU0VDT05EUyxcblx0UFJPQ0VTU19DUFVfU1lTVEVNX1NFQ09ORFMsXG5cdFBST0NFU1NfQ1BVX1NFQ09ORFMsXG5dO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processCpuTotal.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processHandles.js":
/*!********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processHandles.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst { aggregateByObjectName } = __webpack_require__(/*! ./helpers/processMetricsHelpers */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js\");\nconst { updateMetrics } = __webpack_require__(/*! ./helpers/processMetricsHelpers */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js\");\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\n\nconst NODEJS_ACTIVE_HANDLES = 'nodejs_active_handles';\nconst NODEJS_ACTIVE_HANDLES_TOTAL = 'nodejs_active_handles_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6-12...)\n\tif (typeof process._getActiveHandles !== 'function') {\n\t\treturn;\n\t}\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES,\n\t\thelp: 'Number of active libuv handles grouped by handle type. Every handle type is C++ class name.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters,\n\t\tcollect() {\n\t\t\tconst handles = process._getActiveHandles();\n\t\t\tupdateMetrics(this, aggregateByObjectName(handles), labels);\n\t\t},\n\t});\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES_TOTAL,\n\t\thelp: 'Total number of active handles.',\n\t\tregisters,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst handles = process._getActiveHandles();\n\t\t\tthis.set(labels, handles.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_HANDLES,\n\tNODEJS_ACTIVE_HANDLES_TOTAL,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NIYW5kbGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFFBQVEsd0JBQXdCLEVBQUUsbUJBQU8sQ0FBQywwSEFBaUM7QUFDM0UsUUFBUSxnQkFBZ0IsRUFBRSxtQkFBTyxDQUFDLDBIQUFpQztBQUNuRSxjQUFjLG1CQUFPLENBQUMsbUVBQVU7O0FBRWhDO0FBQ0E7O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTtBQUNGOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvbWV0cmljcy9wcm9jZXNzSGFuZGxlcy5qcz9lOWZhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBhZ2dyZWdhdGVCeU9iamVjdE5hbWUgfSA9IHJlcXVpcmUoJy4vaGVscGVycy9wcm9jZXNzTWV0cmljc0hlbHBlcnMnKTtcbmNvbnN0IHsgdXBkYXRlTWV0cmljcyB9ID0gcmVxdWlyZSgnLi9oZWxwZXJzL3Byb2Nlc3NNZXRyaWNzSGVscGVycycpO1xuY29uc3QgR2F1Z2UgPSByZXF1aXJlKCcuLi9nYXVnZScpO1xuXG5jb25zdCBOT0RFSlNfQUNUSVZFX0hBTkRMRVMgPSAnbm9kZWpzX2FjdGl2ZV9oYW5kbGVzJztcbmNvbnN0IE5PREVKU19BQ1RJVkVfSEFORExFU19UT1RBTCA9ICdub2RlanNfYWN0aXZlX2hhbmRsZXNfdG90YWwnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChyZWdpc3RyeSwgY29uZmlnID0ge30pID0+IHtcblx0Ly8gRG9uJ3QgZG8gYW55dGhpbmcgaWYgdGhlIGZ1bmN0aW9uIGlzIHJlbW92ZWQgaW4gbGF0ZXIgbm9kZXMgKGV4aXN0cyBpbiBub2RlQDYtMTIuLi4pXG5cdGlmICh0eXBlb2YgcHJvY2Vzcy5fZ2V0QWN0aXZlSGFuZGxlcyAhPT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHJlZ2lzdGVycyA9IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZDtcblx0Y29uc3QgbmFtZVByZWZpeCA9IGNvbmZpZy5wcmVmaXggPyBjb25maWcucHJlZml4IDogJyc7XG5cdGNvbnN0IGxhYmVscyA9IGNvbmZpZy5sYWJlbHMgPyBjb25maWcubGFiZWxzIDoge307XG5cdGNvbnN0IGxhYmVsTmFtZXMgPSBPYmplY3Qua2V5cyhsYWJlbHMpO1xuXG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19BQ1RJVkVfSEFORExFUyxcblx0XHRoZWxwOiAnTnVtYmVyIG9mIGFjdGl2ZSBsaWJ1diBoYW5kbGVzIGdyb3VwZWQgYnkgaGFuZGxlIHR5cGUuIEV2ZXJ5IGhhbmRsZSB0eXBlIGlzIEMrKyBjbGFzcyBuYW1lLicsXG5cdFx0bGFiZWxOYW1lczogWyd0eXBlJywgLi4ubGFiZWxOYW1lc10sXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGNvbGxlY3QoKSB7XG5cdFx0XHRjb25zdCBoYW5kbGVzID0gcHJvY2Vzcy5fZ2V0QWN0aXZlSGFuZGxlcygpO1xuXHRcdFx0dXBkYXRlTWV0cmljcyh0aGlzLCBhZ2dyZWdhdGVCeU9iamVjdE5hbWUoaGFuZGxlcyksIGxhYmVscyk7XG5cdFx0fSxcblx0fSk7XG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19BQ1RJVkVfSEFORExFU19UT1RBTCxcblx0XHRoZWxwOiAnVG90YWwgbnVtYmVyIG9mIGFjdGl2ZSBoYW5kbGVzLicsXG5cdFx0cmVnaXN0ZXJzLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0Y29sbGVjdCgpIHtcblx0XHRcdGNvbnN0IGhhbmRsZXMgPSBwcm9jZXNzLl9nZXRBY3RpdmVIYW5kbGVzKCk7XG5cdFx0XHR0aGlzLnNldChsYWJlbHMsIGhhbmRsZXMubGVuZ3RoKTtcblx0XHR9LFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1xuXHROT0RFSlNfQUNUSVZFX0hBTkRMRVMsXG5cdE5PREVKU19BQ1RJVkVfSEFORExFU19UT1RBTCxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processHandles.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processMaxFileDescriptors.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processMaxFileDescriptors.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nconst PROCESS_MAX_FDS = 'process_max_fds';\n\nlet maxFds;\n\nmodule.exports = (registry, config = {}) => {\n\tif (maxFds === undefined) {\n\t\t// This will fail if a linux-like procfs is not available.\n\t\ttry {\n\t\t\tconst limits = fs.readFileSync('/proc/self/limits', 'utf8');\n\t\t\tconst lines = limits.split('\\n');\n\t\t\tfor (const line of lines) {\n\t\t\t\tif (line.startsWith('Max open files')) {\n\t\t\t\t\tconst parts = line.split(/  +/);\n\t\t\t\t\tmaxFds = Number(parts[1]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (maxFds === undefined) return;\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_MAX_FDS,\n\t\thelp: 'Maximum number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tif (maxFds !== undefined) this.set(labels, maxFds);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_MAX_FDS];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NNYXhGaWxlRGVzY3JpcHRvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLG1FQUFVO0FBQ2hDLFdBQVcsbUJBQU8sQ0FBQyxjQUFJOztBQUV2Qjs7QUFFQTs7QUFFQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTtBQUNGOztBQUVBLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NNYXhGaWxlRGVzY3JpcHRvcnMuanM/NzRiZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuY29uc3QgUFJPQ0VTU19NQVhfRkRTID0gJ3Byb2Nlc3NfbWF4X2Zkcyc7XG5cbmxldCBtYXhGZHM7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlZ2lzdHJ5LCBjb25maWcgPSB7fSkgPT4ge1xuXHRpZiAobWF4RmRzID09PSB1bmRlZmluZWQpIHtcblx0XHQvLyBUaGlzIHdpbGwgZmFpbCBpZiBhIGxpbnV4LWxpa2UgcHJvY2ZzIGlzIG5vdCBhdmFpbGFibGUuXG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IGxpbWl0cyA9IGZzLnJlYWRGaWxlU3luYygnL3Byb2Mvc2VsZi9saW1pdHMnLCAndXRmOCcpO1xuXHRcdFx0Y29uc3QgbGluZXMgPSBsaW1pdHMuc3BsaXQoJ1xcbicpO1xuXHRcdFx0Zm9yIChjb25zdCBsaW5lIG9mIGxpbmVzKSB7XG5cdFx0XHRcdGlmIChsaW5lLnN0YXJ0c1dpdGgoJ01heCBvcGVuIGZpbGVzJykpIHtcblx0XHRcdFx0XHRjb25zdCBwYXJ0cyA9IGxpbmUuc3BsaXQoLyAgKy8pO1xuXHRcdFx0XHRcdG1heEZkcyA9IE51bWJlcihwYXJ0c1sxXSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGNhdGNoIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdH1cblxuXHRpZiAobWF4RmRzID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuXHRjb25zdCBuYW1lUHJlZml4ID0gY29uZmlnLnByZWZpeCA/IGNvbmZpZy5wcmVmaXggOiAnJztcblx0Y29uc3QgbGFiZWxzID0gY29uZmlnLmxhYmVscyA/IGNvbmZpZy5sYWJlbHMgOiB7fTtcblx0Y29uc3QgbGFiZWxOYW1lcyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG5cblx0bmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgUFJPQ0VTU19NQVhfRkRTLFxuXHRcdGhlbHA6ICdNYXhpbXVtIG51bWJlciBvZiBvcGVuIGZpbGUgZGVzY3JpcHRvcnMuJyxcblx0XHRyZWdpc3RlcnM6IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZCxcblx0XHRsYWJlbE5hbWVzLFxuXHRcdGNvbGxlY3QoKSB7XG5cdFx0XHRpZiAobWF4RmRzICE9PSB1bmRlZmluZWQpIHRoaXMuc2V0KGxhYmVscywgbWF4RmRzKTtcblx0XHR9LFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1BST0NFU1NfTUFYX0ZEU107XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processMaxFileDescriptors.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processOpenFileDescriptors.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processOpenFileDescriptors.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst process = __webpack_require__(/*! process */ \"process\");\n\nconst PROCESS_OPEN_FDS = 'process_open_fds';\n\nmodule.exports = (registry, config = {}) => {\n\tif (process.platform !== 'linux') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_OPEN_FDS,\n\t\thelp: 'Number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\ttry {\n\t\t\t\tconst fds = fs.readdirSync('/proc/self/fd');\n\t\t\t\t// Minus 1 to not count the fd that was used by readdirSync(),\n\t\t\t\t// it's now closed.\n\t\t\t\tthis.set(labels, fds.length - 1);\n\t\t\t} catch {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_OPEN_FDS];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NPcGVuRmlsZURlc2NyaXB0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsbUJBQU8sQ0FBQyxtRUFBVTtBQUNoQyxXQUFXLG1CQUFPLENBQUMsY0FBSTtBQUN2QixnQkFBZ0IsbUJBQU8sQ0FBQyx3QkFBUzs7QUFFakM7O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7QUFDRjs7QUFFQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvbWV0cmljcy9wcm9jZXNzT3BlbkZpbGVEZXNjcmlwdG9ycy5qcz81ZjFhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgR2F1Z2UgPSByZXF1aXJlKCcuLi9nYXVnZScpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcHJvY2VzcyA9IHJlcXVpcmUoJ3Byb2Nlc3MnKTtcblxuY29uc3QgUFJPQ0VTU19PUEVOX0ZEUyA9ICdwcm9jZXNzX29wZW5fZmRzJztcblxubW9kdWxlLmV4cG9ydHMgPSAocmVnaXN0cnksIGNvbmZpZyA9IHt9KSA9PiB7XG5cdGlmIChwcm9jZXNzLnBsYXRmb3JtICE9PSAnbGludXgnKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3QgbmFtZVByZWZpeCA9IGNvbmZpZy5wcmVmaXggPyBjb25maWcucHJlZml4IDogJyc7XG5cdGNvbnN0IGxhYmVscyA9IGNvbmZpZy5sYWJlbHMgPyBjb25maWcubGFiZWxzIDoge307XG5cdGNvbnN0IGxhYmVsTmFtZXMgPSBPYmplY3Qua2V5cyhsYWJlbHMpO1xuXG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIFBST0NFU1NfT1BFTl9GRFMsXG5cdFx0aGVscDogJ051bWJlciBvZiBvcGVuIGZpbGUgZGVzY3JpcHRvcnMuJyxcblx0XHRyZWdpc3RlcnM6IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZCxcblx0XHRsYWJlbE5hbWVzLFxuXHRcdGNvbGxlY3QoKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRjb25zdCBmZHMgPSBmcy5yZWFkZGlyU3luYygnL3Byb2Mvc2VsZi9mZCcpO1xuXHRcdFx0XHQvLyBNaW51cyAxIHRvIG5vdCBjb3VudCB0aGUgZmQgdGhhdCB3YXMgdXNlZCBieSByZWFkZGlyU3luYygpLFxuXHRcdFx0XHQvLyBpdCdzIG5vdyBjbG9zZWQuXG5cdFx0XHRcdHRoaXMuc2V0KGxhYmVscywgZmRzLmxlbmd0aCAtIDEpO1xuXHRcdFx0fSBjYXRjaCB7XG5cdFx0XHRcdC8vIG5vb3Bcblx0XHRcdH1cblx0XHR9LFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1BST0NFU1NfT1BFTl9GRFNdO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processOpenFileDescriptors.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processRequests.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processRequests.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst { aggregateByObjectName } = __webpack_require__(/*! ./helpers/processMetricsHelpers */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js\");\nconst { updateMetrics } = __webpack_require__(/*! ./helpers/processMetricsHelpers */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js\");\n\nconst NODEJS_ACTIVE_REQUESTS = 'nodejs_active_requests';\nconst NODEJS_ACTIVE_REQUESTS_TOTAL = 'nodejs_active_requests_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6)\n\tif (typeof process._getActiveRequests !== 'function') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS,\n\t\thelp: 'Number of active libuv requests grouped by request type. Every request type is C++ class name.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\tcollect() {\n\t\t\tconst requests = process._getActiveRequests();\n\t\t\tupdateMetrics(this, aggregateByObjectName(requests), labels);\n\t\t},\n\t});\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS_TOTAL,\n\t\thelp: 'Total number of active requests.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst requests = process._getActiveRequests();\n\t\t\tthis.set(labels, requests.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_REQUESTS,\n\tNODEJS_ACTIVE_REQUESTS_TOTAL,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NSZXF1ZXN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGNBQWMsbUJBQU8sQ0FBQyxtRUFBVTtBQUNoQyxRQUFRLHdCQUF3QixFQUFFLG1CQUFPLENBQUMsMEhBQWlDO0FBQzNFLFFBQVEsZ0JBQWdCLEVBQUUsbUJBQU8sQ0FBQywwSEFBaUM7O0FBRW5FO0FBQ0E7O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7O0FBRUEsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NSZXF1ZXN0cy5qcz85NDljIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IHsgYWdncmVnYXRlQnlPYmplY3ROYW1lIH0gPSByZXF1aXJlKCcuL2hlbHBlcnMvcHJvY2Vzc01ldHJpY3NIZWxwZXJzJyk7XG5jb25zdCB7IHVwZGF0ZU1ldHJpY3MgfSA9IHJlcXVpcmUoJy4vaGVscGVycy9wcm9jZXNzTWV0cmljc0hlbHBlcnMnKTtcblxuY29uc3QgTk9ERUpTX0FDVElWRV9SRVFVRVNUUyA9ICdub2RlanNfYWN0aXZlX3JlcXVlc3RzJztcbmNvbnN0IE5PREVKU19BQ1RJVkVfUkVRVUVTVFNfVE9UQUwgPSAnbm9kZWpzX2FjdGl2ZV9yZXF1ZXN0c190b3RhbCc7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlZ2lzdHJ5LCBjb25maWcgPSB7fSkgPT4ge1xuXHQvLyBEb24ndCBkbyBhbnl0aGluZyBpZiB0aGUgZnVuY3Rpb24gaXMgcmVtb3ZlZCBpbiBsYXRlciBub2RlcyAoZXhpc3RzIGluIG5vZGVANilcblx0aWYgKHR5cGVvZiBwcm9jZXNzLl9nZXRBY3RpdmVSZXF1ZXN0cyAhPT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IG5hbWVQcmVmaXggPSBjb25maWcucHJlZml4ID8gY29uZmlnLnByZWZpeCA6ICcnO1xuXHRjb25zdCBsYWJlbHMgPSBjb25maWcubGFiZWxzID8gY29uZmlnLmxhYmVscyA6IHt9O1xuXHRjb25zdCBsYWJlbE5hbWVzID0gT2JqZWN0LmtleXMobGFiZWxzKTtcblxuXHRuZXcgR2F1Z2Uoe1xuXHRcdG5hbWU6IG5hbWVQcmVmaXggKyBOT0RFSlNfQUNUSVZFX1JFUVVFU1RTLFxuXHRcdGhlbHA6ICdOdW1iZXIgb2YgYWN0aXZlIGxpYnV2IHJlcXVlc3RzIGdyb3VwZWQgYnkgcmVxdWVzdCB0eXBlLiBFdmVyeSByZXF1ZXN0IHR5cGUgaXMgQysrIGNsYXNzIG5hbWUuJyxcblx0XHRsYWJlbE5hbWVzOiBbJ3R5cGUnLCAuLi5sYWJlbE5hbWVzXSxcblx0XHRyZWdpc3RlcnM6IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZCxcblx0XHRjb2xsZWN0KCkge1xuXHRcdFx0Y29uc3QgcmVxdWVzdHMgPSBwcm9jZXNzLl9nZXRBY3RpdmVSZXF1ZXN0cygpO1xuXHRcdFx0dXBkYXRlTWV0cmljcyh0aGlzLCBhZ2dyZWdhdGVCeU9iamVjdE5hbWUocmVxdWVzdHMpLCBsYWJlbHMpO1xuXHRcdH0sXG5cdH0pO1xuXG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19BQ1RJVkVfUkVRVUVTVFNfVE9UQUwsXG5cdFx0aGVscDogJ1RvdGFsIG51bWJlciBvZiBhY3RpdmUgcmVxdWVzdHMuJyxcblx0XHRyZWdpc3RlcnM6IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZCxcblx0XHRsYWJlbE5hbWVzLFxuXHRcdGNvbGxlY3QoKSB7XG5cdFx0XHRjb25zdCByZXF1ZXN0cyA9IHByb2Nlc3MuX2dldEFjdGl2ZVJlcXVlc3RzKCk7XG5cdFx0XHR0aGlzLnNldChsYWJlbHMsIHJlcXVlc3RzLmxlbmd0aCk7XG5cdFx0fSxcblx0fSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5tZXRyaWNOYW1lcyA9IFtcblx0Tk9ERUpTX0FDVElWRV9SRVFVRVNUUyxcblx0Tk9ERUpTX0FDVElWRV9SRVFVRVNUU19UT1RBTCxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processRequests.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processResources.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processResources.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst { updateMetrics } = __webpack_require__(/*! ./helpers/processMetricsHelpers */ \"(rsc)/../../node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js\");\n\nconst NODEJS_ACTIVE_RESOURCES = 'nodejs_active_resources';\nconst NODEJS_ACTIVE_RESOURCES_TOTAL = 'nodejs_active_resources_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function does not exist in previous nodes (exists in node@17.3.0)\n\tif (typeof process.getActiveResourcesInfo !== 'function') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_RESOURCES,\n\t\thelp: 'Number of active resources that are currently keeping the event loop alive, grouped by async resource type.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\tcollect() {\n\t\t\tconst resources = process.getActiveResourcesInfo();\n\n\t\t\tconst data = {};\n\n\t\t\tfor (let i = 0; i < resources.length; i++) {\n\t\t\t\tconst resource = resources[i];\n\n\t\t\t\tif (Object.hasOwn(data, resource)) {\n\t\t\t\t\tdata[resource] += 1;\n\t\t\t\t} else {\n\t\t\t\t\tdata[resource] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateMetrics(this, data, labels);\n\t\t},\n\t});\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_RESOURCES_TOTAL,\n\t\thelp: 'Total number of active resources.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst resources = process.getActiveResourcesInfo();\n\t\t\tthis.set(labels, resources.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_RESOURCES,\n\tNODEJS_ACTIVE_RESOURCES_TOTAL,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NSZXNvdXJjZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixjQUFjLG1CQUFPLENBQUMsbUVBQVU7QUFDaEMsUUFBUSxnQkFBZ0IsRUFBRSxtQkFBTyxDQUFDLDBIQUFpQzs7QUFFbkU7QUFDQTs7QUFFQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLG1CQUFtQixzQkFBc0I7QUFDekM7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0gsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7QUFDRjs7QUFFQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL21ldHJpY3MvcHJvY2Vzc1Jlc291cmNlcy5qcz8xOGUwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IHsgdXBkYXRlTWV0cmljcyB9ID0gcmVxdWlyZSgnLi9oZWxwZXJzL3Byb2Nlc3NNZXRyaWNzSGVscGVycycpO1xuXG5jb25zdCBOT0RFSlNfQUNUSVZFX1JFU09VUkNFUyA9ICdub2RlanNfYWN0aXZlX3Jlc291cmNlcyc7XG5jb25zdCBOT0RFSlNfQUNUSVZFX1JFU09VUkNFU19UT1RBTCA9ICdub2RlanNfYWN0aXZlX3Jlc291cmNlc190b3RhbCc7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlZ2lzdHJ5LCBjb25maWcgPSB7fSkgPT4ge1xuXHQvLyBEb24ndCBkbyBhbnl0aGluZyBpZiB0aGUgZnVuY3Rpb24gZG9lcyBub3QgZXhpc3QgaW4gcHJldmlvdXMgbm9kZXMgKGV4aXN0cyBpbiBub2RlQDE3LjMuMClcblx0aWYgKHR5cGVvZiBwcm9jZXNzLmdldEFjdGl2ZVJlc291cmNlc0luZm8gIT09ICdmdW5jdGlvbicpIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRjb25zdCBuYW1lUHJlZml4ID0gY29uZmlnLnByZWZpeCA/IGNvbmZpZy5wcmVmaXggOiAnJztcblx0Y29uc3QgbGFiZWxzID0gY29uZmlnLmxhYmVscyA/IGNvbmZpZy5sYWJlbHMgOiB7fTtcblx0Y29uc3QgbGFiZWxOYW1lcyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG5cblx0bmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgTk9ERUpTX0FDVElWRV9SRVNPVVJDRVMsXG5cdFx0aGVscDogJ051bWJlciBvZiBhY3RpdmUgcmVzb3VyY2VzIHRoYXQgYXJlIGN1cnJlbnRseSBrZWVwaW5nIHRoZSBldmVudCBsb29wIGFsaXZlLCBncm91cGVkIGJ5IGFzeW5jIHJlc291cmNlIHR5cGUuJyxcblx0XHRsYWJlbE5hbWVzOiBbJ3R5cGUnLCAuLi5sYWJlbE5hbWVzXSxcblx0XHRyZWdpc3RlcnM6IHJlZ2lzdHJ5ID8gW3JlZ2lzdHJ5XSA6IHVuZGVmaW5lZCxcblx0XHRjb2xsZWN0KCkge1xuXHRcdFx0Y29uc3QgcmVzb3VyY2VzID0gcHJvY2Vzcy5nZXRBY3RpdmVSZXNvdXJjZXNJbmZvKCk7XG5cblx0XHRcdGNvbnN0IGRhdGEgPSB7fTtcblxuXHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCByZXNvdXJjZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0Y29uc3QgcmVzb3VyY2UgPSByZXNvdXJjZXNbaV07XG5cblx0XHRcdFx0aWYgKE9iamVjdC5oYXNPd24oZGF0YSwgcmVzb3VyY2UpKSB7XG5cdFx0XHRcdFx0ZGF0YVtyZXNvdXJjZV0gKz0gMTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkYXRhW3Jlc291cmNlXSA9IDE7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlTWV0cmljcyh0aGlzLCBkYXRhLCBsYWJlbHMpO1xuXHRcdH0sXG5cdH0pO1xuXG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVKU19BQ1RJVkVfUkVTT1VSQ0VTX1RPVEFMLFxuXHRcdGhlbHA6ICdUb3RhbCBudW1iZXIgb2YgYWN0aXZlIHJlc291cmNlcy4nLFxuXHRcdHJlZ2lzdGVyczogcmVnaXN0cnkgPyBbcmVnaXN0cnldIDogdW5kZWZpbmVkLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0Y29sbGVjdCgpIHtcblx0XHRcdGNvbnN0IHJlc291cmNlcyA9IHByb2Nlc3MuZ2V0QWN0aXZlUmVzb3VyY2VzSW5mbygpO1xuXHRcdFx0dGhpcy5zZXQobGFiZWxzLCByZXNvdXJjZXMubGVuZ3RoKTtcblx0XHR9LFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1xuXHROT0RFSlNfQUNUSVZFX1JFU09VUkNFUyxcblx0Tk9ERUpTX0FDVElWRV9SRVNPVVJDRVNfVE9UQUwsXG5dO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processResources.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/processStartTime.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/processStartTime.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst startInSeconds = Math.round(Date.now() / 1000 - process.uptime());\n\nconst PROCESS_START_TIME = 'process_start_time_seconds';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_START_TIME,\n\t\thelp: 'Start time of the process since unix epoch in seconds.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\taggregator: 'omit',\n\t\tcollect() {\n\t\t\tthis.set(labels, startInSeconds);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_START_TIME];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3Byb2Nlc3NTdGFydFRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLG1FQUFVO0FBQ2hDOztBQUVBOztBQUVBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7O0FBRUEsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL21ldHJpY3MvcHJvY2Vzc1N0YXJ0VGltZS5qcz8yNjc4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgR2F1Z2UgPSByZXF1aXJlKCcuLi9nYXVnZScpO1xuY29uc3Qgc3RhcnRJblNlY29uZHMgPSBNYXRoLnJvdW5kKERhdGUubm93KCkgLyAxMDAwIC0gcHJvY2Vzcy51cHRpbWUoKSk7XG5cbmNvbnN0IFBST0NFU1NfU1RBUlRfVElNRSA9ICdwcm9jZXNzX3N0YXJ0X3RpbWVfc2Vjb25kcyc7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlZ2lzdHJ5LCBjb25maWcgPSB7fSkgPT4ge1xuXHRjb25zdCBuYW1lUHJlZml4ID0gY29uZmlnLnByZWZpeCA/IGNvbmZpZy5wcmVmaXggOiAnJztcblx0Y29uc3QgbGFiZWxzID0gY29uZmlnLmxhYmVscyA/IGNvbmZpZy5sYWJlbHMgOiB7fTtcblx0Y29uc3QgbGFiZWxOYW1lcyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG5cblx0bmV3IEdhdWdlKHtcblx0XHRuYW1lOiBuYW1lUHJlZml4ICsgUFJPQ0VTU19TVEFSVF9USU1FLFxuXHRcdGhlbHA6ICdTdGFydCB0aW1lIG9mIHRoZSBwcm9jZXNzIHNpbmNlIHVuaXggZXBvY2ggaW4gc2Vjb25kcy4nLFxuXHRcdHJlZ2lzdGVyczogcmVnaXN0cnkgPyBbcmVnaXN0cnldIDogdW5kZWZpbmVkLFxuXHRcdGxhYmVsTmFtZXMsXG5cdFx0YWdncmVnYXRvcjogJ29taXQnLFxuXHRcdGNvbGxlY3QoKSB7XG5cdFx0XHR0aGlzLnNldChsYWJlbHMsIHN0YXJ0SW5TZWNvbmRzKTtcblx0XHR9LFxuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1ldHJpY05hbWVzID0gW1BST0NFU1NfU1RBUlRfVElNRV07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/processStartTime.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/metrics/version.js":
/*!*************************************************************!*\
  !*** ../../node_modules/prom-client/lib/metrics/version.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Gauge = __webpack_require__(/*! ../gauge */ \"(rsc)/../../node_modules/prom-client/lib/gauge.js\");\nconst version = process.version;\nconst versionSegments = version.slice(1).split('.').map(Number);\n\nconst NODE_VERSION_INFO = 'nodejs_version_info';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODE_VERSION_INFO,\n\t\thelp: 'Node.js version info.',\n\t\tlabelNames: ['version', 'major', 'minor', 'patch', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\taggregator: 'first',\n\t\tcollect() {\n\t\t\t// Needs to be in collect() so value is present even if reg is reset\n\t\t\tthis.labels(\n\t\t\t\tversion,\n\t\t\t\tversionSegments[0],\n\t\t\t\tversionSegments[1],\n\t\t\t\tversionSegments[2],\n\t\t\t\t...Object.values(labels),\n\t\t\t).set(1);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [NODE_VERSION_INFO];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLG1FQUFVO0FBQ2hDO0FBQ0E7O0FBRUE7O0FBRUEsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTtBQUNGOztBQUVBLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9tZXRyaWNzL3ZlcnNpb24uanM/ZWE3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEdhdWdlID0gcmVxdWlyZSgnLi4vZ2F1Z2UnKTtcbmNvbnN0IHZlcnNpb24gPSBwcm9jZXNzLnZlcnNpb247XG5jb25zdCB2ZXJzaW9uU2VnbWVudHMgPSB2ZXJzaW9uLnNsaWNlKDEpLnNwbGl0KCcuJykubWFwKE51bWJlcik7XG5cbmNvbnN0IE5PREVfVkVSU0lPTl9JTkZPID0gJ25vZGVqc192ZXJzaW9uX2luZm8nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChyZWdpc3RyeSwgY29uZmlnID0ge30pID0+IHtcblx0Y29uc3QgbmFtZVByZWZpeCA9IGNvbmZpZy5wcmVmaXggPyBjb25maWcucHJlZml4IDogJyc7XG5cdGNvbnN0IGxhYmVscyA9IGNvbmZpZy5sYWJlbHMgPyBjb25maWcubGFiZWxzIDoge307XG5cdGNvbnN0IGxhYmVsTmFtZXMgPSBPYmplY3Qua2V5cyhsYWJlbHMpO1xuXG5cdG5ldyBHYXVnZSh7XG5cdFx0bmFtZTogbmFtZVByZWZpeCArIE5PREVfVkVSU0lPTl9JTkZPLFxuXHRcdGhlbHA6ICdOb2RlLmpzIHZlcnNpb24gaW5mby4nLFxuXHRcdGxhYmVsTmFtZXM6IFsndmVyc2lvbicsICdtYWpvcicsICdtaW5vcicsICdwYXRjaCcsIC4uLmxhYmVsTmFtZXNdLFxuXHRcdHJlZ2lzdGVyczogcmVnaXN0cnkgPyBbcmVnaXN0cnldIDogdW5kZWZpbmVkLFxuXHRcdGFnZ3JlZ2F0b3I6ICdmaXJzdCcsXG5cdFx0Y29sbGVjdCgpIHtcblx0XHRcdC8vIE5lZWRzIHRvIGJlIGluIGNvbGxlY3QoKSBzbyB2YWx1ZSBpcyBwcmVzZW50IGV2ZW4gaWYgcmVnIGlzIHJlc2V0XG5cdFx0XHR0aGlzLmxhYmVscyhcblx0XHRcdFx0dmVyc2lvbixcblx0XHRcdFx0dmVyc2lvblNlZ21lbnRzWzBdLFxuXHRcdFx0XHR2ZXJzaW9uU2VnbWVudHNbMV0sXG5cdFx0XHRcdHZlcnNpb25TZWdtZW50c1syXSxcblx0XHRcdFx0Li4uT2JqZWN0LnZhbHVlcyhsYWJlbHMpLFxuXHRcdFx0KS5zZXQoMSk7XG5cdFx0fSxcblx0fSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5tZXRyaWNOYW1lcyA9IFtOT0RFX1ZFUlNJT05fSU5GT107XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/metrics/version.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/pushgateway.js":
/*!*********************************************************!*\
  !*** ../../node_modules/prom-client/lib/pushgateway.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst url = __webpack_require__(/*! url */ \"url\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst { gzipSync } = __webpack_require__(/*! zlib */ \"zlib\");\nconst { globalRegistry } = __webpack_require__(/*! ./registry */ \"(rsc)/../../node_modules/prom-client/lib/registry.js\");\n\nclass Pushgateway {\n\tconstructor(gatewayUrl, options, registry) {\n\t\tif (!registry) {\n\t\t\tregistry = globalRegistry;\n\t\t}\n\t\tthis.registry = registry;\n\t\tthis.gatewayUrl = gatewayUrl;\n\t\tconst { requireJobName, ...requestOptions } = {\n\t\t\trequireJobName: true,\n\t\t\t...options,\n\t\t};\n\t\tthis.requireJobName = requireJobName;\n\t\tthis.requestOptions = requestOptions;\n\t}\n\n\tpushAdd(params = {}) {\n\t\tif (this.requireJobName && !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'POST', params.jobName, params.groupings);\n\t}\n\n\tpush(params = {}) {\n\t\tif (this.requireJobName && !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'PUT', params.jobName, params.groupings);\n\t}\n\n\tdelete(params = {}) {\n\t\tif (this.requireJobName && !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'DELETE', params.jobName, params.groupings);\n\t}\n}\nasync function useGateway(method, job, groupings) {\n\t// `URL` first added in v6.13.0\n\t// eslint-disable-next-line n/no-deprecated-api\n\tconst gatewayUrlParsed = url.parse(this.gatewayUrl);\n\tconst gatewayUrlPath =\n\t\tgatewayUrlParsed.pathname && gatewayUrlParsed.pathname !== '/'\n\t\t\t? gatewayUrlParsed.pathname\n\t\t\t: '';\n\tconst jobPath = job\n\t\t? `/job/${encodeURIComponent(job)}${generateGroupings(groupings)}`\n\t\t: '';\n\tconst path = `${gatewayUrlPath}/metrics${jobPath}`;\n\n\t// eslint-disable-next-line n/no-deprecated-api\n\tconst target = url.resolve(this.gatewayUrl, path);\n\t// eslint-disable-next-line n/no-deprecated-api\n\tconst requestParams = url.parse(target);\n\tconst httpModule = isHttps(requestParams.href) ? https : http;\n\tconst options = Object.assign(requestParams, this.requestOptions, {\n\t\tmethod,\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tif (method === 'DELETE' && options.headers) {\n\t\t\tdelete options.headers['Content-Encoding'];\n\t\t}\n\t\tconst req = httpModule.request(options, resp => {\n\t\t\tlet body = '';\n\t\t\tresp.setEncoding('utf8');\n\t\t\tresp.on('data', chunk => {\n\t\t\t\tbody += chunk;\n\t\t\t});\n\t\t\tresp.on('end', () => {\n\t\t\t\tif (resp.statusCode >= 400) {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(`push failed with status ${resp.statusCode}, ${body}`),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresolve({ resp, body });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treq.on('error', err => {\n\t\t\treject(err);\n\t\t});\n\n\t\treq.on('timeout', () => {\n\t\t\treq.destroy(new Error('Pushgateway request timed out'));\n\t\t});\n\n\t\tif (method !== 'DELETE') {\n\t\t\tthis.registry\n\t\t\t\t.metrics()\n\t\t\t\t.then(metrics => {\n\t\t\t\t\tif (\n\t\t\t\t\t\toptions.headers &&\n\t\t\t\t\t\toptions.headers['Content-Encoding'] === 'gzip'\n\t\t\t\t\t) {\n\t\t\t\t\t\tmetrics = gzipSync(metrics);\n\t\t\t\t\t}\n\t\t\t\t\treq.write(metrics);\n\t\t\t\t\treq.end();\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n}\n\nfunction generateGroupings(groupings) {\n\tif (!groupings) {\n\t\treturn '';\n\t}\n\treturn Object.keys(groupings)\n\t\t.map(\n\t\t\tkey =>\n\t\t\t\t`/${encodeURIComponent(key)}/${encodeURIComponent(groupings[key])}`,\n\t\t)\n\t\t.join('');\n}\n\nfunction isHttps(href) {\n\treturn href.search(/^https/) !== -1;\n}\n\nmodule.exports = Pushgateway;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi9wdXNoZ2F0ZXdheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsZ0JBQUs7QUFDekIsYUFBYSxtQkFBTyxDQUFDLGtCQUFNO0FBQzNCLGNBQWMsbUJBQU8sQ0FBQyxvQkFBTztBQUM3QixRQUFRLFdBQVcsRUFBRSxtQkFBTyxDQUFDLGtCQUFNO0FBQ25DLFFBQVEsaUJBQWlCLEVBQUUsbUJBQU8sQ0FBQyx3RUFBWTs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG9DQUFvQztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0JBQXdCLEVBQUUsNkJBQTZCO0FBQ25FO0FBQ0EsaUJBQWlCLGVBQWUsVUFBVSxRQUFROztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnQkFBZ0IsSUFBSSxLQUFLO0FBQ3BFO0FBQ0EsTUFBTTtBQUNOLGVBQWUsWUFBWTtBQUMzQjtBQUNBLElBQUk7QUFDSixHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdCQUF3QixHQUFHLG1DQUFtQztBQUN0RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHBsdXM5OS9jcm9ueC11aS8uLi8uLi9ub2RlX21vZHVsZXMvcHJvbS1jbGllbnQvbGliL3B1c2hnYXRld2F5LmpzPzA4ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB1cmwgPSByZXF1aXJlKCd1cmwnKTtcbmNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJyk7XG5jb25zdCB7IGd6aXBTeW5jIH0gPSByZXF1aXJlKCd6bGliJyk7XG5jb25zdCB7IGdsb2JhbFJlZ2lzdHJ5IH0gPSByZXF1aXJlKCcuL3JlZ2lzdHJ5Jyk7XG5cbmNsYXNzIFB1c2hnYXRld2F5IHtcblx0Y29uc3RydWN0b3IoZ2F0ZXdheVVybCwgb3B0aW9ucywgcmVnaXN0cnkpIHtcblx0XHRpZiAoIXJlZ2lzdHJ5KSB7XG5cdFx0XHRyZWdpc3RyeSA9IGdsb2JhbFJlZ2lzdHJ5O1xuXHRcdH1cblx0XHR0aGlzLnJlZ2lzdHJ5ID0gcmVnaXN0cnk7XG5cdFx0dGhpcy5nYXRld2F5VXJsID0gZ2F0ZXdheVVybDtcblx0XHRjb25zdCB7IHJlcXVpcmVKb2JOYW1lLCAuLi5yZXF1ZXN0T3B0aW9ucyB9ID0ge1xuXHRcdFx0cmVxdWlyZUpvYk5hbWU6IHRydWUsXG5cdFx0XHQuLi5vcHRpb25zLFxuXHRcdH07XG5cdFx0dGhpcy5yZXF1aXJlSm9iTmFtZSA9IHJlcXVpcmVKb2JOYW1lO1xuXHRcdHRoaXMucmVxdWVzdE9wdGlvbnMgPSByZXF1ZXN0T3B0aW9ucztcblx0fVxuXG5cdHB1c2hBZGQocGFyYW1zID0ge30pIHtcblx0XHRpZiAodGhpcy5yZXF1aXJlSm9iTmFtZSAmJiAhcGFyYW1zLmpvYk5hbWUpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignTWlzc2luZyBqb2JOYW1lIHBhcmFtZXRlcicpO1xuXHRcdH1cblxuXHRcdHJldHVybiB1c2VHYXRld2F5LmNhbGwodGhpcywgJ1BPU1QnLCBwYXJhbXMuam9iTmFtZSwgcGFyYW1zLmdyb3VwaW5ncyk7XG5cdH1cblxuXHRwdXNoKHBhcmFtcyA9IHt9KSB7XG5cdFx0aWYgKHRoaXMucmVxdWlyZUpvYk5hbWUgJiYgIXBhcmFtcy5qb2JOYW1lKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ01pc3Npbmcgam9iTmFtZSBwYXJhbWV0ZXInKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdXNlR2F0ZXdheS5jYWxsKHRoaXMsICdQVVQnLCBwYXJhbXMuam9iTmFtZSwgcGFyYW1zLmdyb3VwaW5ncyk7XG5cdH1cblxuXHRkZWxldGUocGFyYW1zID0ge30pIHtcblx0XHRpZiAodGhpcy5yZXF1aXJlSm9iTmFtZSAmJiAhcGFyYW1zLmpvYk5hbWUpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignTWlzc2luZyBqb2JOYW1lIHBhcmFtZXRlcicpO1xuXHRcdH1cblxuXHRcdHJldHVybiB1c2VHYXRld2F5LmNhbGwodGhpcywgJ0RFTEVURScsIHBhcmFtcy5qb2JOYW1lLCBwYXJhbXMuZ3JvdXBpbmdzKTtcblx0fVxufVxuYXN5bmMgZnVuY3Rpb24gdXNlR2F0ZXdheShtZXRob2QsIGpvYiwgZ3JvdXBpbmdzKSB7XG5cdC8vIGBVUkxgIGZpcnN0IGFkZGVkIGluIHY2LjEzLjBcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG4vbm8tZGVwcmVjYXRlZC1hcGlcblx0Y29uc3QgZ2F0ZXdheVVybFBhcnNlZCA9IHVybC5wYXJzZSh0aGlzLmdhdGV3YXlVcmwpO1xuXHRjb25zdCBnYXRld2F5VXJsUGF0aCA9XG5cdFx0Z2F0ZXdheVVybFBhcnNlZC5wYXRobmFtZSAmJiBnYXRld2F5VXJsUGFyc2VkLnBhdGhuYW1lICE9PSAnLydcblx0XHRcdD8gZ2F0ZXdheVVybFBhcnNlZC5wYXRobmFtZVxuXHRcdFx0OiAnJztcblx0Y29uc3Qgam9iUGF0aCA9IGpvYlxuXHRcdD8gYC9qb2IvJHtlbmNvZGVVUklDb21wb25lbnQoam9iKX0ke2dlbmVyYXRlR3JvdXBpbmdzKGdyb3VwaW5ncyl9YFxuXHRcdDogJyc7XG5cdGNvbnN0IHBhdGggPSBgJHtnYXRld2F5VXJsUGF0aH0vbWV0cmljcyR7am9iUGF0aH1gO1xuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuL25vLWRlcHJlY2F0ZWQtYXBpXG5cdGNvbnN0IHRhcmdldCA9IHVybC5yZXNvbHZlKHRoaXMuZ2F0ZXdheVVybCwgcGF0aCk7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuL25vLWRlcHJlY2F0ZWQtYXBpXG5cdGNvbnN0IHJlcXVlc3RQYXJhbXMgPSB1cmwucGFyc2UodGFyZ2V0KTtcblx0Y29uc3QgaHR0cE1vZHVsZSA9IGlzSHR0cHMocmVxdWVzdFBhcmFtcy5ocmVmKSA/IGh0dHBzIDogaHR0cDtcblx0Y29uc3Qgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24ocmVxdWVzdFBhcmFtcywgdGhpcy5yZXF1ZXN0T3B0aW9ucywge1xuXHRcdG1ldGhvZCxcblx0fSk7XG5cblx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHRpZiAobWV0aG9kID09PSAnREVMRVRFJyAmJiBvcHRpb25zLmhlYWRlcnMpIHtcblx0XHRcdGRlbGV0ZSBvcHRpb25zLmhlYWRlcnNbJ0NvbnRlbnQtRW5jb2RpbmcnXTtcblx0XHR9XG5cdFx0Y29uc3QgcmVxID0gaHR0cE1vZHVsZS5yZXF1ZXN0KG9wdGlvbnMsIHJlc3AgPT4ge1xuXHRcdFx0bGV0IGJvZHkgPSAnJztcblx0XHRcdHJlc3Auc2V0RW5jb2RpbmcoJ3V0ZjgnKTtcblx0XHRcdHJlc3Aub24oJ2RhdGEnLCBjaHVuayA9PiB7XG5cdFx0XHRcdGJvZHkgKz0gY2h1bms7XG5cdFx0XHR9KTtcblx0XHRcdHJlc3Aub24oJ2VuZCcsICgpID0+IHtcblx0XHRcdFx0aWYgKHJlc3Auc3RhdHVzQ29kZSA+PSA0MDApIHtcblx0XHRcdFx0XHRyZWplY3QoXG5cdFx0XHRcdFx0XHRuZXcgRXJyb3IoYHB1c2ggZmFpbGVkIHdpdGggc3RhdHVzICR7cmVzcC5zdGF0dXNDb2RlfSwgJHtib2R5fWApLFxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmVzb2x2ZSh7IHJlc3AsIGJvZHkgfSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXHRcdHJlcS5vbignZXJyb3InLCBlcnIgPT4ge1xuXHRcdFx0cmVqZWN0KGVycik7XG5cdFx0fSk7XG5cblx0XHRyZXEub24oJ3RpbWVvdXQnLCAoKSA9PiB7XG5cdFx0XHRyZXEuZGVzdHJveShuZXcgRXJyb3IoJ1B1c2hnYXRld2F5IHJlcXVlc3QgdGltZWQgb3V0JykpO1xuXHRcdH0pO1xuXG5cdFx0aWYgKG1ldGhvZCAhPT0gJ0RFTEVURScpIHtcblx0XHRcdHRoaXMucmVnaXN0cnlcblx0XHRcdFx0Lm1ldHJpY3MoKVxuXHRcdFx0XHQudGhlbihtZXRyaWNzID0+IHtcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHRvcHRpb25zLmhlYWRlcnMgJiZcblx0XHRcdFx0XHRcdG9wdGlvbnMuaGVhZGVyc1snQ29udGVudC1FbmNvZGluZyddID09PSAnZ3ppcCdcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG1ldHJpY3MgPSBnemlwU3luYyhtZXRyaWNzKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmVxLndyaXRlKG1ldHJpY3MpO1xuXHRcdFx0XHRcdHJlcS5lbmQoKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmNhdGNoKGVyciA9PiB7XG5cdFx0XHRcdFx0cmVqZWN0KGVycik7XG5cdFx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXEuZW5kKCk7XG5cdFx0fVxuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVHcm91cGluZ3MoZ3JvdXBpbmdzKSB7XG5cdGlmICghZ3JvdXBpbmdzKSB7XG5cdFx0cmV0dXJuICcnO1xuXHR9XG5cdHJldHVybiBPYmplY3Qua2V5cyhncm91cGluZ3MpXG5cdFx0Lm1hcChcblx0XHRcdGtleSA9PlxuXHRcdFx0XHRgLyR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9LyR7ZW5jb2RlVVJJQ29tcG9uZW50KGdyb3VwaW5nc1trZXldKX1gLFxuXHRcdClcblx0XHQuam9pbignJyk7XG59XG5cbmZ1bmN0aW9uIGlzSHR0cHMoaHJlZikge1xuXHRyZXR1cm4gaHJlZi5zZWFyY2goL15odHRwcy8pICE9PSAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQdXNoZ2F0ZXdheTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/pushgateway.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/registry.js":
/*!******************************************************!*\
  !*** ../../node_modules/prom-client/lib/registry.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst { getValueAsString } = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\n\nclass Registry {\n\tstatic get PROMETHEUS_CONTENT_TYPE() {\n\t\treturn 'text/plain; version=0.0.4; charset=utf-8';\n\t}\n\n\tstatic get OPENMETRICS_CONTENT_TYPE() {\n\t\treturn 'application/openmetrics-text; version=1.0.0; charset=utf-8';\n\t}\n\n\tconstructor(regContentType = Registry.PROMETHEUS_CONTENT_TYPE) {\n\t\tthis._metrics = {};\n\t\tthis._collectors = [];\n\t\tthis._defaultLabels = {};\n\t\tif (\n\t\t\tregContentType !== Registry.PROMETHEUS_CONTENT_TYPE &&\n\t\t\tregContentType !== Registry.OPENMETRICS_CONTENT_TYPE\n\t\t) {\n\t\t\tthrow new TypeError(`Content type ${regContentType} is unsupported`);\n\t\t}\n\t\tthis._contentType = regContentType;\n\t}\n\n\tgetMetricsAsArray() {\n\t\treturn Object.values(this._metrics);\n\t}\n\n\tasync getMetricsAsString(metrics) {\n\t\tconst metric =\n\t\t\ttypeof metrics.getForPromString === 'function'\n\t\t\t\t? await metrics.getForPromString()\n\t\t\t\t: await metrics.get();\n\n\t\tconst name = escapeString(metric.name);\n\t\tconst help = `# HELP ${name} ${escapeString(metric.help)}`;\n\t\tconst type = `# TYPE ${name} ${metric.type}`;\n\t\tconst values = [help, type];\n\n\t\tconst defaultLabels =\n\t\t\tObject.keys(this._defaultLabels).length > 0 ? this._defaultLabels : null;\n\n\t\tconst isOpenMetrics =\n\t\t\tthis.contentType === Registry.OPENMETRICS_CONTENT_TYPE;\n\n\t\tfor (const val of metric.values || []) {\n\t\t\tlet { metricName = name, labels = {} } = val;\n\t\t\tconst { sharedLabels = {} } = val;\n\t\t\tif (isOpenMetrics && metric.type === 'counter') {\n\t\t\t\tmetricName = `${metricName}_total`;\n\t\t\t}\n\n\t\t\tif (defaultLabels) {\n\t\t\t\tlabels = { ...labels, ...defaultLabels, ...labels };\n\t\t\t}\n\n\t\t\t// We have to flatten these separately to avoid duplicate labels appearing\n\t\t\t// between the base labels and the shared labels\n\t\t\tconst formattedLabels = formatLabels(labels, sharedLabels);\n\n\t\t\tconst flattenedShared = flattenSharedLabels(sharedLabels);\n\t\t\tconst labelParts = [...formattedLabels, flattenedShared].filter(Boolean);\n\t\t\tconst labelsString = labelParts.length ? `{${labelParts.join(',')}}` : '';\n\t\t\tlet fullMetricLine = `${metricName}${labelsString} ${getValueAsString(\n\t\t\t\tval.value,\n\t\t\t)}`;\n\n\t\t\tconst { exemplar } = val;\n\t\t\tif (exemplar && isOpenMetrics) {\n\t\t\t\tconst formattedExemplars = formatLabels(exemplar.labelSet);\n\t\t\t\tfullMetricLine += ` # {${formattedExemplars.join(\n\t\t\t\t\t',',\n\t\t\t\t)}} ${getValueAsString(exemplar.value)} ${exemplar.timestamp}`;\n\t\t\t}\n\t\t\tvalues.push(fullMetricLine);\n\t\t}\n\n\t\treturn values.join('\\n');\n\t}\n\n\tasync metrics() {\n\t\tconst isOpenMetrics =\n\t\t\tthis.contentType === Registry.OPENMETRICS_CONTENT_TYPE;\n\n\t\tconst promises = this.getMetricsAsArray().map(metric => {\n\t\t\tif (isOpenMetrics && metric.type === 'counter') {\n\t\t\t\tmetric.name = standardizeCounterName(metric.name);\n\t\t\t}\n\t\t\treturn this.getMetricsAsString(metric);\n\t\t});\n\n\t\tconst resolves = await Promise.all(promises);\n\n\t\treturn isOpenMetrics\n\t\t\t? `${resolves.join('\\n')}\\n# EOF\\n`\n\t\t\t: `${resolves.join('\\n\\n')}\\n`;\n\t}\n\n\tregisterMetric(metric) {\n\t\tif (this._metrics[metric.name] && this._metrics[metric.name] !== metric) {\n\t\t\tthrow new Error(\n\t\t\t\t`A metric with the name ${metric.name} has already been registered.`,\n\t\t\t);\n\t\t}\n\n\t\tthis._metrics[metric.name] = metric;\n\t}\n\n\tclear() {\n\t\tthis._metrics = {};\n\t\tthis._defaultLabels = {};\n\t}\n\n\tasync getMetricsAsJSON() {\n\t\tconst metrics = [];\n\t\tconst defaultLabelNames = Object.keys(this._defaultLabels);\n\n\t\tconst promises = [];\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tpromises.push(metric.get());\n\t\t}\n\n\t\tconst resolves = await Promise.all(promises);\n\n\t\tfor (const item of resolves) {\n\t\t\tif (item.values && defaultLabelNames.length > 0) {\n\t\t\t\tfor (const val of item.values) {\n\t\t\t\t\t// Make a copy before mutating\n\t\t\t\t\tval.labels = Object.assign({}, val.labels);\n\n\t\t\t\t\tfor (const labelName of defaultLabelNames) {\n\t\t\t\t\t\tval.labels[labelName] =\n\t\t\t\t\t\t\tval.labels[labelName] || this._defaultLabels[labelName];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmetrics.push(item);\n\t\t}\n\n\t\treturn metrics;\n\t}\n\n\tremoveSingleMetric(name) {\n\t\tdelete this._metrics[name];\n\t}\n\n\tgetSingleMetricAsString(name) {\n\t\treturn this.getMetricsAsString(this._metrics[name]);\n\t}\n\n\tgetSingleMetric(name) {\n\t\treturn this._metrics[name];\n\t}\n\n\tsetDefaultLabels(labels) {\n\t\tthis._defaultLabels = labels;\n\t}\n\n\tresetMetrics() {\n\t\tfor (const metric in this._metrics) {\n\t\t\tthis._metrics[metric].reset();\n\t\t}\n\t}\n\n\tget contentType() {\n\t\treturn this._contentType;\n\t}\n\n\tsetContentType(metricsContentType) {\n\t\tif (\n\t\t\tmetricsContentType === Registry.OPENMETRICS_CONTENT_TYPE ||\n\t\t\tmetricsContentType === Registry.PROMETHEUS_CONTENT_TYPE\n\t\t) {\n\t\t\tthis._contentType = metricsContentType;\n\t\t} else {\n\t\t\tthrow new Error(`Content type ${metricsContentType} is unsupported`);\n\t\t}\n\t}\n\n\tstatic merge(registers) {\n\t\tconst regType = registers[0].contentType;\n\t\tfor (const reg of registers) {\n\t\t\tif (reg.contentType !== regType) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Registers can only be merged if they have the same content type',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst mergedRegistry = new Registry(regType);\n\n\t\tconst metricsToMerge = registers.reduce(\n\t\t\t(acc, reg) => acc.concat(reg.getMetricsAsArray()),\n\t\t\t[],\n\t\t);\n\n\t\tmetricsToMerge.forEach(mergedRegistry.registerMetric, mergedRegistry);\n\t\treturn mergedRegistry;\n\t}\n}\n\nfunction formatLabels(labels, exclude) {\n\tconst { hasOwnProperty } = Object.prototype;\n\tconst formatted = [];\n\tfor (const [name, value] of Object.entries(labels)) {\n\t\tif (!exclude || !hasOwnProperty.call(exclude, name)) {\n\t\t\tformatted.push(`${name}=\"${escapeLabelValue(value)}\"`);\n\t\t}\n\t}\n\treturn formatted;\n}\n\nconst sharedLabelCache = new WeakMap();\nfunction flattenSharedLabels(labels) {\n\tconst cached = sharedLabelCache.get(labels);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst formattedLabels = formatLabels(labels);\n\tconst flattened = formattedLabels.join(',');\n\tsharedLabelCache.set(labels, flattened);\n\treturn flattened;\n}\nfunction escapeLabelValue(str) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\treturn escapeString(str).replace(/\"/g, '\\\\\"');\n}\nfunction escapeString(str) {\n\treturn str.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n');\n}\nfunction standardizeCounterName(name) {\n\treturn name.replace(/_total$/, '');\n}\n\nmodule.exports = Registry;\nmodule.exports.globalRegistry = new Registry();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/registry.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/summary.js":
/*!*****************************************************!*\
  !*** ../../node_modules/prom-client/lib/summary.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Summary\n */\n\n\nconst util = __webpack_require__(/*! util */ \"util\");\nconst { getLabels, hashObject, removeLabels } = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/prom-client/lib/util.js\");\nconst { validateLabel } = __webpack_require__(/*! ./validation */ \"(rsc)/../../node_modules/prom-client/lib/validation.js\");\nconst { Metric } = __webpack_require__(/*! ./metric */ \"(rsc)/../../node_modules/prom-client/lib/metric.js\");\nconst timeWindowQuantiles = __webpack_require__(/*! ./timeWindowQuantiles */ \"(rsc)/../../node_modules/prom-client/lib/timeWindowQuantiles.js\");\n\nconst DEFAULT_COMPRESS_COUNT = 1000; // every 1000 measurements\n\nclass Summary extends Metric {\n\tconstructor(config) {\n\t\tsuper(config, {\n\t\t\tpercentiles: [0.01, 0.05, 0.5, 0.9, 0.95, 0.99, 0.999],\n\t\t\tcompressCount: DEFAULT_COMPRESS_COUNT,\n\t\t\thashMap: {},\n\t\t});\n\n\t\tthis.type = 'summary';\n\n\t\tfor (const label of this.labelNames) {\n\t\t\tif (label === 'quantile')\n\t\t\t\tthrow new Error('quantile is a reserved label keyword');\n\t\t}\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: {\n\t\t\t\t\tlabels: {},\n\t\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tsum: 0,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Observe a value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\tconst hashKeys = Object.keys(this.hashMap);\n\t\tconst values = [];\n\n\t\thashKeys.forEach(hashKey => {\n\t\t\tconst s = this.hashMap[hashKey];\n\t\t\tif (s) {\n\t\t\t\tif (this.pruneAgedBuckets && s.td.size() === 0) {\n\t\t\t\t\tdelete this.hashMap[hashKey];\n\t\t\t\t} else {\n\t\t\t\t\textractSummariesForExport(s, this.percentiles).forEach(v => {\n\t\t\t\t\t\tvalues.push(v);\n\t\t\t\t\t});\n\t\t\t\t\tvalues.push(getSumForExport(s, this));\n\t\t\t\t\tvalues.push(getCountForExport(s, this));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype: this.type,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\treset() {\n\t\tconst data = Object.values(this.hashMap);\n\t\tdata.forEach(s => {\n\t\t\ts.td.reset();\n\t\t\ts.count = 0;\n\t\t\ts.sum = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = summary.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t *\tend(); //Observe the duration of expensiveXHRRequest\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels, this.sortedLabelNames);\n\t}\n}\n\nfunction extractSummariesForExport(summaryOfLabels, percentiles) {\n\tsummaryOfLabels.td.compress();\n\n\treturn percentiles.map(percentile => {\n\t\tconst percentileValue = summaryOfLabels.td.percentile(percentile);\n\t\treturn {\n\t\t\tlabels: Object.assign({ quantile: percentile }, summaryOfLabels.labels),\n\t\t\tvalue: percentileValue ? percentileValue : 0,\n\t\t};\n\t});\n}\n\nfunction getCountForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_count`,\n\t\tlabels: value.labels,\n\t\tvalue: value.count,\n\t};\n}\n\nfunction getSumForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_sum`,\n\t\tlabels: value.labels,\n\t\tvalue: value.sum,\n\t};\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.observe(Object.assign({}, startLabels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t};\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`,\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels, this.sortedLabelNames);\n\t\tlet summaryOfLabel = this.hashMap[hash];\n\t\tif (!summaryOfLabel) {\n\t\t\tsummaryOfLabel = {\n\t\t\t\tlabels: labelValuePair.labels,\n\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\tcount: 0,\n\t\t\t\tsum: 0,\n\t\t\t};\n\t\t}\n\n\t\tsummaryOfLabel.td.push(labelValuePair.value);\n\t\tsummaryOfLabel.count++;\n\t\tif (summaryOfLabel.count % this.compressCount === 0) {\n\t\t\tsummaryOfLabel.td.compress();\n\t\t}\n\t\tsummaryOfLabel.sum += labelValuePair.value;\n\t\tthis.hashMap[hash] = summaryOfLabel;\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (value === undefined) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {},\n\t\t};\n\t}\n\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t};\n}\n\nmodule.exports = Summary;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/summary.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/timeWindowQuantiles.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/prom-client/lib/timeWindowQuantiles.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst { TDigest } = __webpack_require__(/*! tdigest */ \"(rsc)/../../node_modules/tdigest/tdigest.js\");\n\nclass TimeWindowQuantiles {\n\tconstructor(maxAgeSeconds, ageBuckets) {\n\t\tthis.maxAgeSeconds = maxAgeSeconds || 0;\n\t\tthis.ageBuckets = ageBuckets || 0;\n\n\t\tthis.shouldRotate = maxAgeSeconds && ageBuckets;\n\n\t\tthis.ringBuffer = Array(ageBuckets).fill(new TDigest());\n\t\tthis.currentBuffer = 0;\n\n\t\tthis.lastRotateTimestampMillis = Date.now();\n\t\tthis.durationBetweenRotatesMillis =\n\t\t\t(maxAgeSeconds * 1000) / ageBuckets || Infinity;\n\t}\n\n\tsize() {\n\t\tconst bucket = rotate.call(this);\n\t\treturn bucket.size();\n\t}\n\n\tpercentile(quantile) {\n\t\tconst bucket = rotate.call(this);\n\t\treturn bucket.percentile(quantile);\n\t}\n\n\tpush(value) {\n\t\trotate.call(this);\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.push(value);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.reset();\n\t\t});\n\t}\n\n\tcompress() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.compress();\n\t\t});\n\t}\n}\n\nfunction rotate() {\n\tlet timeSinceLastRotateMillis = Date.now() - this.lastRotateTimestampMillis;\n\twhile (\n\t\ttimeSinceLastRotateMillis > this.durationBetweenRotatesMillis &&\n\t\tthis.shouldRotate\n\t) {\n\t\tthis.ringBuffer[this.currentBuffer] = new TDigest();\n\n\t\tif (++this.currentBuffer >= this.ringBuffer.length) {\n\t\t\tthis.currentBuffer = 0;\n\t\t}\n\t\ttimeSinceLastRotateMillis -= this.durationBetweenRotatesMillis;\n\t\tthis.lastRotateTimestampMillis += this.durationBetweenRotatesMillis;\n\t}\n\treturn this.ringBuffer[this.currentBuffer];\n}\n\nmodule.exports = TimeWindowQuantiles;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi90aW1lV2luZG93UXVhbnRpbGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFFBQVEsVUFBVSxFQUFFLG1CQUFPLENBQUMsNERBQVM7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvdGltZVdpbmRvd1F1YW50aWxlcy5qcz8xOWVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBURGlnZXN0IH0gPSByZXF1aXJlKCd0ZGlnZXN0Jyk7XG5cbmNsYXNzIFRpbWVXaW5kb3dRdWFudGlsZXMge1xuXHRjb25zdHJ1Y3RvcihtYXhBZ2VTZWNvbmRzLCBhZ2VCdWNrZXRzKSB7XG5cdFx0dGhpcy5tYXhBZ2VTZWNvbmRzID0gbWF4QWdlU2Vjb25kcyB8fCAwO1xuXHRcdHRoaXMuYWdlQnVja2V0cyA9IGFnZUJ1Y2tldHMgfHwgMDtcblxuXHRcdHRoaXMuc2hvdWxkUm90YXRlID0gbWF4QWdlU2Vjb25kcyAmJiBhZ2VCdWNrZXRzO1xuXG5cdFx0dGhpcy5yaW5nQnVmZmVyID0gQXJyYXkoYWdlQnVja2V0cykuZmlsbChuZXcgVERpZ2VzdCgpKTtcblx0XHR0aGlzLmN1cnJlbnRCdWZmZXIgPSAwO1xuXG5cdFx0dGhpcy5sYXN0Um90YXRlVGltZXN0YW1wTWlsbGlzID0gRGF0ZS5ub3coKTtcblx0XHR0aGlzLmR1cmF0aW9uQmV0d2VlblJvdGF0ZXNNaWxsaXMgPVxuXHRcdFx0KG1heEFnZVNlY29uZHMgKiAxMDAwKSAvIGFnZUJ1Y2tldHMgfHwgSW5maW5pdHk7XG5cdH1cblxuXHRzaXplKCkge1xuXHRcdGNvbnN0IGJ1Y2tldCA9IHJvdGF0ZS5jYWxsKHRoaXMpO1xuXHRcdHJldHVybiBidWNrZXQuc2l6ZSgpO1xuXHR9XG5cblx0cGVyY2VudGlsZShxdWFudGlsZSkge1xuXHRcdGNvbnN0IGJ1Y2tldCA9IHJvdGF0ZS5jYWxsKHRoaXMpO1xuXHRcdHJldHVybiBidWNrZXQucGVyY2VudGlsZShxdWFudGlsZSk7XG5cdH1cblxuXHRwdXNoKHZhbHVlKSB7XG5cdFx0cm90YXRlLmNhbGwodGhpcyk7XG5cdFx0dGhpcy5yaW5nQnVmZmVyLmZvckVhY2goYnVja2V0ID0+IHtcblx0XHRcdGJ1Y2tldC5wdXNoKHZhbHVlKTtcblx0XHR9KTtcblx0fVxuXG5cdHJlc2V0KCkge1xuXHRcdHRoaXMucmluZ0J1ZmZlci5mb3JFYWNoKGJ1Y2tldCA9PiB7XG5cdFx0XHRidWNrZXQucmVzZXQoKTtcblx0XHR9KTtcblx0fVxuXG5cdGNvbXByZXNzKCkge1xuXHRcdHRoaXMucmluZ0J1ZmZlci5mb3JFYWNoKGJ1Y2tldCA9PiB7XG5cdFx0XHRidWNrZXQuY29tcHJlc3MoKTtcblx0XHR9KTtcblx0fVxufVxuXG5mdW5jdGlvbiByb3RhdGUoKSB7XG5cdGxldCB0aW1lU2luY2VMYXN0Um90YXRlTWlsbGlzID0gRGF0ZS5ub3coKSAtIHRoaXMubGFzdFJvdGF0ZVRpbWVzdGFtcE1pbGxpcztcblx0d2hpbGUgKFxuXHRcdHRpbWVTaW5jZUxhc3RSb3RhdGVNaWxsaXMgPiB0aGlzLmR1cmF0aW9uQmV0d2VlblJvdGF0ZXNNaWxsaXMgJiZcblx0XHR0aGlzLnNob3VsZFJvdGF0ZVxuXHQpIHtcblx0XHR0aGlzLnJpbmdCdWZmZXJbdGhpcy5jdXJyZW50QnVmZmVyXSA9IG5ldyBURGlnZXN0KCk7XG5cblx0XHRpZiAoKyt0aGlzLmN1cnJlbnRCdWZmZXIgPj0gdGhpcy5yaW5nQnVmZmVyLmxlbmd0aCkge1xuXHRcdFx0dGhpcy5jdXJyZW50QnVmZmVyID0gMDtcblx0XHR9XG5cdFx0dGltZVNpbmNlTGFzdFJvdGF0ZU1pbGxpcyAtPSB0aGlzLmR1cmF0aW9uQmV0d2VlblJvdGF0ZXNNaWxsaXM7XG5cdFx0dGhpcy5sYXN0Um90YXRlVGltZXN0YW1wTWlsbGlzICs9IHRoaXMuZHVyYXRpb25CZXR3ZWVuUm90YXRlc01pbGxpcztcblx0fVxuXHRyZXR1cm4gdGhpcy5yaW5nQnVmZmVyW3RoaXMuY3VycmVudEJ1ZmZlcl07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVGltZVdpbmRvd1F1YW50aWxlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/timeWindowQuantiles.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/util.js":
/*!**************************************************!*\
  !*** ../../node_modules/prom-client/lib/util.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.getValueAsString = function getValueString(value) {\n\tif (Number.isNaN(value)) {\n\t\treturn 'Nan';\n\t} else if (!Number.isFinite(value)) {\n\t\tif (value < 0) {\n\t\t\treturn '-Inf';\n\t\t} else {\n\t\t\treturn '+Inf';\n\t\t}\n\t} else {\n\t\treturn `${value}`;\n\t}\n};\n\nexports.removeLabels = function removeLabels(\n\thashMap,\n\tlabels,\n\tsortedLabelNames,\n) {\n\tconst hash = hashObject(labels, sortedLabelNames);\n\tdelete hashMap[hash];\n};\n\nexports.setValue = function setValue(hashMap, value, labels) {\n\tconst hash = hashObject(labels);\n\thashMap[hash] = {\n\t\tvalue: typeof value === 'number' ? value : 0,\n\t\tlabels: labels || {},\n\t};\n\treturn hashMap;\n};\n\nexports.setValueDelta = function setValueDelta(\n\thashMap,\n\tdeltaValue,\n\tlabels,\n\thash = '',\n) {\n\tconst value = typeof deltaValue === 'number' ? deltaValue : 0;\n\tif (hashMap[hash]) {\n\t\thashMap[hash].value += value;\n\t} else {\n\t\thashMap[hash] = { value, labels };\n\t}\n\treturn hashMap;\n};\n\nexports.getLabels = function (labelNames, args) {\n\tif (typeof args[0] === 'object') {\n\t\treturn args[0];\n\t}\n\n\tif (labelNames.length !== args.length) {\n\t\tthrow new Error(\n\t\t\t`Invalid number of arguments (${args.length}): \"${args.join(\n\t\t\t\t', ',\n\t\t\t)}\" for label names (${labelNames.length}): \"${labelNames.join(', ')}\".`,\n\t\t);\n\t}\n\n\tconst acc = {};\n\tfor (let i = 0; i < labelNames.length; i++) {\n\t\tacc[labelNames[i]] = args[i];\n\t}\n\treturn acc;\n};\n\nfunction fastHashObject(keys, labels) {\n\tif (keys.length === 0) {\n\t\treturn '';\n\t}\n\n\tlet hash = '';\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\tconst value = labels[key];\n\t\tif (value === undefined) continue;\n\n\t\thash += `${key}:${value},`;\n\t}\n\n\treturn hash;\n}\n\nfunction hashObject(labels, labelNames) {\n\t// We don't actually need a hash here. We just need a string that\n\t// is unique for each possible labels object and consistent across\n\t// calls with equivalent labels objects.\n\n\tif (labelNames) {\n\t\treturn fastHashObject(labelNames, labels);\n\t}\n\n\tconst keys = Object.keys(labels);\n\tif (keys.length > 1) {\n\t\tkeys.sort(); // need consistency across calls\n\t}\n\n\treturn fastHashObject(keys, labels);\n}\nexports.hashObject = hashObject;\n\nexports.isObject = function isObject(obj) {\n\treturn obj !== null && typeof obj === 'object';\n};\n\nexports.nowTimestamp = function nowTimestamp() {\n\treturn Date.now() / 1000;\n};\n\nclass Grouper extends Map {\n\t/**\n\t * Adds the `value` to the `key`'s array of values.\n\t * @param {*} key Key to set.\n\t * @param {*} value Value to add to `key`'s array.\n\t * @returns {undefined} undefined.\n\t */\n\tadd(key, value) {\n\t\tif (this.has(key)) {\n\t\t\tthis.get(key).push(value);\n\t\t} else {\n\t\t\tthis.set(key, [value]);\n\t\t}\n\t}\n}\n\nexports.Grouper = Grouper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSCxZQUFZLE1BQU07QUFDbEI7QUFDQTs7QUFFQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQ0FBbUMsWUFBWSxNQUFNO0FBQ3JEO0FBQ0EsS0FBSyxxQkFBcUIsa0JBQWtCLE1BQU0sc0JBQXNCO0FBQ3hFO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBOztBQUVBLGFBQWEsSUFBSSxHQUFHLE1BQU07QUFDMUI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCOztBQUVsQixnQkFBZ0I7QUFDaEI7QUFDQTs7QUFFQSxvQkFBb0I7QUFDcEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLEdBQUc7QUFDZixZQUFZLEdBQUc7QUFDZixjQUFjLFdBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL0BwbHVzOTkvY3JvbngtdWkvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi91dGlsLmpzPzk3OTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmdldFZhbHVlQXNTdHJpbmcgPSBmdW5jdGlvbiBnZXRWYWx1ZVN0cmluZyh2YWx1ZSkge1xuXHRpZiAoTnVtYmVyLmlzTmFOKHZhbHVlKSkge1xuXHRcdHJldHVybiAnTmFuJztcblx0fSBlbHNlIGlmICghTnVtYmVyLmlzRmluaXRlKHZhbHVlKSkge1xuXHRcdGlmICh2YWx1ZSA8IDApIHtcblx0XHRcdHJldHVybiAnLUluZic7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiAnK0luZic7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJldHVybiBgJHt2YWx1ZX1gO1xuXHR9XG59O1xuXG5leHBvcnRzLnJlbW92ZUxhYmVscyA9IGZ1bmN0aW9uIHJlbW92ZUxhYmVscyhcblx0aGFzaE1hcCxcblx0bGFiZWxzLFxuXHRzb3J0ZWRMYWJlbE5hbWVzLFxuKSB7XG5cdGNvbnN0IGhhc2ggPSBoYXNoT2JqZWN0KGxhYmVscywgc29ydGVkTGFiZWxOYW1lcyk7XG5cdGRlbGV0ZSBoYXNoTWFwW2hhc2hdO1xufTtcblxuZXhwb3J0cy5zZXRWYWx1ZSA9IGZ1bmN0aW9uIHNldFZhbHVlKGhhc2hNYXAsIHZhbHVlLCBsYWJlbHMpIHtcblx0Y29uc3QgaGFzaCA9IGhhc2hPYmplY3QobGFiZWxzKTtcblx0aGFzaE1hcFtoYXNoXSA9IHtcblx0XHR2YWx1ZTogdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyA/IHZhbHVlIDogMCxcblx0XHRsYWJlbHM6IGxhYmVscyB8fCB7fSxcblx0fTtcblx0cmV0dXJuIGhhc2hNYXA7XG59O1xuXG5leHBvcnRzLnNldFZhbHVlRGVsdGEgPSBmdW5jdGlvbiBzZXRWYWx1ZURlbHRhKFxuXHRoYXNoTWFwLFxuXHRkZWx0YVZhbHVlLFxuXHRsYWJlbHMsXG5cdGhhc2ggPSAnJyxcbikge1xuXHRjb25zdCB2YWx1ZSA9IHR5cGVvZiBkZWx0YVZhbHVlID09PSAnbnVtYmVyJyA/IGRlbHRhVmFsdWUgOiAwO1xuXHRpZiAoaGFzaE1hcFtoYXNoXSkge1xuXHRcdGhhc2hNYXBbaGFzaF0udmFsdWUgKz0gdmFsdWU7XG5cdH0gZWxzZSB7XG5cdFx0aGFzaE1hcFtoYXNoXSA9IHsgdmFsdWUsIGxhYmVscyB9O1xuXHR9XG5cdHJldHVybiBoYXNoTWFwO1xufTtcblxuZXhwb3J0cy5nZXRMYWJlbHMgPSBmdW5jdGlvbiAobGFiZWxOYW1lcywgYXJncykge1xuXHRpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdvYmplY3QnKSB7XG5cdFx0cmV0dXJuIGFyZ3NbMF07XG5cdH1cblxuXHRpZiAobGFiZWxOYW1lcy5sZW5ndGggIT09IGFyZ3MubGVuZ3RoKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFxuXHRcdFx0YEludmFsaWQgbnVtYmVyIG9mIGFyZ3VtZW50cyAoJHthcmdzLmxlbmd0aH0pOiBcIiR7YXJncy5qb2luKFxuXHRcdFx0XHQnLCAnLFxuXHRcdFx0KX1cIiBmb3IgbGFiZWwgbmFtZXMgKCR7bGFiZWxOYW1lcy5sZW5ndGh9KTogXCIke2xhYmVsTmFtZXMuam9pbignLCAnKX1cIi5gLFxuXHRcdCk7XG5cdH1cblxuXHRjb25zdCBhY2MgPSB7fTtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsYWJlbE5hbWVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0YWNjW2xhYmVsTmFtZXNbaV1dID0gYXJnc1tpXTtcblx0fVxuXHRyZXR1cm4gYWNjO1xufTtcblxuZnVuY3Rpb24gZmFzdEhhc2hPYmplY3Qoa2V5cywgbGFiZWxzKSB7XG5cdGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiAnJztcblx0fVxuXG5cdGxldCBoYXNoID0gJyc7XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y29uc3Qga2V5ID0ga2V5c1tpXTtcblx0XHRjb25zdCB2YWx1ZSA9IGxhYmVsc1trZXldO1xuXHRcdGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSBjb250aW51ZTtcblxuXHRcdGhhc2ggKz0gYCR7a2V5fToke3ZhbHVlfSxgO1xuXHR9XG5cblx0cmV0dXJuIGhhc2g7XG59XG5cbmZ1bmN0aW9uIGhhc2hPYmplY3QobGFiZWxzLCBsYWJlbE5hbWVzKSB7XG5cdC8vIFdlIGRvbid0IGFjdHVhbGx5IG5lZWQgYSBoYXNoIGhlcmUuIFdlIGp1c3QgbmVlZCBhIHN0cmluZyB0aGF0XG5cdC8vIGlzIHVuaXF1ZSBmb3IgZWFjaCBwb3NzaWJsZSBsYWJlbHMgb2JqZWN0IGFuZCBjb25zaXN0ZW50IGFjcm9zc1xuXHQvLyBjYWxscyB3aXRoIGVxdWl2YWxlbnQgbGFiZWxzIG9iamVjdHMuXG5cblx0aWYgKGxhYmVsTmFtZXMpIHtcblx0XHRyZXR1cm4gZmFzdEhhc2hPYmplY3QobGFiZWxOYW1lcywgbGFiZWxzKTtcblx0fVxuXG5cdGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhsYWJlbHMpO1xuXHRpZiAoa2V5cy5sZW5ndGggPiAxKSB7XG5cdFx0a2V5cy5zb3J0KCk7IC8vIG5lZWQgY29uc2lzdGVuY3kgYWNyb3NzIGNhbGxzXG5cdH1cblxuXHRyZXR1cm4gZmFzdEhhc2hPYmplY3Qoa2V5cywgbGFiZWxzKTtcbn1cbmV4cG9ydHMuaGFzaE9iamVjdCA9IGhhc2hPYmplY3Q7XG5cbmV4cG9ydHMuaXNPYmplY3QgPSBmdW5jdGlvbiBpc09iamVjdChvYmopIHtcblx0cmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jztcbn07XG5cbmV4cG9ydHMubm93VGltZXN0YW1wID0gZnVuY3Rpb24gbm93VGltZXN0YW1wKCkge1xuXHRyZXR1cm4gRGF0ZS5ub3coKSAvIDEwMDA7XG59O1xuXG5jbGFzcyBHcm91cGVyIGV4dGVuZHMgTWFwIHtcblx0LyoqXG5cdCAqIEFkZHMgdGhlIGB2YWx1ZWAgdG8gdGhlIGBrZXlgJ3MgYXJyYXkgb2YgdmFsdWVzLlxuXHQgKiBAcGFyYW0geyp9IGtleSBLZXkgdG8gc2V0LlxuXHQgKiBAcGFyYW0geyp9IHZhbHVlIFZhbHVlIHRvIGFkZCB0byBga2V5YCdzIGFycmF5LlxuXHQgKiBAcmV0dXJucyB7dW5kZWZpbmVkfSB1bmRlZmluZWQuXG5cdCAqL1xuXHRhZGQoa2V5LCB2YWx1ZSkge1xuXHRcdGlmICh0aGlzLmhhcyhrZXkpKSB7XG5cdFx0XHR0aGlzLmdldChrZXkpLnB1c2godmFsdWUpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnNldChrZXksIFt2YWx1ZV0pO1xuXHRcdH1cblx0fVxufVxuXG5leHBvcnRzLkdyb3VwZXIgPSBHcm91cGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/util.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/prom-client/lib/validation.js":
/*!********************************************************!*\
  !*** ../../node_modules/prom-client/lib/validation.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst util = __webpack_require__(/*! util */ \"util\");\n\n// These are from https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels\nconst metricRegexp = /^[a-zA-Z_:][a-zA-Z0-9_:]*$/;\nconst labelRegexp = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\nexports.validateMetricName = function (name) {\n\treturn metricRegexp.test(name);\n};\n\nexports.validateLabelName = function (names = []) {\n\treturn names.every(name => labelRegexp.test(name));\n};\n\nexports.validateLabel = function validateLabel(savedLabels, labels) {\n\tfor (const label in labels) {\n\t\tif (!savedLabels.includes(label)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Added label \"${label}\" is not included in initial labelset: ${util.inspect(\n\t\t\t\t\tsavedLabels,\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL3Byb20tY2xpZW50L2xpYi92YWxpZGF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTs7QUFFM0I7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBLHlCQUF5QjtBQUN6QjtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTSx5Q0FBeUM7QUFDbkU7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGx1czk5L2Nyb254LXVpLy4uLy4uL25vZGVfbW9kdWxlcy9wcm9tLWNsaWVudC9saWIvdmFsaWRhdGlvbi5qcz8yYjkwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuLy8gVGhlc2UgYXJlIGZyb20gaHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2RvY3MvY29uY2VwdHMvZGF0YV9tb2RlbC8jbWV0cmljLW5hbWVzLWFuZC1sYWJlbHNcbmNvbnN0IG1ldHJpY1JlZ2V4cCA9IC9eW2EtekEtWl86XVthLXpBLVowLTlfOl0qJC87XG5jb25zdCBsYWJlbFJlZ2V4cCA9IC9eW2EtekEtWl9dW2EtekEtWjAtOV9dKiQvO1xuXG5leHBvcnRzLnZhbGlkYXRlTWV0cmljTmFtZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG5cdHJldHVybiBtZXRyaWNSZWdleHAudGVzdChuYW1lKTtcbn07XG5cbmV4cG9ydHMudmFsaWRhdGVMYWJlbE5hbWUgPSBmdW5jdGlvbiAobmFtZXMgPSBbXSkge1xuXHRyZXR1cm4gbmFtZXMuZXZlcnkobmFtZSA9PiBsYWJlbFJlZ2V4cC50ZXN0KG5hbWUpKTtcbn07XG5cbmV4cG9ydHMudmFsaWRhdGVMYWJlbCA9IGZ1bmN0aW9uIHZhbGlkYXRlTGFiZWwoc2F2ZWRMYWJlbHMsIGxhYmVscykge1xuXHRmb3IgKGNvbnN0IGxhYmVsIGluIGxhYmVscykge1xuXHRcdGlmICghc2F2ZWRMYWJlbHMuaW5jbHVkZXMobGFiZWwpKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXG5cdFx0XHRcdGBBZGRlZCBsYWJlbCBcIiR7bGFiZWx9XCIgaXMgbm90IGluY2x1ZGVkIGluIGluaXRpYWwgbGFiZWxzZXQ6ICR7dXRpbC5pbnNwZWN0KFxuXHRcdFx0XHRcdHNhdmVkTGFiZWxzLFxuXHRcdFx0XHQpfWAsXG5cdFx0XHQpO1xuXHRcdH1cblx0fVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/prom-client/lib/validation.js\n");

/***/ })

};
;