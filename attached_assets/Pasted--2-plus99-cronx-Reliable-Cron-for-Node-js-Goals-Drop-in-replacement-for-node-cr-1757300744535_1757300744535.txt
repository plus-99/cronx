## 2️⃣ `@plus99/cronx` → Reliable Cron for Node.js

### 🎯 Goals

* Drop-in replacement for `node-cron`, but **reliable and distributed-ready**.
* **Persistence** → no lost jobs after restarts.
* **Observability** → metrics, logs, UI to see job status.
* **Clustering support** → only one worker runs a job even if multiple replicas exist.

---

### 🏗️ Design

#### API

```ts
import { Cronx } from "@plus99/cronx";

const cronx = new Cronx({
  storage: "sqlite://./cronx.db",  // or postgres://, redis://
  metrics: true
});

// Run every minute
cronx.schedule("*/1 * * * *", async () => {
  console.log("Task executed at", new Date());
}, { name: "heartbeat" });

// Retry + backoff
cronx.schedule("0 * * * *", async () => {
  throw new Error("Failing job");
}, { name: "fail-job", retries: 3, backoff: "exponential" });

// Start runner
cronx.start();
```

---

#### Core Components

1. **Scheduler**

   * Uses `cron-parser` under the hood.
   * Supports seconds precision (`*/5 * * * * *`).

2. **Persistence Layer**

   * Pluggable: SQLite (default), Postgres, Redis.
   * Tracks:

     * job metadata (name, schedule, retries, options)
     * job runs (status, start/end time, error if any)

3. **Execution Engine**

   * Ensures **single execution across cluster** (using DB locks or Redis).
   * Retries + backoff strategies (`fixed`, `exponential`).

4. **Observability**

   * Exposes metrics (Prometheus): `cronx_jobs_total`, `cronx_jobs_failed`.
   * Logs structured events.
   * Optional small **UI** (React) to view jobs + history.

5. **DX / Usability**

   * TypeScript types.
   * Clear error messages.
   * CLI tool:

```bash
npx cronx list
npx cronx run fail-job
npx cronx dashboard
```

---

### 🔑 Differentiation from others

| Feature            | node-cron | Agenda.js  | BullMQ    | **cronx**                 |
| ------------------ | --------- | ---------- | --------- | ------------------------- |
| Persistence        | ❌         | ✅ (Mongo)  | ✅ (Redis) | ✅ (SQLite/Postgres/Redis) |
| Simple Cron Syntax | ✅         | ✅          | ❌         | ✅                         |
| Clustering         | ❌         | ⚠️ Limited | ✅         | ✅                         |
| Retries/Backoff    | ❌         | ✅          | ✅         | ✅                         |
| UI Dashboard       | ❌         | ❌          | 3rd party | ✅ (built-in)              |
| Metrics/Tracing    | ❌         | ❌          | Limited   | ✅                         |

---

